/*! skylinkjs - v0.5.3 - 2014-11-03 */
(function(){function Skylink(){return this instanceof Skylink?void(this.VERSION="0.5.3"):new Skylink}this.Skylink=Skylink,Skylink.prototype.DATA_CHANNEL_STATE={CONNECTING:"connecting",OPEN:"open",CLOSING:"closing",CLOSED:"closed",ERROR:"error"},Skylink.prototype._enableDataChannel=!0,Skylink.prototype._dataChannels=[],Skylink.prototype._createDataChannel=function(peerId,dc){var self=this,channelName=dc?dc.label:peerId,pc=self._peerConnections[peerId],dcOpened=function(){log.log([peerId,"RTCDataChannel",channelName,"Datachannel state ->"],"open"),log.log([peerId,"RTCDataChannel",channelName,"Binary type support ->"],dc.binaryType),self._dataChannels[peerId]=dc,self._trigger("dataChannelState",dc.readyState,peerId)};if("SCTP"!==window.webrtcDetectedDCSupport&&"plugin"!==window.webrtcDetectedDCSupport)return void log.warn([peerId,"RTCDataChannel",channelName,"SCTP not supported"]);if(!dc){dc=pc.createDataChannel(channelName),self._trigger("dataChannelState",dc.readyState,peerId);var checkDcOpened=setInterval(function(){dc.readyState===self.DATA_CHANNEL_STATE.OPEN&&(clearInterval(checkDcOpened),dcOpened())},50)}dc.readyState===self.DATA_CHANNEL_STATE.OPEN?dcOpened():dc.onopen=dcOpened,dc.onerror=function(error){log.error([peerId,"RTCDataChannel",channelName,"Exception occurred in datachannel:"],error),self._trigger("dataChannelState",self.DATA_CHANNEL_STATE.ERROR,peerId,error)},dc.onclose=function(){log.debug([peerId,"RTCDataChannel",channelName,"Datachannel state ->"],"closed"),self._closeDataChannel(peerId),self._trigger("dataChannelState",self.DATA_CHANNEL_STATE.CLOSED,peerId),self._peerConnections[peerId]&&self._createDataChannel(peerId)},dc.onmessage=function(event){self._dataChannelProtocolHandler(event.data,peerId,channelName)}},Skylink.prototype._sendDataChannelMessage=function(peerId,data){var dc=this._dataChannels[peerId];if(!dc)return void log.error([peerId,"RTCDataChannel",dc.label,"Datachannel connection to peer does not exist"]);if(dc.readyState===this.DATA_CHANNEL_STATE.OPEN){var dataString="object"==typeof data?JSON.stringify(data):data;log.debug([peerId,"RTCDataChannel",dc.label,"Sending to peer ->"],data.type||"DATA"),dc.send(dataString)}else log.error([peerId,"RTCDataChannel",dc.label,"Datachannel is not opened"],"State: "+dc.readyState),this._trigger("dataChannelState",this.DATA_CHANNEL_STATE.ERROR,peerId,"Datachannel is not ready.\nState is: "+dc.readyState)},Skylink.prototype._closeDataChannel=function(peerId){var dc=this._dataChannels[peerId];dc&&(dc.readyState!==this.DATA_CHANNEL_STATE.CLOSED&&dc.close(),delete this._dataChannels[peerId],log.log([peerId,"RTCDataChannel",dc.label,"Sucessfully removed datachannel"]))},Skylink.prototype._CHUNK_FILE_SIZE=49152,Skylink.prototype._MOZ_CHUNK_FILE_SIZE=16384,Skylink.prototype.DATA_TRANSFER_DATA_TYPE={BINARY_STRING:"binaryString",ARRAY_BUFFER:"arrayBuffer",BLOB:"blob"},Skylink.prototype._base64ToBlob=function(dataURL){for(var byteString=atob(dataURL.replace(/\s\r\n/g,"")),ab=new ArrayBuffer(byteString.length),ia=new Uint8Array(ab),j=0;j<byteString.length;j++)ia[j]=byteString.charCodeAt(j);return new Blob([ab])},Skylink.prototype._chunkBlobData=function(blob,blobByteSize){var chunksArray=[],startCount=0,endCount=0;if(blobByteSize>this._CHUNK_FILE_SIZE){for(;blobByteSize-1>endCount;)endCount=startCount+this._CHUNK_FILE_SIZE,chunksArray.push(blob.slice(startCount,endCount)),startCount+=this._CHUNK_FILE_SIZE;blobByteSize-(startCount+1)>0&&chunksArray.push(blob.slice(startCount,blobByteSize-1))}else chunksArray.push(blob);return chunksArray},Skylink.prototype._DC_PROTOCOL_TYPE={WRQ:"WRQ",ACK:"ACK",ERROR:"ERROR",CANCEL:"CANCEL",MESSAGE:"MESSAGE"},Skylink.prototype.DATA_TRANSFER_TYPE={UPLOAD:"upload",DOWNLOAD:"download"},Skylink.prototype.DATA_TRANSFER_STATE={UPLOAD_REQUEST:"request",UPLOAD_STARTED:"uploadStarted",DOWNLOAD_STARTED:"downloadStarted",REJECTED:"rejected",CANCEL:"cancel",ERROR:"error",UPLOADING:"uploading",DOWNLOADING:"downloading",UPLOAD_COMPLETED:"uploadCompleted",DOWNLOAD_COMPLETED:"downloadCompleted"},Skylink.prototype._uploadDataTransfers=[],Skylink.prototype._uploadDataSessions=[],Skylink.prototype._downloadDataTransfers=[],Skylink.prototype._downloadDataSessions=[],Skylink.prototype._dataTransfersTimeout=[],Skylink.prototype._setDataChannelTimeout=function(peerId,timeout,isSender){var self=this;self._dataTransfersTimeout[peerId]||(self._dataTransfersTimeout[peerId]=[]);var type=isSender?self.DATA_TRANSFER_TYPE.UPLOAD:self.DATA_TRANSFER_TYPE.DOWNLOAD;self._dataTransfersTimeout[peerId][type]=setTimeout(function(){var name;self._dataTransfersTimeout[peerId][type]&&(isSender?(name=self._uploadDataSessions[peerId].name,delete self._uploadDataTransfers[peerId],delete self._uploadDataSessions[peerId]):(name=self._downloadDataSessions[peerId].name,delete self._downloadDataTransfers[peerId],delete self._downloadDataSessions[peerId]),self._sendDataChannelMessage(peerId,{type:self._DC_PROTOCOL_TYPE.ERROR,sender:self._user.sid,name:name,content:"Connection Timeout. Longer than "+timeout+" seconds. Connection is abolished.",isUploadError:isSender}),log.error([peerId,"RTCDataChannel",null,"Failed transfering data:"],"Transfer "+(isSender?"for":"from")+" "+peerId+" failed. Connection timeout"),self._clearDataChannelTimeout(peerId,isSender))},1e3*timeout)},Skylink.prototype._clearDataChannelTimeout=function(peerId,isSender){if(this._dataTransfersTimeout[peerId]){var type=isSender?this.DATA_TRANSFER_TYPE.UPLOAD:this.DATA_TRANSFER_TYPE.DOWNLOAD;clearTimeout(this._dataTransfersTimeout[peerId][type]),delete this._dataTransfersTimeout[peerId][type]}},Skylink.prototype._sendBlobDataToPeer=function(data,dataInfo,targetPeerId){var binarySize=parseInt((dataInfo.size*(4/3)).toFixed(),10),chunkSize=parseInt((this._CHUNK_FILE_SIZE*(4/3)).toFixed(),10);"firefox"===window.webrtcDetectedBrowser&&window.webrtcDetectedVersion<30&&(chunkSize=this._MOZ_CHUNK_FILE_SIZE),log.log([targetPeerId,null,null,"Chunk size of data:"],chunkSize),this._uploadDataTransfers[targetPeerId]=this._chunkBlobData(data,dataInfo.size),this._uploadDataSessions[targetPeerId]={name:dataInfo.name,size:binarySize,transferId:dataInfo.transferId,timeout:dataInfo.timeout},this._sendDataChannelMessage(targetPeerId,{type:this._DC_PROTOCOL_TYPE.WRQ,sender:this._user.sid,agent:window.webrtcDetectedBrowser,name:dataInfo.name,size:binarySize,chunkSize:chunkSize,timeout:dataInfo.timeout}),this._setDataChannelTimeout(targetPeerId,dataInfo.timeout,!0)},Skylink.prototype._dataChannelProtocolHandler=function(dataString,peerId,channelName){if("string"==typeof dataString){var data={};try{data=JSON.parse(dataString)}catch(error){return log.debug([peerId,"RTCDataChannel",channelName,"Received from peer ->"],"DATA"),void this._DATAProtocolHandler(peerId,dataString,this.DATA_TRANSFER_DATA_TYPE.BINARY_STRING,channelName)}switch(log.debug([peerId,"RTCDataChannel",channelName,"Received from peer ->"],data.type),data.type){case this._DC_PROTOCOL_TYPE.WRQ:this._WRQProtocolHandler(peerId,data,channelName);break;case this._DC_PROTOCOL_TYPE.ACK:this._ACKProtocolHandler(peerId,data,channelName);break;case this._DC_PROTOCOL_TYPE.ERROR:this._ERRORProtocolHandler(peerId,data,channelName);break;case this._DC_PROTOCOL_TYPE.CANCEL:this._CANCELProtocolHandler(peerId,data,channelName);break;case this._DC_PROTOCOL_TYPE.MESSAGE:this._MESSAGEProtocolHandler(peerId,data,channelName);break;default:log.error([peerId,"RTCDataChannel",channelName,"Unsupported message ->"],data.type)}}},Skylink.prototype._WRQProtocolHandler=function(peerId,data,channelName){var transferId=this._user.sid+this.DATA_TRANSFER_TYPE.DOWNLOAD+(new Date).toISOString().replace(/-/g,"").replace(/:/g,"").replace(".","");log.log([peerId,"RTCDataChannel",[channelName,"WRQ"],"Received file request from peer:"],data);var name=data.name,binarySize=data.size,expectedSize=data.chunkSize,timeout=data.timeout;this._downloadDataSessions[peerId]={transferId:transferId,name:name,size:binarySize,ackN:0,receivedSize:0,chunkSize:expectedSize,timeout:timeout},this._trigger("dataTransferState",this.DATA_TRANSFER_STATE.UPLOAD_REQUEST,transferId,peerId,{name:name,size:binarySize,senderPeerId:peerId})},Skylink.prototype._ACKProtocolHandler=function(peerId,data,channelName){var self=this,ackN=data.ackN,chunksLength=self._uploadDataTransfers[peerId].length,uploadedDetails=self._uploadDataSessions[peerId],transferId=uploadedDetails.transferId,timeout=uploadedDetails.timeout;if(self._clearDataChannelTimeout(peerId,!0),log.log([peerId,"RTCDataChannel",[channelName,"ACK"],"ACK stage ->"],ackN+" / "+chunksLength),ackN>-1)if(chunksLength>ackN){var fileReader=new FileReader;fileReader.onload=function(){var base64BinaryString=fileReader.result.split(",")[1];self._sendDataChannelMessage(peerId,base64BinaryString),self._setDataChannelTimeout(peerId,timeout,!0),self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.UPLOADING,transferId,peerId,{percentage:((ackN+1)/chunksLength*100).toFixed()})},fileReader.readAsDataURL(self._uploadDataTransfers[peerId][ackN])}else ackN===chunksLength&&(self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.UPLOAD_COMPLETED,transferId,peerId,{name:uploadedDetails.name}),delete self._uploadDataTransfers[peerId],delete self._uploadDataSessions[peerId]);else self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.REJECTED,transferId,peerId),delete self._uploadDataTransfers[peerId],delete self._uploadDataSessions[peerId]},Skylink.prototype._MESSAGEProtocolHandler=function(peerId,data,channelName){var targetMid=data.sender;log.log([peerId,"RTCDataChannel",[channelName,"MESSAGE"],"Received P2P message from peer:"],data),this._trigger("incomingMessage",{content:data.data,isPrivate:data.isPrivate,isDataChannel:!0,targetPeerId:this._user.sid,senderPeerId:targetMid},targetMid,this._peerInformations[targetMid],!1)},Skylink.prototype._ERRORProtocolHandler=function(peerId,data,channelName){var isUploader=data.isUploadError,transferId=isUploader?this._uploadDataSessions[peerId].transferId:this._downloadDataSessions[peerId].transferId;log.error([peerId,"RTCDataChannel",[channelName,"ERROR"],"Received an error from peer:"],data),this._clearDataChannelTimeout(peerId,isUploader),this._trigger("dataTransferState",this.DATA_TRANSFER_STATE.ERROR,transferId,peerId,null,{name:data.name,message:data.content,transferType:isUploader?this.DATA_TRANSFER_TYPE.UPLOAD:this.DATA_TRANSFER_TYPE.DOWNLOAD})},Skylink.prototype._CANCELProtocolHandler=function(peerId,data,channelName){var isUploader=data.isUploadError,transferId=isUploader?this._uploadDataSessions[peerId].transferId:this._downloadDataSessions[peerId].transferId;log.log([peerId,"RTCDataChannel",[channelName,"CANCEL"],"Received file transfer cancel request:"],data),this._clearDataChannelTimeout(peerId,isUploader),this._trigger("dataTransferState",this.DATA_TRANSFER_STATE.CANCEL,transferId,peerId,null,{name:data.name,content:data.content,senderPeerId:data.sender,transferType:isUploader?this.DATA_TRANSFER_TYPE.UPLOAD:this.DATA_TRANSFER_TYPE.DOWNLOAD})},Skylink.prototype._DATAProtocolHandler=function(peerId,dataString,dataType,channelName){var chunk,error="",transferStatus=this._downloadDataSessions[peerId],transferId=transferStatus.transferId;if(log.log([peerId,"RTCDataChannel",[channelName,"DATA"],"Received data chunk from peer. Data type:"],dataType),this._clearDataChannelTimeout(peerId,!1),dataType===this.DATA_TRANSFER_DATA_TYPE.BINARY_STRING)chunk=this._base64ToBlob(dataString);else if(dataType===this.DATA_TRANSFER_DATA_TYPE.ARRAY_BUFFER)chunk=new Blob(dataString);else{if(dataType!==this.DATA_TRANSFER_DATA_TYPE.BLOB)return error="Unhandled data exception: "+dataType,log.error([peerId,"RTCDataChannel",[channelName,"DATA"],"Failed downloading data packets:"],error),void this._trigger("dataTransferState",this.DATA_TRANSFER_STATE.ERROR,transferId,peerId,null,{message:error,transferType:this.DATA_TRANSFER_TYPE.DOWNLOAD});chunk=dataString}var receivedSize=chunk.size*(4/3);if(log.log([peerId,"RTCDataChannel",[channelName,"DATA"],"Received data chunk size:"],receivedSize),log.log([peerId,"RTCDataChannel",[channelName,"DATA"],"Expected data chunk size:"],transferStatus.chunkSize),transferStatus.chunkSize>=receivedSize){this._downloadDataTransfers[peerId].push(chunk),transferStatus.ackN+=1,transferStatus.receivedSize+=receivedSize;var totalReceivedSize=transferStatus.receivedSize,percentage=(totalReceivedSize/transferStatus.size*100).toFixed();if(this._sendDataChannelMessage(peerId,{type:this._DC_PROTOCOL_TYPE.ACK,sender:this._user.sid,ackN:transferStatus.ackN}),transferStatus.chunkSize===receivedSize)log.log([peerId,"RTCDataChannel",[channelName,"DATA"],"Transfer in progress"]),this._trigger("dataTransferState",this.DATA_TRANSFER_STATE.DOWNLOADING,transferId,peerId,{percentage:percentage}),this._setDataChannelTimeout(peerId,transferStatus.timeout,!1),this._downloadDataTransfers[peerId].info=transferStatus;else{log.log([peerId,"RTCDataChannel",[channelName,"DATA"],"Download complete"]);var blob=new Blob(this._downloadDataTransfers[peerId]);this._trigger("dataTransferState",this.DATA_TRANSFER_STATE.DOWNLOAD_COMPLETED,transferId,peerId,{data:blob}),delete this._downloadDataTransfers[peerId],delete this._downloadDataSessions[peerId]}}else error="Packet not match - [Received]"+receivedSize+" / [Expected]"+transferStatus.chunkSize,this._trigger("dataTransferState",this.DATA_TRANSFER_STATE.ERROR,transferId,peerId,null,{message:error,transferType:this.DATA_TRANSFER_TYPE.DOWNLOAD}),log.error([peerId,"RTCDataChannel",[channelName,"DATA"],"Failed downloading data packets:"],error)},Skylink.prototype.sendBlobData=function(data,dataInfo,targetPeerId){if(!data&&!dataInfo)return!1;if(!this._enableDataChannel)return void log.warn("Unable to send any blob data. Datachannel is disabled");var noOfPeersSent=0;if(dataInfo.timeout=dataInfo.timeout||60,dataInfo.transferId=this._user.sid+this.DATA_TRANSFER_TYPE.UPLOAD+(new Date).toISOString().replace(/-/g,"").replace(/:/g,"").replace(".",""),targetPeerId)this._dataChannels.hasOwnProperty(targetPeerId)?(log.log([targetPeerId,null,null,"Sending blob data ->"],dataInfo),this._sendBlobDataToPeer(data,dataInfo,targetPeerId),noOfPeersSent=1):log.error([targetPeerId,null,null,"Datachannel does not exist"]);else{targetpeerId=this._user.sid;for(var peerId in this._dataChannels)this._dataChannels.hasOwnProperty(peerId)?(this._sendBlobDataToPeer(data,dataInfo,peerId),noOfPeersSent++):log.error([peerId,null,null,"Datachannel does not exist"])}if(noOfPeersSent>0)this._trigger("dataTransferState",this.DATA_TRANSFER_STATE.UPLOAD_STARTED,dataInfo.transferId,targetPeerId,{transferId:dataInfo.transferId,senderPeerId:this._user.sid,name:dataInfo.name,size:dataInfo.size,timeout:dataInfo.timeout||60,data:data});else{var error="No available datachannels to send data.";this._trigger("dataTransferState",this.DATA_TRANSFER_STATE.ERROR,dataInfo.transferId,targetPeerId,null,{message:error,transferType:this.DATA_TRANSFER_TYPE.UPLOAD}),log.error("Failed sending data: ",error),this._uploadDataTransfers=[],this._uploadDataSessions=[]}},Skylink.prototype.respondBlobRequest=function(peerId,accept){if(accept){log.info([peerId,null,null,"User accepted peer's request"]),this._downloadDataTransfers[peerId]=[];var data=this._downloadDataSessions[peerId];this._sendDataChannelMessage(peerId,{type:this._DC_PROTOCOL_TYPE.ACK,sender:this._user.sid,ackN:0,agent:window.webrtcDetectedBrowser}),this._trigger("dataTransferState",this.DATA_TRANSFER_STATE.DOWNLOAD_STARTED,data.transferId,peerId,{name:data.name,size:data.size,senderPeerId:peerId})}else log.info([peerId,null,null,"User rejected peer's request"]),this._sendDataChannelMessage(peerId,{type:this._DC_PROTOCOL_TYPE.ACK,sender:this._user.sid,ackN:-1}),delete this._downloadDataSessions[peerId]},Skylink.prototype.cancelBlobTransfer=function(peerId){if(accept){this._downloadDataTransfers[peerId]=[];var data=this._downloadDataSessions[peerId];this._sendDataChannelMessage(peerId,{type:this._DC_PROTOCOL_TYPE.ACK,sender:this._user.sid,ackN:0,agent:window.webrtcDetectedBrowser}),this._trigger("dataTransferState",this.DATA_TRANSFER_STATE.CANCEL,data.transferId,peerId,{name:data.name,size:data.size,senderPeerId:peerId})}else this._sendDataChannelMessage(peerId,{type:this._DC_PROTOCOL_TYPE.ACK,sender:this._user.sid,ackN:-1}),delete this._downloadDataSessions[peerId]},Skylink.prototype.sendP2PMessage=function(message,targetPeerId){if(!this._enableDataChannel)return void log.warn("Unable to send any P2P message. Datachannel is disabled");for(var peerId in this._dataChannels)this._dataChannels.hasOwnProperty(peerId)&&(targetPeerId&&targetPeerId===peerId||!targetPeerId)&&(log.log([peerId,null,null,"Sending P2P message to peer"]),this._sendDataChannelMessage(peerId,{type:this._DC_PROTOCOL_TYPE.MESSAGE,isPrivate:!!targetPeerId,sender:this._user.sid,target:targetPeerId,data:message}));this._trigger("incomingMessage",{content:message,isPrivate:targetPeerId?!0:!1,targetPeerId:targetPeerId||null,isDataChannel:!0,senderPeerId:this._user.sid},this._user.sid,this._user.info,!0)},Skylink.prototype._peerCandidatesQueue=[],Skylink.prototype.CANDIDATE_GENERATION_STATE={NEW:"new",GATHERING:"gathering",COMPLETED:"completed"},Skylink.prototype._onIceCandidate=function(targetMid,event){if(event.candidate){if(this._enableIceTrickle){var messageCan=event.candidate.candidate.split(" "),candidateType=messageCan[7];log.debug([targetMid,"RTCIceCandidate",null,"Created and sending "+candidateType+" candidate:"],event),this._sendChannelMessage({type:this._SIG_MESSAGE_TYPE.CANDIDATE,label:event.candidate.sdpMLineIndex,id:event.candidate.sdpMid,candidate:event.candidate.candidate,mid:this._user.sid,target:targetMid,rid:this._room.id})}}else if(log.debug([targetMid,"RTCIceCandidate",null,"End of gathering"]),this._trigger("candidateGenerationState",this.CANDIDATE_GENERATION_STATE.COMPLETED,targetMid),!this._enableIceTrickle){var sessionDescription=this._peerConnections[targetMid].localDescription;this._sendChannelMessage({type:sessionDescription.type,sdp:sessionDescription.sdp,mid:this._user.sid,agent:window.webrtcDetectedBrowser,target:targetMid,rid:this._room.id})}},Skylink.prototype._addIceCandidateToQueue=function(targetMid,candidate){log.debug([targetMid,null,null,"Queued candidate to add after setRemoteDescription"],candidate),this._peerCandidatesQueue[targetMid]=this._peerCandidatesQueue[targetMid]||[],this._peerCandidatesQueue[targetMid].push(candidate)},Skylink.prototype._addIceCandidateFromQueue=function(targetMid){if(this._peerCandidatesQueue[targetMid]=this._peerCandidatesQueue[targetMid]||[],this._peerCandidatesQueue[targetMid].length>0){for(var i=0;i<this._peerCandidatesQueue[targetMid].length;i++){var candidate=this._peerCandidatesQueue[targetMid][i];log.debug([targetMid,null,null,"Added queued candidate"],candidate),this._peerConnections[targetMid].addIceCandidate(candidate)}delete this._peerCandidatesQueue[targetMid]}else log.log([targetMid,null,null,"No queued candiate to add"])},Skylink.prototype._enableIceTrickle=!0,Skylink.prototype.ICE_CONNECTION_STATE={STARTING:"starting",CHECKING:"checking",CONNECTED:"connected",COMPLETED:"completed",CLOSED:"closed",FAILED:"failed",DISCONNECTED:"disconnected"},Skylink.prototype._setFirefoxIceServers=function(config){if("moz"===window.webrtcDetectedType){log.log("Updating firefox Ice server configuration",config);for(var newIceServers=[{url:"stun:stun.services.mozilla.com"}],i=0;i<config.iceServers.length;i++){var iceServer=config.iceServers[i],iceServerType=iceServer.url.split(":")[0];if("stun"===iceServerType){if(iceServer.url.indexOf("google"))continue;iceServer.url=[iceServer.url],newIceServers.push(iceServer)}else{var newIceServer={};newIceServer.credential=iceServer.credential,newIceServer.url=iceServer.url.split(":")[0],newIceServer.username=iceServer.url.split(":")[1].split("@")[0],newIceServer.url+=":"+iceServer.url.split(":")[1].split("@")[1],newIceServers.push(newIceServer)}}config.iceServers=newIceServers,log.debug("Updated firefox Ice server configuration: ",config)}return config},Skylink.prototype.PEER_CONNECTION_STATE={STABLE:"stable",HAVE_LOCAL_OFFER:"have-local-offer",HAVE_REMOTE_OFFER:"have-remote-offer",HAVE_LOCAL_PRANSWER:"have-local-pranswer",HAVE_REMOTE_PRANSWER:"have-remote-pranswer",CLOSED:"closed"},Skylink.prototype._peerConnections=[],Skylink.prototype._addPeer=function(targetMid,peerBrowser,toOffer,restartConn,receiveOnly){var self=this;return self._peerConnections[targetMid]&&!restartConn?void log.error([targetMid,null,null,"Connection to peer has already been made"]):(log.log([targetMid,null,null,"Starting the connection to peer. Options provided:"],{peerBrowser:peerBrowser,toOffer:toOffer,receiveOnly:receiveOnly,enableDataChannel:self._enableDataChannel}),restartConn||(self._peerConnections[targetMid]=self._createPeerConnection(targetMid)),receiveOnly||self._addLocalMediaStreams(targetMid),void(toOffer&&(self._enableDataChannel&&self._createDataChannel(targetMid),self._doOffer(targetMid,peerBrowser))))},Skylink.prototype._removePeer=function(peerId){"MCU"!==peerId?this._trigger("peerLeft",peerId,this._peerInformations[peerId],!1):log.log([peerId,null,null,"MCU has stopped listening and left"]),this._peerConnections[peerId]&&(this._peerConnections[peerId].close(),delete this._peerConnections[peerId]),this._peerHSPriorities[peerId]&&delete this._peerHSPriorities[peerId],this._peerInformations[peerId]&&delete this._peerInformations[peerId],log.log([peerId,"Successfully removed peer"])},Skylink.prototype._createPeerConnection=function(targetMid){var pc,self=this;try{pc=new window.RTCPeerConnection(self._room.connection.peerConfig,self._room.connection.peerConstraints),log.info([targetMid,null,null,"Created peer connection"]),log.debug([targetMid,null,null,"Peer connection config:"],self._room.connection.peerConfig),log.debug([targetMid,null,null,"Peer connection constraints:"],self._room.connection.peerConstraints)}catch(error){return log.error([targetMid,null,null,"Failed creating peer connection:"],error),null}return pc.setOffer="",pc.setAnswer="",pc.ondatachannel=function(event){var dc=event.channel||event;log.debug([targetMid,"RTCDataChannel",dc.label,"Received datachannel ->"],dc),self._enableDataChannel?self._createDataChannel(targetMid,dc):log.warn([targetMid,"RTCDataChannel",dc.label,"Not adding datachannel"])},pc.onaddstream=function(event){self._onRemoteStreamAdded(targetMid,event)},pc.onicecandidate=function(event){log.debug([targetMid,"RTCIceCandidate",null,"Ice candidate generated ->"],event.candidate),self._onIceCandidate(targetMid,event)},pc.oniceconnectionstatechange=function(){checkIceConnectionState(targetMid,pc.iceConnectionState,function(iceConnectionState){log.debug([targetMid,"RTCIceConnectionState",null,"Ice connection state changed ->"],iceConnectionState),self._trigger("iceConnectionState",iceConnectionState,targetMid)})},pc.onsignalingstatechange=function(){log.debug([targetMid,"RTCSignalingState",null,"Peer connection state changed ->"],pc.signalingState),self._trigger("peerConnectionState",pc.signalingState,targetMid)},pc.onicegatheringstatechange=function(){log.log([targetMid,"RTCIceGatheringState",null,"Ice gathering state changed ->"],pc.iceGatheringState),self._trigger("candidateGenerationState",pc.iceGatheringState,targetMid)},pc},Skylink.prototype._peerInformations=[],Skylink.prototype._user=null,Skylink.prototype.setUserData=function(userData){var self=this;if(self._readyState===self.READY_STATE_CHANGE.COMPLETED)self._user.info=self._user.info||{},self._user.info.userData=userData||self._user.info.userData||{},self._inRoom?(log.log("Updated userData -> ",userData),self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.UPDATE_USER,mid:self._user.sid,rid:self._room.id,userData:self._user.info.userData}),self._trigger("peerUpdated",self._user.sid,self._user.info,!0)):log.warn("User is not in the room. Broadcast of updated information will be dropped");else var checkInRoom=setInterval(function(){self._readyState===self.READY_STATE_CHANGE.COMPLETED&&(clearInterval(checkInRoom),self.setUserData(userData))},50)},Skylink.prototype.getUserData=function(){return this._user&&this._user.info?this._user.info.userData||"":""},Skylink.prototype.getPeerInfo=function(peerId){return peerId&&peerId!==this._user.sid?this._peerInformations[peerId]:this._user?this._user.info:null},Skylink.prototype.HANDSHAKE_PROGRESS={ENTER:"enter",WELCOME:"welcome",OFFER:"offer",ANSWER:"answer",ERROR:"error"},Skylink.prototype._peerHSPriorities=[],Skylink.prototype._doOffer=function(targetMid,peerBrowser){var self=this,pc=self._peerConnections[targetMid];log.log([targetMid,null,null,"Checking caller status"],peerBrowser);var inputConstraints=self._room.connection.offerConstraints,sc=self._room.connection.sdpConstraints;for(var name in sc.mandatory)sc.mandatory.hasOwnProperty(name)&&(inputConstraints.mandatory[name]=sc.mandatory[name]);inputConstraints.optional.concat(sc.optional),checkMediaDataChannelSettings(peerBrowser.agent,peerBrowser.version,function(beOfferer,unifiedOfferConstraints){"moz"===window.webrtcDetectedType&&"MCU"===peerBrowser.agent&&(unifiedOfferConstraints.mandatory=unifiedOfferConstraints.mandatory||{},unifiedOfferConstraints.mandatory.MozDontOfferDataChannel=!0,beOfferer=!0),beOfferer?(log.debug([targetMid,null,null,"Creating offer with config:"],unifiedOfferConstraints),pc.createOffer(function(offer){log.debug([targetMid,null,null,"Created offer"],offer),self._setLocalAndSendMessage(targetMid,offer)},function(error){self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ERROR,targetMid,error),log.error([targetMid,null,null,"Failed creating an offer:"],error)},unifiedOfferConstraints)):(log.debug([targetMid,null,null,"User's browser is not eligible to create the offer to the other peer. Requesting other peer to create the offer instead"],peerBrowser),self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.WELCOME,mid:self._user.sid,rid:self._room.id,agent:window.webrtcDetectedBrowser,version:window.webrtcDetectedVersion,userInfo:self._user.info,target:targetMid,weight:-1}))},inputConstraints)},Skylink.prototype._doAnswer=function(targetMid){var self=this;log.log([targetMid,null,null,"Creating answer with config:"],self._room.connection.sdpConstraints);var pc=self._peerConnections[targetMid];return pc?void pc.createAnswer(function(answer){log.debug([targetMid,null,null,"Created answer"],answer),self._setLocalAndSendMessage(targetMid,answer)},function(error){log.error([targetMid,null,null,"Failed creating an answer:"],error),self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ERROR,targetMid,error)},self._room.connection.sdpConstraints):void log.error([targetMid,null,null,"Requested to create an answer but user does not have any existing connection to peer"])},Skylink.prototype._setLocalAndSendMessage=function(targetMid,sessionDescription){var self=this,pc=self._peerConnections[targetMid];if(sessionDescription.type===self.HANDSHAKE_PROGRESS.ANSWER&&pc.setAnswer)return void log.log([targetMid,"RTCSessionDescription",sessionDescription.type,"Ignoring session description. User has already set local answer"],sessionDescription);if(sessionDescription.type===self.HANDSHAKE_PROGRESS.OFFER&&pc.setOffer)return void log.log([targetMid,"RTCSessionDescription",sessionDescription.type,"Ignoring session description. User has already set local offer"],sessionDescription);var sdpLines=sessionDescription.sdp.split("\r\n");sdpLines=self._removeFirefoxH264Pref(sdpLines),self._streamSettings.stereo&&self._addStereo(sdpLines),log.info([targetMid,null,null,"Requested stereo:"],self._streamSettings.stereo||!1),self._streamSettings.bandwidth&&(sdpLines=self._setSDPBitrate(sdpLines,self._streamSettings.bandwidth)),self._streamSettings.bandwidth=self._streamSettings.bandwidth||{},log.info([targetMid,null,null,"Custom bandwidth settings:"],{audio:(self._streamSettings.bandwidth.audio||"Not set")+" kB/s",video:(self._streamSettings.bandwidth.video||"Not set")+" kB/s",data:(self._streamSettings.bandwidth.data||"Not set")+" kB/s"}),sessionDescription.sdp=sdpLines.join("\r\n"),log.log([targetMid,"RTCSessionDescription",sessionDescription.type,"Updated session description:"],sessionDescription),pc.setLocalDescription(sessionDescription,function(){log.debug([targetMid,sessionDescription.type,"Local description set"]),self._trigger("handshakeProgress",sessionDescription.type,targetMid),sessionDescription.type===self.HANDSHAKE_PROGRESS.ANSWER?pc.setAnswer="local":pc.setOffer="local",self._enableIceTrickle||!self._enableIceTrickle&&sessionDescription.type!==self.HANDSHAKE_PROGRESS.OFFER?self._sendChannelMessage({type:sessionDescription.type,sdp:sessionDescription.sdp,mid:self._user.sid,target:targetMid,rid:self._room.id}):log.log([targetMid,"RTCSessionDescription",sessionDescription.type,"Waiting for Ice gathering to complete to prevent Ice trickle"])},function(error){self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ERROR,targetMid,error),log.error([targetMid,"RTCSessionDescription",sessionDescription.type,"Failed setting local description: "],error)})},Skylink.prototype.SYSTEM_ACTION={WARNING:"warning",REJECT:"reject"},Skylink.prototype.SYSTEM_ACTION_REASON={FAST_MESSAGE:"fastmsg",ROOM_LOCKED:"locked",ROOM_FULL:"roomfull",DUPLICATED_LOGIN:"duplicatedLogin",SERVER_ERROR:"serverError",VERIFICATION:"verification",EXPIRED:"expired",ROOM_CLOSED:"roomclose",ROOM_CLOSING:"toclose",OVER_SEAT_LIMIT:"seatquota"},Skylink.prototype._selectedRoom=null,Skylink.prototype._roomLocked=!1,Skylink.prototype.joinRoom=function(room,mediaOptions){var self=this;if(self._inRoom&&"string"!=typeof room||"string"==typeof room&&room===this._selectedRoom)return void log.error([null,"Socket","string"==typeof room?room:self._selectedRoom,"Unable to join room as user is currently in the room already"]);log.log([null,"Socket",self._selectedRoom,"Joining room. Media options:"],mediaOptions||("object"==typeof room?room:{}));var sendJoinRoomMessage=function(){self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.JOIN_ROOM,uid:self._user.uid,cid:self._key,rid:self._room.id,userCred:self._user.token,timeStamp:self._user.timeStamp,apiOwner:self._apiKeyOwner,roomCred:self._room.token,start:self._room.startDateTime,len:self._room.duration})},doJoinRoom=function(){var checkChannelOpen=setInterval(function(){self._channelOpen?(clearInterval(checkChannelOpen),self._waitForLocalMediaStream(function(){sendJoinRoomMessage()},mediaOptions)):self._readyState===self.READY_STATE_CHANGE.COMPLETED&&self._openChannel()},500)};"string"==typeof room?self._initSelectedRoom(room,doJoinRoom):(mediaOptions=room,doJoinRoom())},Skylink.prototype.leaveRoom=function(){if(!this._inRoom)return void log.error("Unable to leave room as user is not in any room");for(var pc_index in this._peerConnections)this._peerConnections.hasOwnProperty(pc_index)&&this._removePeer(pc_index);this._inRoom=!1,this._closeChannel(),log.log([null,"Socket",this._selectedRoom,"User left the room"]),this._trigger("peerLeft",this._user.sid,this._user.info,!0)},Skylink.prototype.lockRoom=function(){log.log("Update to isRoomLocked status ->",!0),this._sendChannelMessage({type:this._SIG_MESSAGE_TYPE.ROOM_LOCK,mid:this._user.sid,rid:this._room.id,lock:!0}),this._trigger("roomLock",!0,this._user.sid,this._user.info,!0)},Skylink.prototype.unlockRoom=function(){log.log("Update to isRoomLocked status ->",!1),this._sendChannelMessage({type:this._SIG_MESSAGE_TYPE.ROOM_LOCK,mid:this._user.sid,rid:this._room.id,lock:!1}),this._trigger("roomLock",!1,this._user.sid,this._user.info,!0)},Skylink.prototype.READY_STATE_CHANGE={INIT:0,LOADING:1,COMPLETED:2,ERROR:-1},Skylink.prototype.READY_STATE_CHANGE_ERROR={API_INVALID:4001,API_DOMAIN_NOT_MATCH:4002,API_CORS_DOMAIN_NOT_MATCH:4003,API_CREDENTIALS_INVALID:4004,API_CREDENTIALS_NOT_MATCH:4005,API_INVALID_PARENT_KEY:4006,API_NOT_ENOUGH_CREDIT:4007,API_NOT_ENOUGH_PREPAID_CREDIT:4008,API_FAILED_FINDING_PREPAID_CREDIT:4009,API_NO_MEETING_RECORD_FOUND:4010,ROOM_LOCKED:5001,NO_SOCKET_IO:1,NO_XMLHTTPREQUEST_SUPPORT:2,NO_WEBRTC_SUPPORT:3,NO_PATH:4,INVALID_XMLHTTPREQUEST_STATUS:5,SCRIPT_ERROR:6},Skylink.prototype.REGIONAL_SERVER={APAC1:"sg",US1:"us2"},Skylink.prototype._path=null,Skylink.prototype._serverRegion=null,Skylink.prototype._roomServer="//api.temasys.com.sg",Skylink.prototype._apiKey=null,Skylink.prototype._defaultRoom=null,Skylink.prototype._roomStart=null,Skylink.prototype._roomDuration=null,Skylink.prototype._roomCredentials=null,Skylink.prototype._readyState=0,Skylink.prototype._key=null,Skylink.prototype._apiKeyOwner=null,Skylink.prototype._room=null,Skylink.prototype._requestServerInfo=function(method,url,callback,params){var xhr,useXDomainRequest="IE"===window.webrtcDetectedBrowser&&(9===window.webrtcDetectedVersion||8===window.webrtcDetectedVersion)&&"function"==typeof window.XDomainRequest;
useXDomainRequest?(log.debug([null,"XMLHttpRequest",method,"Using XDomainRequest. XMLHttpRequest is now XDomainRequest"],{agent:window.webrtcDetectedBrowser,version:window.webrtcDetectedVersion}),xhr=new XDomainRequest,xhr.setContentType=function(contentType){xhr.contentType=contentType}):(log.debug([null,"XMLHttpRequest",method,"Using XMLHttpRequest"],{agent:window.webrtcDetectedBrowser,version:window.webrtcDetectedVersion}),xhr=new window.XMLHttpRequest,xhr.setContentType=function(contentType){xhr.setRequestHeader("Content-type",contentType)}),xhr.onload=function(){xhr.response=xhr.responseText||xhr.response,xhr.status=xhr.status||200,log.debug([null,"XMLHttpRequest",method,"Received sessions parameters"],JSON.parse(xhr.response||"{}")),callback(xhr.status,JSON.parse(xhr.response||"{}"))},xhr.onerror=function(){log.error([null,"XMLHttpRequest",method,"Failed retrieving information:"],{status:xhr.status})},xhr.onprogress=function(){log.debug([null,"XMLHttpRequest",method,"Retrieving information and config from webserver. Url:"],url),log.debug([null,"XMLHttpRequest",method,"Provided parameters:"],params)},xhr.open(method,url,!0),params?(xhr.setContentType("application/json;charset=UTF-8"),xhr.send(JSON.stringify(params))):xhr.send()},Skylink.prototype._parseInfo=function(info){return log.log("Parsing parameter from server",info),info.pc_constraints||info.offer_constraints?(log.debug("Peer connection constraints:",info.pc_constraints),log.debug("Offer constraints:",info.offer_constraints),this._key=info.cid,this._apiKeyOwner=info.apiOwner,this._signalingServer=info.ipSigserver,this._user={uid:info.username,token:info.userCred,timeStamp:info.timeStamp,streams:[],info:{}},this._room={id:info.room_key,token:info.roomCred,startDateTime:info.start,duration:info.len,connection:{peerConstraints:JSON.parse(info.pc_constraints),peerConfig:null,offerConstraints:JSON.parse(info.offer_constraints),sdpConstraints:{mandatory:{OfferToReceiveAudio:!0,OfferToReceiveVideo:!0}},mediaConstraints:JSON.parse(info.media_constraints)}},this._streamSettings.bandwidth=info.bandwidth,this._readyState=2,this._trigger("readyStateChange",this.READY_STATE_CHANGE.COMPLETED),void log.info("Parsed parameters from webserver. Ready for web-realtime communication")):void this._trigger("readyStateChange",this.READY_STATE_CHANGE.ERROR,{status:200,content:info.info,errorCode:info.error})},Skylink.prototype._loadInfo=function(){var self=this;return window.io?window.XMLHttpRequest?window.RTCPeerConnection?self._path?(self._readyState=1,self._trigger("readyStateChange",self.READY_STATE_CHANGE.LOADING),void self._requestServerInfo("GET",self._path,function(status,response){if(200!==status){var errorMessage="XMLHttpRequest status not OK\nStatus was: "+status;return self._readyState=0,void self._trigger("readyStateChange",self.READY_STATE_CHANGE.ERROR,{status:status,content:response?response.info||errorMessage:errorMessage,errorCode:response.error||self.READY_STATE_CHANGE_ERROR.INVALID_XMLHTTPREQUEST_STATUS})}self._parseInfo(response)})):(log.error("Skylink is not initialised. Please call init() first"),void self._trigger("readyStateChange",self.READY_STATE_CHANGE.ERROR,{status:null,content:"No API Path is found",errorCode:self.READY_STATE_CHANGE_ERROR.NO_PATH})):(log.error("WebRTC not supported. Please upgrade your browser"),void self._trigger("readyStateChange",self.READY_STATE_CHANGE.ERROR,{status:null,content:"WebRTC not available",errorCode:self.READY_STATE_CHANGE_ERROR.NO_WEBRTC_SUPPORT})):(log.error("XMLHttpRequest not supported. Please upgrade your browser"),void self._trigger("readyStateChange",self.READY_STATE_CHANGE.ERROR,{status:null,content:"XMLHttpRequest not available",errorCode:self.READY_STATE_CHANGE_ERROR.NO_XMLHTTPREQUEST_SUPPORT})):(log.error("Socket.io not loaded. Please load socket.io"),void self._trigger("readyStateChange",self.READY_STATE_CHANGE.ERROR,{status:null,content:"Socket.io not found",errorCode:self.READY_STATE_CHANGE_ERROR.NO_SOCKET_IO}))},Skylink.prototype._initSelectedRoom=function(room,callback){var self=this;if("function"==typeof room||"undefined"==typeof room)return void log.error("Invalid room provided. Room:",room);var defaultRoom=self._defaultRoom,initOptions={roomServer:self._roomServer,defaultRoom:room||defaultRoom,apiKey:self._apiKey,region:self._serverRegion,dataChannel:self._enableDataChannel,iceTrickle:self._enableIceTrickle};self._roomCredentials&&(initOptions.credentials={credentials:self._roomCredentials,duration:self._roomDuration,startDateTime:self._roomStart}),self.init(initOptions),self._defaultRoom=defaultRoom;var checkReadyState=setInterval(function(){self._readyState===self.READY_STATE_CHANGE.COMPLETED&&(clearInterval(checkReadyState),callback())},100)},Skylink.prototype.init=function(options){if(!options)return void log.error("No API key provided");var apiKey,room,defaultRoom,region,startDateTime,duration,credentials,roomServer=this._roomServer,iceTrickle=!0,dataChannel=!0,audioFallback=!1;log.log("Provided init options:",options),"string"==typeof options?(apiKey=options,defaultRoom=apiKey,room=apiKey):(apiKey=options.apiKey,roomServer=options.roomServer||roomServer,roomServer=roomServer.lastIndexOf("/")===roomServer.length-1?roomServer.substring(0,roomServer.length-1):roomServer,region=options.region||region,defaultRoom=options.defaultRoom||apiKey,room=defaultRoom,iceTrickle="boolean"==typeof options.iceTrickle?options.iceTrickle:iceTrickle,dataChannel="boolean"==typeof options.dataChannel?options.dataChannel:dataChannel,audioFallback=options.audioFallback||audioFallback,options.credentials&&(startDateTime=options.credentials.startDateTime||(new Date).toISOString(),duration=options.credentials.duration||200,credentials=options.credentials.credentials)),this._readyState=0,this._trigger("readyStateChange",this.READY_STATE_CHANGE.INIT),this._apiKey=apiKey,this._roomServer=roomServer,this._defaultRoom=defaultRoom,this._selectedRoom=room,this._serverRegion=region,this._enableIceTrickle=iceTrickle,this._enableDataChannel=dataChannel,this._audioFallback=audioFallback,this._path=roomServer+"/api/"+apiKey+"/"+room,credentials&&(this._roomStart=startDateTime,this._roomDuration=duration,this._roomCredentials=credentials,this._path+=credentials?"/"+startDateTime+"/"+duration+"?&cred="+credentials:""),region&&(this._path+=(this._path.indexOf("?&")>-1?"&":"?&")+"rg="+region),log.log("Init configuration:",{serverUrl:this._path,readyState:this._readyState,apiKey:this._apiKey,roomServer:this._roomServer,defaultRoom:this._defaultRoom,selectedRoom:this._selectedRoom,serverRegion:this._serverRegion,enableDataChannel:this._enableDataChannel,enableIceTrickle:this._enableIceTrickle,audioFallback:this._audioFallback}),this._loadInfo()},Skylink.prototype.LOG_LEVEL={DEBUG:4,LOG:3,INFO:2,WARN:1,ERROR:0};var _LOG_KEY="SkylinkJS",_logLevel=4,_enableDebugMode=!1,_logFn=function(logLevel,message,debugObject){var levels=["error","warn","info","log","debug"],outputLog=_LOG_KEY;if(_logLevel>=logLevel){if("object"==typeof message){if(outputLog+=message[0]?" ["+message[0]+"] -":" -",outputLog+=message[1]?" <<"+message[1]+">>":"",message[2])if(outputLog+=" ","object"==typeof message[2])for(var i=0;i<message[2].length;i++)outputLog+="("+message[2][i]+")";else outputLog+="("+message[2]+")";outputLog+=" "+message[3]}else outputLog+=" - "+message;{"++ "+levels[logLevel].toUpperCase()+" ++  "+outputLog}if(logLevel="undefined"==typeof console[levels[logLevel]]?3:logLevel,_enableDebugMode){"undefined"==typeof console.trace?logLevel[3]:"trace"}}},log={debug:function(message,object){_logFn(4,message,object)},log:function(message,object){_logFn(3,message,object)},info:function(message,object){_logFn(2,message,object)},warn:function(message,object){_logFn(1,message,object)},error:function(message,object){_logFn(0,message,object)}};Skylink.prototype.setLogLevel=function(logLevel){this.setDebugMode(!0);for(var level in this.LOG_LEVEL)if(this.LOG_LEVEL[level]===logLevel)return _logLevel=logLevel,void log.log([null,"Log",level,"Log level exists. Level is set"]);log.error([null,"Log",level,"Log level does not exist. Level is not set"])},Skylink.prototype.setDebugMode=function(isDebugMode){_enableDebugMode=isDebugMode},Skylink.prototype._EVENTS={channelOpen:[],channelClose:[],channelMessage:[],channelError:[],readyStateChange:[],handshakeProgress:[],candidateGenerationState:[],peerConnectionState:[],iceConnectionState:[],mediaAccessError:[],mediaAccessSuccess:[],peerJoined:[],peerUpdated:[],peerLeft:[],presenceChanged:[],incomingStream:[],incomingMessage:[],roomLock:[],dataChannelState:[],dataTransferState:[],systemAction:[]},Skylink.prototype._trigger=function(eventName){var args=Array.prototype.slice.call(arguments),arr=this._EVENTS[eventName];if(args.shift(),arr)for(var e in arr)if(arr.hasOwnProperty(e))try{if(arr[e].apply(this,args)===!1)break}catch(error){log.error([null,"Event",eventName,"Exception occurred in event:"],error)}log.log([null,"Event",eventName,"Event is triggered"])},Skylink.prototype.on=function(eventName,callback){"function"==typeof callback&&(this._EVENTS[eventName]=this._EVENTS[eventName]||[],this._EVENTS[eventName].push(callback),log.log([null,"Event",eventName,"Event is subscribed"]))},Skylink.prototype.off=function(eventName,callback){if(void 0===callback)return this._EVENTS[eventName]=[],void log.error([null,"Event",eventName,"Unable to unsubscribe event with invalid callback"]);for(var arr=this._EVENTS[eventName],l=arr.length,i=0;l>i;i++)if(arr[i]===callback){arr.splice(i,1);break}log.log([null,"Event",eventName,"Event is unsubscribed"])},Skylink.prototype._channelOpen=!1,Skylink.prototype._signalingServer=null,Skylink.prototype._signalingServerPort=null,Skylink.prototype._socket=null,Skylink.prototype._sendChannelMessage=function(message){if(this._channelOpen){var messageString=JSON.stringify(message);log.debug([message.target?message.target:"server",null,null,"Sending to peer"+(message.target?"":"s")+" ->"],message.type),this._socket.send(messageString)}},Skylink.prototype._openChannel=function(){var self=this;if(!self._channelOpen&&self._readyState===self.READY_STATE_CHANGE.COMPLETED){self._signalingServerPort="https:"===window.location.protocol?"443":"80";var ip_signaling=window.location.protocol+"//"+self._signalingServer+":"+self._signalingServerPort;log.log("Opening channel with signaling server url:",ip_signaling),self._socket=io.connect(ip_signaling,{forceNew:!0,transports:["websocket"]}),self._socket.on("connect",function(){self._channelOpen=!0,self._trigger("channelOpen"),log.log([null,"Socket",null,"Channel opened"])}),self._socket.on("error",function(error){self._channelOpen=!1,self._trigger("channelError",error),log.error([null,"Socket",null,"Exception occurred:"],error)}),self._socket.on("disconnect",function(){self._trigger("channelClose"),log.log([null,"Socket",null,"Channel closed"])}),self._socket.on("message",function(message){log.log([null,"Socket",null,"Received message"]),self._processSigMessage(message)})}},Skylink.prototype._closeChannel=function(){this._channelOpen&&(this._socket.disconnect(),this._socket=null,this._channelOpen=!1)},Skylink.prototype._SIG_MESSAGE_TYPE={JOIN_ROOM:"joinRoom",IN_ROOM:"inRoom",ENTER:"enter",WELCOME:"welcome",OFFER:"offer",ANSWER:"answer",CANDIDATE:"candidate",BYE:"bye",REDIRECT:"redirect",UPDATE_USER:"updateUserEvent",ROOM_LOCK:"roomLockEvent",MUTE_VIDEO:"muteVideoEvent",MUTE_AUDIO:"muteAudioEvent",PUBLIC_MESSAGE:"public",PRIVATE_MESSAGE:"private",GROUP:"group"},Skylink.prototype._processSigMessage=function(messageString){var message=JSON.parse(messageString);if(message.type===this._SIG_MESSAGE_TYPE.GROUP){log.debug("Bundle of "+message.lists.length+" messages");for(var i=0;i<message.lists.length;i++)this._processSingleMessage(message.lists[i])}else this._processSingleMessage(message)},Skylink.prototype._processSingleMessage=function(message){this._trigger("channelMessage",message);var origin=message.mid;if(origin&&origin!==this._user.sid||(origin="Server"),log.debug([origin,null,null,"Recevied from peer ->"],message.type),message.mid===this._user.sid&&message.type!==this._SIG_MESSAGE_TYPE.REDIRECT&&message.type!==this._SIG_MESSAGE_TYPE.IN_ROOM)return void log.debug([origin,null,null,"Ignoring message ->"],message.type);switch(message.type){case this._SIG_MESSAGE_TYPE.PUBLIC_MESSAGE:this._publicMessageHandler(message);break;case this._SIG_MESSAGE_TYPE.PRIVATE_MESSAGE:this._privateMessageHandler(message);break;case this._SIG_MESSAGE_TYPE.IN_ROOM:this._inRoomHandler(message);break;case this._SIG_MESSAGE_TYPE.ENTER:this._enterHandler(message);break;case this._SIG_MESSAGE_TYPE.WELCOME:this._welcomeHandler(message);break;case this._SIG_MESSAGE_TYPE.OFFER:this._offerHandler(message);break;case this._SIG_MESSAGE_TYPE.ANSWER:this._answerHandler(message);break;case this._SIG_MESSAGE_TYPE.CANDIDATE:this._candidateHandler(message);break;case this._SIG_MESSAGE_TYPE.BYE:this._byeHandler(message);break;case this._SIG_MESSAGE_TYPE.REDIRECT:this._redirectHandler(message);break;case this._SIG_MESSAGE_TYPE.UPDATE_USER:this._updateUserEventHandler(message);break;case this._SIG_MESSAGE_TYPE.MUTE_VIDEO:this._muteVideoEventHandler(message);break;case this._SIG_MESSAGE_TYPE.MUTE_AUDIO:this._muteAudioEventHandler(message);break;case this._SIG_MESSAGE_TYPE.ROOM_LOCK:this._roomLockEventHandler(message);break;default:log.error([message.mid,null,null,"Unsupported message ->"],message.type)}},Skylink.prototype._redirectHandler=function(message){log.log(["Server",null,message.type,"System action warning:"],{message:message.info,reason:message.reason,action:message.action}),this._trigger("systemAction",message.action,message.info,message.reason)},Skylink.prototype._updateUserEventHandler=function(message){var targetMid=message.mid;log.log([targetMid,null,message.type,"Peer updated userData:"],message.userData),this._peerInformations[targetMid]?(this._peerInformations[targetMid].userData=message.userData||{},this._trigger("peerUpdated",targetMid,this._peerInformations[targetMid],!1)):log.log([targetMid,null,message.type,"Peer does not have any user information"])},Skylink.prototype._roomLockEventHandler=function(message){var targetMid=message.mid;log.log([targetMid,message.type,"Room lock status:"],message.lock),this._trigger("roomLock",message.lock,targetMid,this._peerInformations[targetMid],!1)},Skylink.prototype._muteAudioEventHandler=function(message){var targetMid=message.mid;log.log([targetMid,null,message.type,"Peer's audio muted:"],message.muted),this._peerInformations[targetMid]?(this._peerInformations[targetMid].mediaStatus.audioMuted=message.muted,this._trigger("peerUpdated",targetMid,this._peerInformations[targetMid],!1)):log.log([targetMid,message.type,"Peer does not have any user information"])},Skylink.prototype._muteVideoEventHandler=function(message){var targetMid=message.mid;log.log([targetMid,null,message.type,"Peer's video muted:"],message.muted),this._peerInformations[targetMid]?(this._peerInformations[targetMid].mediaStatus.videoMuted=message.muted,this._trigger("peerUpdated",targetMid,this._peerInformations[targetMid],!1)):log.log([targetMid,null,message.type,"Peer does not have any user information"])},Skylink.prototype._byeHandler=function(message){var targetMid=message.mid;log.log([targetMid,null,message.type,"Peer has left the room"]),this._removePeer(targetMid)},Skylink.prototype._privateMessageHandler=function(message){var targetMid=message.mid;log.log([targetMid,null,message.type,"Received private message from peer:"],message.data),this._trigger("incomingMessage",{content:message.data,isPrivate:!0,targetPeerId:message.target,isDataChannel:!1,senderPeerId:targetMid},targetMid,this._peerInformations[targetMid],!1)},Skylink.prototype._publicMessageHandler=function(message){var targetMid=message.mid;log.log([targetMid,null,message.type,"Received public message from peer:"],message.data),this._trigger("incomingMessage",{content:message.data,isPrivate:!1,targetPeerId:null,isDataChannel:!1,senderPeerId:targetMid},targetMid,this._peerInformations[targetMid],!1)},Skylink.prototype._inRoomHandler=function(message){var self=this;log.log(["Server",null,message.type,"User is now in the room and functionalities are now available. Config received:"],message.pc_config),self._room.connection.peerConfig=self._setFirefoxIceServers(message.pc_config),self._inRoom=!0,self._user.sid=message.sid,self._trigger("peerJoined",self._user.sid,self._user.info,!0),self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ENTER,self._user.sid),self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.ENTER,mid:self._user.sid,rid:self._room.id,agent:window.webrtcDetectedBrowser,version:window.webrtcDetectedVersion,userInfo:self._user.info})},Skylink.prototype._enterHandler=function(message){var self=this,targetMid=message.mid;if(log.log([targetMid,null,message.type,"Incoming peer have initiated handshake. Peer's information:"],message.userInfo),self._peerInformations[targetMid])return void log.log([targetMid,null,message.type,"Ignoring message as peer is already added"]);self._addPeer(targetMid,{agent:message.agent,version:message.version},!1),"MCU"!==targetMid?(self._trigger("peerJoined",targetMid,message.userInfo,!1),self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ENTER,targetMid),self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.WELCOME,targetMid),self._peerInformations[targetMid]=message.userInfo||{},self._peerInformations[targetMid].agent={name:message.agent,version:message.version}):log.log([targetMid,null,message.type,"MCU has joined"],message.userInfo);var weight=(new Date).valueOf();self._peerHSPriorities[targetMid]=weight,self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.WELCOME,mid:self._user.sid,rid:self._room.id,agent:window.webrtcDetectedBrowser,version:window.webrtcDetectedVersion,userInfo:self._user.info,target:targetMid,weight:weight})},Skylink.prototype._welcomeHandler=function(message){var targetMid=message.mid,restartConn=!1;if(log.log([targetMid,null,message.type,"Received peer's response to handshake initiation. Peer's information:"],message.userInfo),this._peerConnections[targetMid]){if(this._peerConnections[targetMid].setOffer)return void log.warn([targetMid,null,message.type,"Ignoring message as peer is already added"]);if(message.weight<0)restartConn=!0,log.log([targetMid,null,message.type,"Peer's weight is lower than 0. Proceeding with offer"],message.weight);else{if(!(this._peerHSPriorities[targetMid]>message.weight))return restartConn=!0,void log.log([targetMid,null,message.type,"Peer's generated weight is higher than user's. Proceeding with offer"],this._peerHSPriorities[targetMid]+" < "+message.weight);log.log([targetMid,null,message.type,"Peer's generated weight is lesser than user's. Ignoring message"],this._peerHSPriorities[targetMid]+" > "+message.weight)}}message.agent=message.agent?message.agent:"chrome",this._enableIceTrickle="boolean"==typeof message.enableIceTrickle?message.enableIceTrickle:this._enableIceTrickle,this._enableDataChannel="boolean"==typeof message.enableDataChannel?message.enableDataChannel:this._enableDataChannel,this._peerInformations[targetMid]||("MCU"!==targetMid?(this._peerInformations[targetMid]=message.userInfo,this._peerInformations[targetMid].agent={name:message.agent,version:message.version},this._trigger("peerJoined",targetMid,message.userInfo,!1),this._trigger("handshakeProgress",this.HANDSHAKE_PROGRESS.WELCOME,targetMid)):log.log([targetMid,null,message.type,"MCU has "+(message.weight>-1?"joined and ":"")+" responded"])),this._addPeer(targetMid,{agent:message.agent,version:message.version},!0,restartConn,message.receiveOnly)},Skylink.prototype._offerHandler=function(message){var self=this,targetMid=message.mid,pc=self._peerConnections[targetMid];if(!pc)return void log.error([targetMid,null,message.type,"Peer connection object not found. Unable to setRemoteDescription for offer"]);log.log([targetMid,null,message.type,"Received offer from peer. Session description:"],message.sdp),self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.OFFER,targetMid);var offer=new window.RTCSessionDescription(message);log.log([targetMid,"RTCSessionDescription",message.type,"Session description object created"],offer),pc.setRemoteDescription(new window.RTCSessionDescription(offer),function(){log.debug([targetMid,"RTCSessionDescription",message.type,"Remote description set"]),pc.setOffer="remote",self._addIceCandidateFromQueue(targetMid),self._doAnswer(targetMid)},function(error){self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ERROR,targetMid,error),log.error([targetMid,null,message.type,"Failed setting remote description:"],error)})},Skylink.prototype._candidateHandler=function(message){var targetMid=message.mid,pc=this._peerConnections[targetMid];log.log([targetMid,null,message.type,"Received candidate from peer. Candidate config:"],{sdp:message.sdp,target:message.target,candidate:message.candidate,label:message.label});var messageCan=message.candidate.split(" "),canType=messageCan[7];log.log([targetMid,null,message.type,"Candidate type:"],canType);var index=message.label,candidate=new window.RTCIceCandidate({sdpMLineIndex:index,candidate:message.candidate});pc?"local"===pc.setOffer&&"remote"===pc.setAnswer||"local"===pc.setAnswer&&"remote"===pc.setOffer?(pc.addIceCandidate(candidate),log.debug([targetMid,"RTCIceCandidate",message.type,"Added candidate"],candidate)):this._addIceCandidateToQueue(targetMid,candidate):(log.debug([targetMid,"RTCIceCandidate",message.type,"Not adding candidate as peer connection not present"]),this._addIceCandidateToQueue(targetMid,candidate))},Skylink.prototype._answerHandler=function(message){var self=this,targetMid=message.mid;log.log([targetMid,null,message.type,"Received answer from peer. Session description:"],message.sdp),self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ANSWER,targetMid);var answer=new window.RTCSessionDescription(message);log.log([targetMid,"RTCSessionDescription",message.type,"Session description object created"],answer);var pc=self._peerConnections[targetMid];"moz"===window.webrtcDetectedType&&"MCU"===targetMid&&(message.sdp=message.sdp.replace(/ generation 0/g,""),message.sdp=message.sdp.replace(/ udp /g," UDP ")),pc.setRemoteDescription(new window.RTCSessionDescription(answer),function(){log.debug([targetMid,null,message.type,"Remote description set"]),pc.setAnswer="remote",self._addIceCandidateFromQueue(targetMid)},function(error){self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ERROR,targetMid,error),log.error([targetMid,null,message.type,"Failed setting remote description:"],error)})},Skylink.prototype.sendMessage=function(message,targetPeerId){var params={cid:this._key,data:message,mid:this._user.sid,rid:this._room.id,type:this._SIG_MESSAGE_TYPE.PUBLIC_MESSAGE};targetPeerId&&(params.target=targetPeerId,params.type=this._SIG_MESSAGE_TYPE.PRIVATE_MESSAGE),log.log([targetPeerId,null,null,"Sending message to peer"+(targetPeerId?"s":"")]),this._sendChannelMessage(params),this._trigger("incomingMessage",{content:message,isPrivate:targetPeerId?!0:!1,targetPeerId:targetPeerId||null,isDataChannel:!1,senderPeerId:this._user.sid},this._user.sid,this._user.info,!0)},Skylink.prototype.VIDEO_RESOLUTION={QVGA:{width:320,height:180},VGA:{width:640,height:360},HD:{width:1280,height:720},FHD:{width:1920,height:1080}},Skylink.prototype._streamSettings={audio:!1,video:!1},Skylink.prototype._audioFallback=!1,Skylink.prototype._onUserMediaSuccess=function(stream){var self=this;log.log([null,"MediaStream",stream.id,"User has granted access to local media"],stream),self._trigger("mediaAccessSuccess",stream);var checkReadyState=setInterval(function(){if(self._readyState===self.READY_STATE_CHANGE.COMPLETED){clearInterval(checkReadyState),self._user.streams[stream.id]=stream,self._user.streams[stream.id].active=!0;var checkIfUserInRoom=setInterval(function(){self._inRoom&&(clearInterval(checkIfUserInRoom),self._trigger("incomingStream",self._user.sid,stream,!0))},500)}},500)},Skylink.prototype._onUserMediaError=function(error){var self=this;log.error([null,"MediaStream","Failed retrieving stream:"],error),self._audioFallback&&self._streamSettings.video?(self._streamSettings.video=!1,self._user=self._user||{},self._user.info=self._user.info||{},self._user.info.settings=self._user.info.settings||{},self._user.info.settings.video=!1,log.debug([null,"MediaStream",null,"Falling back to audio stream call"]),window.getUserMedia({audio:!0},function(stream){self._onUserMediaSuccess(stream)},function(error){log.error([null,"MediaStream",null,"Failed retrieving audio in audio fallback:"],error),self._trigger("mediaAccessError",error)}),this.getUserMedia({audio:!0})):(log.error([null,"MediaStream",null,"Failed retrieving stream:"],error),self._trigger("mediaAccessError",error))},Skylink.prototype._onRemoteStreamAdded=function(targetMid,event){if("MCU"!==targetMid){if(!this._peerInformations[targetMid])return void log.error([targetMid,"MediaStream",event.stream.id,"Received remote stream when peer is not connected. Ignoring stream ->"],event.stream);if(!this._peerInformations[targetMid].settings.audio&&!this._peerInformations[targetMid].settings.video)return void log.log([targetMid,"MediaStream",event.stream.id,"Receive remote stream but ignoring stream as it is empty ->"],event.stream);log.log([targetMid,"MediaStream",event.stream.id,"Received remote stream ->"],event.stream),this._trigger("incomingStream",targetMid,event.stream,!1)}else log.log([targetMid,null,null,"MCU is listening"])},Skylink.prototype._parseStreamSettings=function(options){if(options=options||{},log.debug("Parsing stream settings. Stream options:",options),this._user.info=this._user.info||{},this._user.info.settings=this._user.info.settings||{},this._user.info.mediaStatus=this._user.info.mediaStatus||{},this._user.info.userData=options.userData||this._user.info.userData||"",this._streamSettings.bandwidth=options.bandwidth||this._streamSettings.bandwidth||{},this._user.info.settings.bandwidth=options.bandwidth||this._user.info.settings.bandwidth||{},this._user.info.settings.audio="boolean"==typeof options.audio||"object"==typeof options.audio?options.audio:this._streamSettings.audio||!1,this._user.info.mediaStatus.audioMuted=options.audio?"boolean"==typeof this._user.info.mediaStatus.audioMuted?this._user.info.mediaStatus.audioMuted:!options.audio:!0,this._user.info.settings.video="boolean"==typeof options.video||"object"==typeof options.video?options.video:this._streamSettings.video||!1,this._user.info.mediaStatus.videoMuted=options.video?"boolean"==typeof this._user.info.mediaStatus.videoMuted?this._user.info.mediaStatus.videoMuted:!options.video:!0,options.video||options.audio){if(options.video=options.video||!1,options.audio=options.audio||!1,"object"==typeof options.video&&"object"==typeof options.video.resolution){var width=options.video.resolution.width,height=options.video.resolution.height,frameRate="number"==typeof options.video.frameRate?options.video.frameRate:50;options.video=width&&height?{mandatory:{minWidth:width,minHeight:height},optional:[{minFrameRate:frameRate}]}:!0}"object"==typeof options.audio&&(options.stereo="boolean"==typeof options.audio.stereo?options.audio.stereo:!1,options.audio=!0),this._streamSettings.video="boolean"==typeof options.video&&options.video?this._room.connection.mediaConstraints:options.video,this._streamSettings.audio=options.audio,this._streamSettings.stereo=options.stereo,log.debug("Parsed user stream settings",this._user.info),log.debug("User media status:",{audio:options.audioMuted,video:options.videoMuted})}},Skylink.prototype._setLocalMediaStreams=function(options){var hasAudioTracks=!1,hasVideoTracks=!1;if(!this._user)return void log.error("User have no active streams");for(var stream in this._user.streams)if(this._user.streams.hasOwnProperty(stream)){var audios=this._user.streams[stream].getAudioTracks(),videos=this._user.streams[stream].getVideoTracks();for(var audio in audios)audios.hasOwnProperty(audio)&&(audios[audio].enabled=options.audio,hasAudioTracks=!0);for(var video in videos)videos.hasOwnProperty(video)&&(videos[video].enabled=options.video,hasVideoTracks=!0);this._user.streams[stream].active=options.video||options.audio?!0:!1}return!hasAudioTracks&&options.audio||!hasVideoTracks&&options.video},Skylink.prototype._addLocalMediaStreams=function(peerId){if(log.log([peerId,null,null,"Adding local stream"]),Object.keys(this._user.streams).length>0)for(var stream in this._user.streams)this._user.streams.hasOwnProperty(stream)&&this._user.streams[stream].active&&(this._peerConnections[peerId].addStream(this._user.streams[stream]),log.debug([peerId,"MediaStream",stream,"Sending stream"]));else log.warn([peerId,null,null,"No media to send. Will be only receiving"])},Skylink.prototype._handleLocalMediaStreams=function(mediaType,enableMedia){if("audio"===mediaType||"video"===mediaType){if(!this._inRoom)return void log.error("Failed "+(enableMedia?"enabling":"disabling")+" "+mediaType+". User is not in the room");var hasTracks=!1,isStreamActive=!1;for(var stream in this._user.streams)if(this._user.streams.hasOwnProperty(stream)){var tracks="audio"===mediaType?this._user.streams[stream].getAudioTracks():this._user.streams[stream].getVideoTracks();for(var track in tracks)tracks.hasOwnProperty(track)&&(tracks[track].enabled=enableMedia,hasTracks=!0);isStreamActive=this._user.streams[stream].active}if(log.log("Update to is"+mediaType+"Muted status ->",enableMedia),hasTracks&&isStreamActive||!enableMedia)this._sendChannelMessage({type:"audio"===mediaType?this._SIG_MESSAGE_TYPE.MUTE_AUDIO:this._SIG_MESSAGE_TYPE.MUTE_VIDEO,mid:this._user.sid,rid:this._room.id,muted:!enableMedia}),this._user.info.mediaStatus[mediaType+"Muted"]=!enableMedia,this._trigger("peerUpdated",this._user.sid,this._user.info,!0);else{this.leaveRoom();var hasProperty=this._user&&this._user.info&&this._user.info.settings?!0:!1;this.joinRoom({audio:"audio"===mediaType?!0:hasProperty?this._user.info.settings.audio:!1,video:"video"===mediaType?!0:hasProperty?this._user.info.settings.video:!1}),this._user.info.mediaStatus[mediaType+"Muted"]=!enableMedia}}},Skylink.prototype._waitForLocalMediaStream=function(callback,options){var self=this;options=options||{},self.getUserMedia(options),log.log("Requested audio:","boolean"==typeof options.audio?options.audio:!1),log.log("Requested video:","boolean"==typeof options.video?options.video:!1);var hasAudio=options.audio?!1:!0,hasVideo=options.video?!1:!0;if(options.video||options.audio)var count=0,checkForStream=setInterval(function(){if(5>count)for(var stream in self._user.streams)self._user.streams.hasOwnProperty(stream)&&(options.audio&&self._user.streams[stream].getAudioTracks().length>0&&(hasAudio=!0),options.video&&self._user.streams[stream].getVideoTracks().length>0&&(hasVideo=!0),hasAudio&&hasVideo?(clearInterval(checkForStream),callback()):count++);else{clearInterval(checkForStream);var error=(!hasAudio&&options.audio?"Expected audio but no audio stream received":"")+"\n"+(!hasVideo&&options.video?"Expected video but no video stream received":"");log.error([null,"Socket",self._selectedRoom,"Failed joining room:"],error),self._trigger("mediaAccessError",error)}},2e3);else callback()},Skylink.prototype.getUserMedia=function(options){var self=this,getStream=!1;if(options=options||{audio:!0,video:!0},self._user=self._user||{},self._user.info=self._user.info||{},self._user.info.settings=self._user.info.settings||{},self._user.streams=self._user.streams||[],self._user.info.settings?options.video||options.audio?(self._user.info.settings.audio!==options.audio||self._user.info.settings.video!==options.video)&&(Object.keys(self._user.streams).length>0?(getStream=self._setLocalMediaStreams(options),getStream&&(self._user.streams=[])):getStream=!0):log.info("No audio or video stream is requested"):getStream=!0,self._parseStreamSettings(options),getStream)try{window.getUserMedia({audio:self._streamSettings.audio,video:self._streamSettings.video},function(stream){self._onUserMediaSuccess(stream)
},function(error){self._onUserMediaError(error)})}catch(error){self._onUserMediaError(error)}else Object.keys(self._user.streams).length>0?log.log([null,"MediaStream",null,"User has already this mediastream. Reactiving media"]):log.warn([null,"MediaStream",null,"Not retrieving stream"])},Skylink.prototype.enableAudio=function(){this._handleLocalMediaStreams("audio",!0)},Skylink.prototype.disableAudio=function(){this._handleLocalMediaStreams("audio",!1)},Skylink.prototype.enableVideo=function(){this._handleLocalMediaStreams("video",!0)},Skylink.prototype.disableVideo=function(){this._handleLocalMediaStreams("video",!1)},Skylink.prototype._findSDPLine=function(sdpLines,condition,value){for(var index in sdpLines)if(sdpLines.hasOwnProperty(index))for(var c in condition)if(condition.hasOwnProperty(c)&&0===sdpLines[index].indexOf(c))return sdpLines[index]=value,[index,sdpLines[index]];return[]},Skylink.prototype._addStereo=function(sdpLines){var opusLineFound=!1,opusPayload=0,rtpmapLine=this._findSDPLine(sdpLines,["a=rtpmap:"]);if(rtpmapLine.length&&0===rtpmapLine[1].split(" ")[1].indexOf("opus/48000/")&&(opusLineFound=!0,opusPayload=rtpmapLine[1].split(" ")[0].split(":")[1]),opusLineFound){var fmtpLine=this._findSDPLine(sdpLines,["a=fmtp:"+opusPayload]);fmtpLine.length&&(sdpLines[fmtpLine[0]]=fmtpLine[1]+"; stereo=1")}return sdpLines},Skylink.prototype._setSDPBitrate=function(sdpLines){var bandwidth=this._streamSettings.bandwidth,maLineFound=this._findSDPLine(sdpLines,["m=","a="]).length,cLineFound=this._findSDPLine(sdpLines,["c="]).length;if(maLineFound&&cLineFound){if(bandwidth.audio){var audioLine=this._findSDPLine(sdpLines,["a=mid:audio","m=mid:audio"]);sdpLines.splice(audioLine[0],0,"b=AS:"+bandwidth.audio)}if(bandwidth.video){var videoLine=this._findSDPLine(sdpLines,["a=mid:video","m=mid:video"]);sdpLines.splice(videoLine[0],0,"b=AS:"+bandwidth.video)}if(bandwidth.data){var dataLine=this._findSDPLine(sdpLines,["a=mid:data","m=mid:data"]);sdpLines.splice(dataLine[0],0,"b=AS:"+bandwidth.data)}}return sdpLines},Skylink.prototype._removeFirefoxH264Pref=function(sdpLines){var invalidLineIndex=sdpLines.indexOf("a=fmtp:0 profile-level-id=0x42e00c;packetization-mode=1");return invalidLineIndex>-1&&(log.debug("Firefox H264 invalid pref found:",invalidLineIndex),sdpLines.splice(invalidLineIndex,1)),sdpLines},Skyway=Skylink}).call(this);