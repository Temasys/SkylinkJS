/*! skylinkjs - v0.6.24 - 2017-08-29 */
!function(globals){"use strict";function Skylink(){this._enableDataChannel=!0,this._dataChannels={},this._dataTransfers={},this._dataStreams={},this._peerCandidatesQueue={},this._peerEndOfCandidatesCounter={},this._gatheredCandidates={},this._filterCandidatesType={host:!1,srflx:!1,relay:!1},this._enableIceTrickle=!0,this._enableSTUN=!0,this._enableTURN=!0,this._usePublicSTUN=!0,this._retryCounters={},this._peerConnections={},this._peerStats={},this._peerBandwidth={},this._peerCustomConfigs={},this._isUsingPlugin=!1,this._TURNTransport="any",this._peerInformations={},this._user=null,this._userData="",this._peerPriorityWeight=0,this._autoIntroduce=!0,this._isPrivileged=!1,this._peerList=null,this._selectedRoom=null,this._roomLocked=!1,this._inRoom=!1,this._EVENTS={},this._onceEvents={},this._timestamp={socketMessage:null,shareScreen:null,refreshConnection:null,getUserMedia:null,lastRestart:null},this._throttlingTimeouts={shareScreen:1e4,refreshConnection:5e3,getUserMedia:0},this._throttlingShouldThrowError=!1,this._socketSession={},this._socketMessageQueue=[],this._socketMessageTimeout=null,this._socketPorts={"http:":[80,3e3],"https:":[443,3443]},this._channelOpen=!1,this._signalingServer=null,this._signalingServerProtocol=window.location.protocol,this._signalingServerPort=null,this._socket=null,this._socketTimeout=2e4,this._socketUseXDR=!1,this._enableIceRestart="firefox"!==window.webrtcDetectedBrowser||window.webrtcDetectedVersion>=48,this._hasMCU=!1,this._forceSSL=!1,this._forceTURNSSL=!1,this._forceTURN=!1,this._path=null,this._roomServer="//api.temasys.io",this._appKey=null,this._defaultRoom=null,this._roomStart=null,this._roomDuration=null,this._roomCredentials=null,this._readyState=0,this._key=null,this._appKeyOwner=null,this._room=null,this._peerMessagesStamps={},this._audioFallback=!1,this._streams={userMedia:null,screenshare:null},this._streamsDefaultSettings={userMedia:{audio:{stereo:!1},video:{resolution:{width:640,height:480},frameRate:50}},screenshare:{video:!0}},this._streamsMutedSettings={audioMuted:!1,videoMuted:!1},this._streamsBandwidthSettings={googleX:{},bAS:{}},this._streamsStoppedCbs={},this._streamsSession={},this._selectedAudioCodec="auto",this._selectedVideoCodec="auto",this._disableVideoFecCodecs=!1,this._disableComfortNoiseCodec=!1,this._disableREMB=!1,this._sdpSettings={connection:{audio:!0,video:!0,data:!0},direction:{audio:{send:!0,receive:!0},video:{send:!0,receive:!0}}},this._publishOnly=!1,this._parentId=null,this._recordings={},this._currentRecordingId=!1,this._recordingStartInterval=null,this._mcuUseRenegoRestart=!1,this._iceServer=null,this._socketServer=null,this._currentCodecSupport=null,this._sdpSessions={},this._voiceActivityDetection=!0,this._binaryChunkType="firefox"===window.webrtcDetectedBrowser?this.DATA_TRANSFER_DATA_TYPE.BLOB:this.DATA_TRANSFER_DATA_TYPE.ARRAY_BUFFER,this._peerConnectionConfig={},this._codecParams={},this._priorityWeightScheme=this.PRIORITY_WEIGHT_SCHEME.AUTO,this._bandwidthAdjuster=null,this._peerConnStatus={},this._useEdgeWebRTC=!1,this._useSafariWebRTC=!1}!function(){Object.keys||(Object.keys=function(){var t=Object.prototype.hasOwnProperty,r=!{toString:null}.propertyIsEnumerable("toString"),e=["toString","toLocaleString","valueOf","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"],o=e.length;return function(n){if("object"!=typeof n&&"function"!=typeof n||null===n)throw new TypeError("Object.keys called on non-object");var c=[];for(var l in n)t.call(n,l)&&c.push(l);if(r)for(var p=0;o>p;p++)t.call(n,e[p])&&c.push(e[p]);return c}}())}(),function(){function t(t){return 10>t?"0"+t:t}Date.prototype.toISOString=function(){return this.getUTCFullYear()+"-"+t(this.getUTCMonth()+1)+"-"+t(this.getUTCDate())+"T"+t(this.getUTCHours())+":"+t(this.getUTCMinutes())+":"+t(this.getUTCSeconds())+"."+(this.getUTCMilliseconds()/1e3).toFixed(3).slice(2,5)+"Z"}}(),function(){"function"!=typeof Date.now&&(Date.now=function(){return(new Date).getTime()})}(),function(e,t){function n(e){var n=t[e];t[e]=function(e){return o(n(e))}}function a(t,n,a){return(a=this).attachEvent("on"+t,function(t){var t=t||e.event;t.preventDefault=t.preventDefault||function(){t.returnValue=!1},t.stopPropagation=t.stopPropagation||function(){t.cancelBubble=!0},n.call(a,t)})}function o(e,t){if(t=e.length)for(;t--;)e[t].addEventListener=a;else e.addEventListener=a;return e}e.addEventListener||(o([t,e]),"Element"in e?e.Element.prototype.addEventListener=a:(t.attachEvent("onreadystatechange",function(){o(t.all)}),n("getElementsByTagName"),n("getElementById"),n("createElement"),o(t.all)))}(window,document),function(){if("performance"in window==0&&(window.performance={}),Date.now=Date.now||function(){return(new Date).getTime()},"now"in window.performance==0){var a=Date.now();performance.timing&&performance.timing.navigationStart&&(a=performance.timing.navigationStart),window.performance.now=function(){return Date.now()-a}}}(),window.BlobBuilder=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder;var clone=function(obj){if(null===obj||"object"!=typeof obj)return obj;var copy=function(data){var copy=data.constructor();for(var attr in data)data.hasOwnProperty(attr)&&(copy[attr]=data[attr]);return copy};if("object"==typeof obj&&!Array.isArray(obj))try{return JSON.parse(JSON.stringify(obj))}catch(err){return copy(obj)}return copy(obj)};Skylink.prototype.DATA_CHANNEL_STATE={CONNECTING:"connecting",OPEN:"open",CLOSING:"closing",CLOSED:"closed",ERROR:"error",CREATE_ERROR:"createError",BUFFERED_AMOUNT_LOW:"bufferedAmountLow",SEND_MESSAGE_ERROR:"sendMessageError"},Skylink.prototype.DATA_CHANNEL_TYPE={MESSAGING:"messaging",DATA:"data"},Skylink.prototype.DATA_CHANNEL_MESSAGE_ERROR={MESSAGE:"message",TRANSFER:"transfer"},Skylink.prototype._createDataChannel=function(peerId,dataChannel,bufferThreshold,createAsMessagingChannel){var self=this,channelName=(self._user&&self._user.sid?self._user.sid:"-")+"_"+peerId,channelType=createAsMessagingChannel?self.DATA_CHANNEL_TYPE.MESSAGING:self.DATA_CHANNEL_TYPE.DATA,channelProp=channelType===self.DATA_CHANNEL_TYPE.MESSAGING?"main":channelName;if(!self._user)return void log.error([peerId,"RTCDataChannel",channelProp,"Aborting of creating or initializing Datachannel as User does not have Room session"]);if(!self._peerConnections[peerId]||self._peerConnections[peerId].signalingState===self.PEER_CONNECTION_STATE.CLOSED)return void log.error([peerId,"RTCDataChannel",channelProp,"Aborting of creating or initializing Datachannel as Peer connection does not exists"]);if(dataChannel&&"object"==typeof dataChannel?channelName=dataChannel.label:"string"==typeof dataChannel&&(channelName=dataChannel,dataChannel=null),!dataChannel)try{dataChannel=self._peerConnections[peerId].createDataChannel(channelName,{reliable:!0,ordered:!0})}catch(error){return log.error([peerId,"RTCDataChannel",channelProp,"Failed creating Datachannel ->"],error),void self._trigger("dataChannelState",self.DATA_CHANNEL_STATE.CREATE_ERROR,peerId,error,channelName,channelType,null,self._getDataChannelBuffer(dataChannel))}self._dataChannels[peerId]?self._dataChannels[peerId].main&&self._dataChannels[peerId].main.channel.label===channelName&&(channelProp="main",channelType=self.DATA_CHANNEL_TYPE.MESSAGING):(channelProp="main",channelType=self.DATA_CHANNEL_TYPE.MESSAGING,self._dataChannels[peerId]={},log.debug([peerId,"RTCDataChannel",channelProp,"initializing main DataChannel"])),dataChannel.onerror=function(evt){var channelError=evt.error||evt;log.error([peerId,"RTCDataChannel",channelProp,"Datachannel has an exception ->"],channelError),self._trigger("dataChannelState",self.DATA_CHANNEL_STATE.ERROR,peerId,channelError,channelName,channelType,null,self._getDataChannelBuffer(dataChannel))},dataChannel.onbufferedamountlow=function(){log.debug([peerId,"RTCDataChannel",channelProp,"Datachannel buffering data transfer low"]),self._trigger("dataChannelState",self.DATA_CHANNEL_STATE.BUFFERED_AMOUNT_LOW,peerId,null,channelName,channelType,null,self._getDataChannelBuffer(dataChannel))},dataChannel.onmessage=function(event){self._processDataChannelData(event.data,peerId,channelName,channelType)};var onOpenHandlerFn=function(){log.debug([peerId,"RTCDataChannel",channelProp,"Datachannel has opened"]),dataChannel.bufferedAmountLowThreshold=bufferThreshold||0,self._trigger("dataChannelState",self.DATA_CHANNEL_STATE.OPEN,peerId,null,channelName,channelType,null,self._getDataChannelBuffer(dataChannel))};dataChannel.readyState===self.DATA_CHANNEL_STATE.OPEN?setTimeout(onOpenHandlerFn,1):(self._trigger("dataChannelState",dataChannel.readyState,peerId,null,channelName,channelType,null,self._getDataChannelBuffer(dataChannel)),dataChannel.onopen=onOpenHandlerFn);var onCloseHandlerFn=function(){log.debug([peerId,"RTCDataChannel",channelProp,"Datachannel has closed"]),self._trigger("dataChannelState",self.DATA_CHANNEL_STATE.CLOSED,peerId,null,channelName,channelType,null,self._getDataChannelBuffer(dataChannel)),self._peerConnections[peerId]&&self._peerConnections[peerId].remoteDescription&&self._peerConnections[peerId].remoteDescription.sdp&&(-1===self._peerConnections[peerId].remoteDescription.sdp.indexOf("m=application")||self._peerConnections[peerId].remoteDescription.sdp.indexOf("m=application 0")>0)||channelType===self.DATA_CHANNEL_TYPE.MESSAGING&&setTimeout(function(){self._peerConnections[peerId]&&self._peerConnections[peerId].signalingState!==self.PEER_CONNECTION_STATE.CLOSED&&self._peerConnections[peerId].localDescription&&self._peerConnections[peerId].localDescription.type===self.HANDSHAKE_PROGRESS.OFFER&&(log.debug([peerId,"RTCDataChannel",channelProp,"Reviving Datachannel connection"]),self._createDataChannel(peerId,channelName,bufferThreshold,!0))},100)};if("firefox"===window.webrtcDetectedBrowser){var hasTriggeredClose=!1,timeBlockAfterClosing=0;dataChannel.onclose=function(){hasTriggeredClose||(hasTriggeredClose=!0,onCloseHandlerFn())};var onFFClosed=setInterval(function(){dataChannel.readyState===self.DATA_CHANNEL_STATE.CLOSED||hasTriggeredClose||5===timeBlockAfterClosing?(clearInterval(onFFClosed),hasTriggeredClose||(hasTriggeredClose=!0,onCloseHandlerFn())):dataChannel.readyState===self.DATA_CHANNEL_STATE.CLOSING&&timeBlockAfterClosing++},1e3)}else dataChannel.onclose=onCloseHandlerFn;channelType===self.DATA_CHANNEL_TYPE.MESSAGING?self._dataChannels[peerId].main={channelName:channelName,channelType:channelType,transferId:null,streamId:null,channel:dataChannel}:self._dataChannels[peerId][channelName]={channelName:channelName,channelType:channelType,transferId:null,streamId:null,channel:dataChannel}},Skylink.prototype._getDataChannelBuffer=function(peerId,channelProp){if("object"==typeof peerId)return{bufferedAmountLow:"number"==typeof peerId.bufferedAmountLow?peerId.bufferedAmountLow:parseInt(peerId.bufferedAmountLow,10)||0,bufferedAmountLowThreshold:"number"==typeof peerId.bufferedAmountLowThreshold?peerId.bufferedAmountLowThreshold:parseInt(peerId.bufferedAmountLowThreshold,10)||0};if(!(this._dataChannels[peerId]&&this._dataChannels[peerId][channelProp]&&this._dataChannels[peerId][channelProp].channel))return{bufferedAmountLow:0,bufferedAmountLowThreshold:0};var channel=this._dataChannels[peerId][channelProp].channel;return{bufferedAmountLow:"number"==typeof channel.bufferedAmountLow?channel.bufferedAmountLow:parseInt(channel.bufferedAmountLow,10)||0,bufferedAmountLowThreshold:"number"==typeof channel.bufferedAmountLowThreshold?channel.bufferedAmountLowThreshold:parseInt(channel.bufferedAmountLowThreshold,10)||0}},Skylink.prototype._sendMessageToDataChannel=function(peerId,data,channelProp,doNotConvert){var self=this;if(channelProp&&channelProp!==peerId||(channelProp="main"),!("object"==typeof data&&data||data&&"string"==typeof data))return void log.warn([peerId,"RTCDataChannel",channelProp,"Dropping invalid data ->"],data);if(!self._peerConnections[peerId]||self._peerConnections[peerId].signalingState===self.PEER_CONNECTION_STATE.CLOSED)return void log.warn([peerId,"RTCDataChannel",channelProp,"Dropping for sending message as Peer connection does not exists or is closed ->"],data);if(!self._dataChannels[peerId]||!self._dataChannels[peerId][channelProp])return void log.warn([peerId,"RTCDataChannel",channelProp,"Dropping for sending message as Datachannel connection does not exists ->"],data);var channelName=self._dataChannels[peerId][channelProp].channelName,channelType=self._dataChannels[peerId][channelProp].channelType,readyState=self._dataChannels[peerId][channelProp].channel.readyState,messageType="object"==typeof data&&data.type===self._DC_PROTOCOL_TYPE.MESSAGE?self.DATA_CHANNEL_MESSAGE_ERROR.MESSAGE:self.DATA_CHANNEL_MESSAGE_ERROR.TRANSFER;if(readyState!==self.DATA_CHANNEL_STATE.OPEN){var notOpenError='Failed sending message as Datachannel connection state is not opened. Current readyState is "'+readyState+'"';throw log.error([peerId,"RTCDataChannel",channelProp,notOpenError+" ->"],data),self._trigger("dataChannelState",self.DATA_CHANNEL_STATE.SEND_MESSAGE_ERROR,peerId,new Error(notOpenError),channelName,channelType,messageType,self._getDataChannelBuffer(peerId,channelProp)),new Error(notOpenError)}try{doNotConvert||"object"!=typeof data?(log.debug([peerId,"RTCDataChannel",channelProp,"Sending data with size ->"],data.size||data.length||data.byteLength),self._dataChannels[peerId][channelProp].channel.send(data)):(log.debug([peerId,"RTCDataChannel",channelProp,'Sending "'+data.type+'" protocol message ->'],data),self._dataChannels[peerId][channelProp].channel.send(JSON.stringify(data)))}catch(error){throw log.error([peerId,"RTCDataChannel",channelProp,"Failed sending "+(doNotConvert||"object"!=typeof data?"data":'"'+data.type+'" protocol message')+" ->"],error),self._trigger("dataChannelState",self.DATA_CHANNEL_STATE.SEND_MESSAGE_ERROR,peerId,error,channelName,channelType,messageType,self._getDataChannelBuffer(peerId,channelProp)),error}},Skylink.prototype._closeDataChannel=function(peerId,channelProp){var self=this;if(!self._dataChannels[peerId])return void log.warn([peerId,"RTCDataChannel",channelProp||null,"Aborting closing Datachannels as Peer connection does not have Datachannel sessions"]);var closeFn=function(rChannelProp){var channelName=self._dataChannels[peerId][rChannelProp].channelName,channelType=self._dataChannels[peerId][rChannelProp].channelType;self._dataChannels[peerId][rChannelProp].readyState!==self.DATA_CHANNEL_STATE.CLOSED&&(log.debug([peerId,"RTCDataChannel",channelProp,"Closing Datachannel"]),self._trigger("dataChannelState",self.DATA_CHANNEL_STATE.CLOSING,peerId,null,channelName,channelType,null,self._getDataChannelBuffer(peerId,rChannelProp)),self._dataChannels[peerId][rChannelProp].channel.close(),delete self._dataChannels[peerId][rChannelProp])};if(channelProp){if(!self._dataChannels[peerId][channelProp])return void log.warn([peerId,"RTCDataChannel",channelProp,"Aborting closing Datachannel as it does not exists"]);closeFn(channelProp)}else for(var channelNameProp in self._dataChannels)self._dataChannels[peerId].hasOwnProperty(channelNameProp)&&self._dataChannels[peerId][channelNameProp]&&closeFn(channelNameProp)},Skylink.prototype.DATA_TRANSFER_DATA_TYPE={BINARY_STRING:"binaryString",ARRAY_BUFFER:"arrayBuffer",BLOB:"blob",STRING:"string"},Skylink.prototype._CHUNK_FILE_SIZE=49152,Skylink.prototype._MOZ_CHUNK_FILE_SIZE=12288,Skylink.prototype._BINARY_FILE_SIZE=65456,Skylink.prototype._MOZ_BINARY_FILE_SIZE=16384,Skylink.prototype._CHUNK_DATAURL_SIZE=1212,Skylink.prototype._base64ToBlob=function(dataURL){for(var byteString=atob(dataURL),ab=new ArrayBuffer(byteString.length),ia=new Uint8Array(ab),j=0;j<byteString.length;j++)ia[j]=byteString.charCodeAt(j);return new Blob([ab])},Skylink.prototype._blobToBase64=function(data,callback){var fileReader=new FileReader;fileReader.onload=function(){var base64BinaryString=fileReader.result.split(",")[1];callback(base64BinaryString)},fileReader.readAsDataURL(data)},Skylink.prototype._blobToArrayBuffer=function(data,callback){var self=this,fileReader=new FileReader;fileReader.onload=function(){callback(self._isUsingPlugin?new Int8Array(fileReader.result):fileReader.result)},fileReader.readAsArrayBuffer(data)},Skylink.prototype._chunkBlobData=function(blob,chunkSize){var chunksArray=[],startCount=0,endCount=0,blobByteSize=blob.size;if(blobByteSize>chunkSize){for(;blobByteSize-1>endCount;)endCount=startCount+chunkSize,chunksArray.push(blob.slice(startCount,endCount)),startCount+=chunkSize;blobByteSize-(startCount+1)>0&&chunksArray.push(blob.slice(startCount,blobByteSize-1))}else chunksArray.push(blob);return chunksArray},Skylink.prototype._chunkDataURL=function(dataURL,chunkSize){var outputStr=dataURL,dataURLArray=[],startCount=0,endCount=0,dataByteSize=dataURL.size||dataURL.length;if(dataByteSize>chunkSize){for(;dataByteSize-1>endCount;)endCount=startCount+chunkSize,dataURLArray.push(outputStr.slice(startCount,endCount)),startCount+=chunkSize;dataByteSize-(startCount+1)>0&&chunksArray.push(outputStr.slice(startCount,dataByteSize-1))}else dataURLArray.push(outputStr);return dataURLArray},Skylink.prototype.DT_PROTOCOL_VERSION="0.1.3",Skylink.prototype.DATA_TRANSFER_TYPE={UPLOAD:"upload",DOWNLOAD:"download"},Skylink.prototype.DATA_TRANSFER_SESSION_TYPE={BLOB:"blob",DATA_URL:"dataURL"},Skylink.prototype.DATA_TRANSFER_STATE={UPLOAD_REQUEST:"request",UPLOAD_STARTED:"uploadStarted",DOWNLOAD_STARTED:"downloadStarted",REJECTED:"rejected",CANCEL:"cancel",ERROR:"error",UPLOADING:"uploading",DOWNLOADING:"downloading",UPLOAD_COMPLETED:"uploadCompleted",DOWNLOAD_COMPLETED:"downloadCompleted",USER_REJECTED:"userRejected",USER_UPLOAD_REQUEST:"userRequest",START_ERROR:"startError"},Skylink.prototype.DATA_STREAM_STATE={SENDING_STARTED:"sendStart",SENDING_STOPPED:"sendStop",RECEIVING_STARTED:"receiveStart",RECEIVING_STOPPED:"receiveStop",RECEIVED:"received",SENT:"sent",ERROR:"error",START_ERROR:"startError"},Skylink.prototype._DC_PROTOCOL_TYPE={WRQ:"WRQ",ACK:"ACK",ERROR:"ERROR",CANCEL:"CANCEL",MESSAGE:"MESSAGE"},Skylink.prototype.sendBlobData=function(data,timeout,targetPeerId,sendChunksAsBinary,callback){this._startDataTransfer(data,timeout,targetPeerId,sendChunksAsBinary,callback,"blob")},Skylink.prototype.sendURLData=function(data,timeout,targetPeerId,callback){this._startDataTransfer(data,timeout,targetPeerId,callback,null,"data")},Skylink.prototype.respondBlobRequest=Skylink.prototype.acceptDataTransfer=function(peerId,transferId,accept){var self=this;if("string"!=typeof transferId&&"string"!=typeof peerId)return void log.error([peerId,"RTCDataChannel",transferId,"Aborting accept data transfer as data transfer ID or peer ID is not provided"]);if(!self._dataChannels[peerId])return void log.error([peerId,"RTCDataChannel",transferId,"Aborting accept data transfer as Peer does not have any Datachannel connections"]);if(!self._dataTransfers[transferId])return void log.error([peerId,"RTCDataChannel",transferId,"Aborting accept data transfer as invalid transfer ID is provided"]);var channelProp="main";if(self._dataChannels[peerId][transferId]&&(channelProp=transferId),accept){log.debug([peerId,"RTCDataChannel",transferId,"Accepted data transfer and starting ..."]);var dataChannelStateCbFn=function(state,evtPeerId,error,cN,cT){console.info(evtPeerId,error,cN,cT),self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.ERROR,transferId,peerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),{transferType:self.DATA_TRANSFER_TYPE.DOWNLOAD,message:new Error("Data transfer terminated as Peer Datachannel connection closed abruptly.")})};self.once("dataChannelState",dataChannelStateCbFn,function(state,evtPeerId,error,channelName,channelType){return self._dataTransfers[transferId]&&self._dataTransfers[transferId].sessions[peerId]?evtPeerId===peerId&&("main"===channelProp?channelType===self.DATA_CHANNEL_STATE.MESSAGING:channelName===transferId)&&[self.DATA_CHANNEL_STATE.CLOSING,self.DATA_CHANNEL_STATE.CLOSED,self.DATA_CHANNEL_STATE.ERROR].indexOf(state)>-1:void self.off("dataChannelState",dataChannelStateCbFn)}),self.once("dataTransferState",function(){dataChannelStateCbFn&&self.off("dataChannelState",dataChannelStateCbFn),delete self._dataTransfers[transferId],self._dataChannels[peerId]&&("main"===channelProp&&self._dataChannels[peerId].main&&(self._dataChannels[peerId].main.transferId=null),channelProp===transferId&&self._closeDataChannel(peerId,transferId))},function(state,evtTransferId,evtPeerId){return evtTransferId===transferId&&evtPeerId===peerId&&[self.DATA_TRANSFER_STATE.ERROR,self.DATA_TRANSFER_STATE.CANCEL,self.DATA_TRANSFER_STATE.DOWNLOAD_COMPLETED].indexOf(state)>-1}),self._sendMessageToDataChannel(peerId,{type:self._DC_PROTOCOL_TYPE.ACK,sender:self._user.sid,ackN:0},channelProp),self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.DOWNLOAD_STARTED,transferId,peerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),null)}else log.warn([peerId,"RTCDataChannel",transferId,"Rejected data transfer and data transfer request has been aborted"]),self._sendMessageToDataChannel(peerId,{type:self._DC_PROTOCOL_TYPE.ACK,sender:self._user.sid,ackN:-1},channelProp),"main"===channelProp&&self._dataChannels[peerId].main&&(self._dataChannels[peerId].main.transferId=null),self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.USER_REJECTED,transferId,peerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),{message:new Error("Data transfer terminated as User has rejected data transfer request."),transferType:self.DATA_TRANSFER_TYPE.DOWNLOAD}),delete self._dataTransfers[transferId]},Skylink.prototype.cancelBlobTransfer=Skylink.prototype.cancelDataTransfer=function(peerId,transferId){var self=this;if(!transferId||"string"!=typeof transferId)return void log.error([peerId,"RTCDataChannel",transferId,"Aborting cancel data transfer as data transfer ID is not provided"]);if(!peerId||"string"!=typeof peerId)return void log.error([peerId,"RTCDataChannel",transferId,"Aborting cancel data transfer as peer ID is not provided"]);if(!self._dataTransfers[transferId])return void log.error([peerId,"RTCDataChannel",transferId,"Aborting cancel data transfer as data transfer session does not exists."]);log.debug([peerId,"RTCDataChannel",transferId,"Canceling data transfer ..."]);var emitEventFn=function(peers,transferInfoPeerId){for(var i=0;i<peers.length;i++)self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.CANCEL,transferId,peers[i],self._getTransferInfo(transferId,transferInfoPeerId,!1,!1,!1),{transferType:self._dataTransfers[transferId].direction,message:new Error("User cancelled download transfer")})};if(self._hasMCU&&self._dataTransfers[transferId].direction===self.DATA_TRANSFER_TYPE.UPLOAD){if(!self._dataChannels.MCU)return void log.error([peerId,"RTCDataChannel",transferId,"Aborting cancel data transfer as Peer does not have any Datachannel connections"]);log.warn([peerId,"RTCDataChannel",transferId,"Aborting all data transfers to Peers"]),Object.keys(self._dataTransfers[transferId].peers.main).length>0&&self._sendMessageToDataChannel("MCU",{type:self._DC_PROTOCOL_TYPE.CANCEL,sender:self._user.sid,content:"Peer cancelled download transfer",name:self._dataTransfers[transferId].name,ackN:0},"main"),Object.keys(self._dataTransfers[transferId].peers[transferId]).length>0&&self._sendMessageToDataChannel("MCU",{type:self._DC_PROTOCOL_TYPE.CANCEL,sender:self._user.sid,content:"Peer cancelled download transfer",name:self._dataTransfers[transferId].name,ackN:0},transferId),emitEventFn(Object.keys(self._dataTransfers[transferId].peers.main).concat(Object.keys(self._dataTransfers[transferId].peers[transferId])))}else{var channelProp="main";if(!self._dataChannels[peerId])return void log.error([peerId,"RTCDataChannel",transferId,"Aborting cancel data transfer as Peer does not have any Datachannel connections"]);self._dataChannels[peerId][transferId]&&(channelProp=transferId),self._sendMessageToDataChannel(peerId,{type:self._DC_PROTOCOL_TYPE.CANCEL,sender:self._user.sid,content:"Peer cancelled download transfer",name:self._dataTransfers[transferId].name,ackN:0},channelProp),emitEventFn([peerId],peerId)}},Skylink.prototype.sendP2PMessage=function(message,targetPeerId){var listOfPeers=Object.keys(this._dataChannels),isPrivate=!1;if(Array.isArray(targetPeerId)?(listOfPeers=targetPeerId,isPrivate=!0):targetPeerId&&"string"==typeof targetPeerId&&(listOfPeers=[targetPeerId],isPrivate=!0),!this._inRoom||!this._user||!this._user.sid)return void log.error("Unable to send message as User is not in Room. ->",message);if(!this._enableDataChannel)return void log.error("Unable to send message as User does not have Datachannel enabled. ->",message);for(var i=0;i<listOfPeers.length;i++){var peerId=listOfPeers[i];this._dataChannels[peerId]?"MCU"===peerId?(listOfPeers.splice(i,1),i--):this._hasMCU||(log.debug([peerId,"RTCDataChannel",null,"Sending "+(isPrivate?"private":"")+" P2P message to Peer"]),this._sendMessageToDataChannel(peerId,{type:this._DC_PROTOCOL_TYPE.MESSAGE,isPrivate:isPrivate,sender:this._user.sid,target:peerId,data:message},"main")):(log.error([peerId,"RTCDataChannel",null,"Dropping of sending message to Peer as Datachannel connection does not exists"]),listOfPeers.splice(i,1),i--)}0===listOfPeers.length&&log.warn("Currently there are no Peers to send P2P message to (unless the message is queued and there are Peer connected by then)."),this._hasMCU&&(log.debug(["MCU","RTCDataChannel",null,"Broadcasting "+(isPrivate?"private":"")+" P2P message to Peers"]),this._sendMessageToDataChannel("MCU",{type:this._DC_PROTOCOL_TYPE.MESSAGE,isPrivate:isPrivate,sender:this._user.sid,target:listOfPeers,data:message},"main")),this._trigger("incomingMessage",{content:message,isPrivate:isPrivate,targetPeerId:targetPeerId||null,listOfPeers:listOfPeers,isDataChannel:!0,senderPeerId:this._user.sid},this._user.sid,this.getPeerInfo(),!0)},Skylink.prototype.startStreamingData=function(isStringStream,targetPeerId){var self=this,listOfPeers=Object.keys(self._dataChannels),isPrivate=!1,sessionChunkType="binary";Array.isArray(targetPeerId)?(listOfPeers=targetPeerId,isPrivate=!0):targetPeerId&&"string"==typeof targetPeerId&&(listOfPeers=[targetPeerId],isPrivate=!0),Array.isArray(isStringStream)?(listOfPeers=isStringStream,targetPeerId=isStringStream,isPrivate=!0):isStringStream&&"string"==typeof isStringStream?(listOfPeers=[isStringStream],targetPeerId=isStringStream,isPrivate=!0):isStringStream&&"boolean"==typeof isStringStream&&(sessionChunkType="string");var sessionInfo={chunk:null,chunkSize:0,chunkType:"string"===sessionChunkType?self.DATA_TRANSFER_DATA_TYPE.STRING:self._binaryChunkType,isPrivate:isPrivate,isStringStream:"string"===sessionChunkType,senderPeerId:self._user&&self._user.sid?self._user.sid:null};listOfPeers.indexOf("MCU")>-1&&listOfPeers.splice(listOfPeers.indexOf("MCU"),1);var emitErrorBeforeStreamingFn=function(error){log.error(error)};if(!this._inRoom||!this._user||!this._user.sid)return emitErrorBeforeStreamingFn("Unable to start data streaming as User is not in Room.");if(!this._enableDataChannel)return emitErrorBeforeStreamingFn("Unable to start data streaming as User does not have Datachannel enabled.");if(0===listOfPeers.length)return emitErrorBeforeStreamingFn("Unable to start data streaming as there are no Peers to start session with.");if(self._hasMCU)return emitErrorBeforeStreamingFn("Unable to start data streaming as this feature is current not supported by MCU yet.");for(var transferId="stream_"+(self._user&&self._user.sid?self._user.sid:"-")+"_"+(new Date).getTime(),peersInterop=[],peersNonInterop=[],sessions={},listenToPeerFn=function(peerId,channelProp){var hasStarted=!1;sessions[peerId]=channelProp,self.once("dataStreamState",function(){},function(state,evtTransferId,evtPeerId,evtSessionInfo){if(evtTransferId===transferId&&evtPeerId===peerId){evtSessionInfo.chunk;return delete clone(evtSessionInfo).chunk,state===self.DATA_STREAM_STATE.SENDING_STARTED?void(hasStarted=!0):hasStarted&&[self.DATA_STREAM_STATE.ERROR,self.DATA_STREAM_STATE.SENDING_STOPPED].indexOf(state)>-1?(channelProp===transferId&&self._closeDataChannel(peerId,transferId),self._dataStreams[transferId]&&self._dataStreams[transferId].sessions[peerId]&&(delete self._dataStreams[transferId].sessions[peerId],0===Object.keys(self._dataStreams[transferId].sessions).length&&delete self._dataStreams[transferId]),!0):void 0}})},i=0;i<listOfPeers.length;i++){var peerId=listOfPeers[i],error=null,dtProtocolVersion=((self._peerInformations[peerId]||{}).agent||{}).DTProtocolVersion||"",channelProp=self._isLowerThanVersion(dtProtocolVersion,"0.1.2")?"main":transferId;if(self._dataChannels[peerId]&&self._dataChannels[peerId].main)if(!self._hasMCU||self._dataChannels.MCU&&self._dataChannels.MCU.main)if(self._isLowerThanVersion(dtProtocolVersion,"0.1.3"))error='Peer DTProtocolVersion does not support data streaming. (received: "'+dtProtocolVersion+'", expected: "0.1.3")';else if("main"===channelProp){var dataTransferId=self._hasMCU?self._dataChannels.MCU.main.transferId:self._dataChannels[peerId].main.transferId;self._dataChannels[peerId].main.streamId?error="Peer Datachannel currently has an active data transfer session.":self._hasMCU&&self._dataChannels.MCU.main.streamId?error="MCU Peer Datachannel currently has an active data transfer session.":self._dataTransfers[dataTransferId]&&self._dataTransfers[dataTransferId].sessionChunkType===sessionChunkType?error=(self._hasMCU?"MCU ":"")+"Peer Datachannel currently has an active "+sessionChunkType+" data transfer.":peersInterop.push(peerId)}else peersNonInterop.push(peerId);else error="MCU Datachannel connection does not exists";else error="Datachannel connection does not exists";error?(self._trigger("dataStreamState",self.DATA_STREAM_STATE.START_ERROR,transferId,peerId,sessionInfo,new Error(error)),listOfPeers.splice(i,1),i--):listenToPeerFn(peerId,channelProp)}if(0===listOfPeers.length)return void log.warn("There are no Peers to start data session with.");self._dataStreams[transferId]={sessions:sessions,chunkType:"string"===sessionChunkType?self.DATA_TRANSFER_DATA_TYPE.STRING:self._binaryChunkType,sessionChunkType:sessionChunkType,isPrivate:isPrivate,isStringStream:"string"===sessionChunkType,senderPeerId:self._user&&self._user.sid?self._user.sid:null,isUpload:!0};var startDataSessionFn=function(peerId,channelProp,targetPeers){if(self.once("dataChannelState",function(){},function(state,evtPeerId,channelName,channelType,error){if(!self._dataStreams[transferId])return!0;if(evtPeerId===peerId&&("main"===channelProp?channelType===self.DATA_CHANNEL_TYPE.MESSAGING:channelName===transferId&&channelType===self.DATA_CHANNEL_TYPE.DATA)&&[self.DATA_CHANNEL_STATE.ERROR,self.DATA_CHANNEL_STATE.CLOSED].indexOf(state)>-1){var updatedError=new Error(error&&error.message?error.message:'Failed data transfer as datachannel state is "'+state+'".');if("MCU"===peerId)for(var mp=0;mp<targetPeers.length;mp++)self._trigger("dataStreamState",self.DATA_STREAM_STATE.ERROR,transferId,targetPeers[mp],sessionInfo,updatedError);else self._trigger("dataStreamState",self.DATA_STREAM_STATE.ERROR,transferId,peerId,sessionInfo,updatedError);return!0}}),!self._dataChannels[peerId][channelProp]||self._dataChannels[peerId][channelProp].channel.readyState!==self.DATA_CHANNEL_STATE.OPEN){var notOpenError=new Error("Failed starting data streaming session as channel is not opened.");if("MCU"===peerId)for(i=0;i<targetPeers.length;i++)self._trigger("dataStreamState",self.DATA_STREAM_STATE.START_ERROR,transferId,targetPeers[i],sessionInfo,notOpenError);else self._trigger("dataStreamState",self.DATA_STREAM_STATE.START_ERROR,transferId,peerId,sessionInfo,notOpenError)}self._sendMessageToDataChannel(peerId,{type:self._DC_PROTOCOL_TYPE.WRQ,transferId:transferId,name:transferId,size:0,originalSize:0,dataType:"fastBinaryStart",mimeType:null,chunkType:sessionChunkType,chunkSize:0,timeout:0,isPrivate:isPrivate,sender:self._user.sid,
agent:window.webrtcDetectedBrowser,version:window.webrtcDetectedVersion,target:"MCU"===peerId?targetPeers:peerId},channelProp),self._dataChannels[peerId][channelProp].streamId=transferId;var updatedSessionInfo=clone(sessionInfo);if(delete updatedSessionInfo.chunk,"MCU"===peerId)for(var tp=0;tp<targetPeers.length;tp++)self._trigger("dataStreamState",self.DATA_STREAM_STATE.SENDING_STARTED,transferId,targetPeers[tp],sessionInfo,null),self._trigger("incomingDataStreamStarted",transferId,targetPeers[tp],updatedSessionInfo,!0);else self._trigger("dataStreamState",self.DATA_STREAM_STATE.SENDING_STARTED,transferId,peerId,sessionInfo,null),self._trigger("incomingDataStreamStarted",transferId,peerId,updatedSessionInfo,!0)},waitForChannelOpenFn=function(peerId,targetPeers){self.once("dataChannelState",function(state,evtPeerId,error){if(state!==self.DATA_CHANNEL_STATE.CREATE_ERROR)startDataSessionFn(peerId,transferId,targetPeers);else if("MCU"===peerId)for(var mp=0;mp<targetPeers.length;mp++)self._trigger("dataStreamState",self.DATA_STREAM_STATE.START_ERROR,transferId,targetPeers[mp],sessionInfo,error);else self._trigger("dataStreamState",self.DATA_STREAM_STATE.START_ERROR,transferId,peerId,sessionInfo,error)},function(state,evtPeerId,error,channelName,channelType){if(evtPeerId===peerId&&channelName===transferId&&channelType===self.DATA_CHANNEL_TYPE.DATA)return[self.DATA_CHANNEL_STATE.CREATE_ERROR,self.DATA_CHANNEL_STATE.OPEN].indexOf(state)>-1}),self._createDataChannel(peerId,transferId,"string"===sessionChunkType?self._CHUNK_DATAURL_SIZE:"firefox"===window.webrtcDetectedBrowser?self._MOZ_BINARY_FILE_SIZE:self._BINARY_FILE_SIZE)};if(peersNonInterop.length>0)if(self._hasMCU)waitForChannelOpenFn("MCU",peersNonInterop);else for(var pni=0;pni<peersNonInterop.length;pni++)waitForChannelOpenFn(peersNonInterop[pni],null);if(peersInterop.length>0)if(self._hasMCU)startDataSessionFn("MCU","main",peersInterop);else for(var pi=0;pi<peersInterop.length;pi++)startDataSessionFn(peersInterop[pi],"main",null)},Skylink.prototype.streamData=function(transferId,dataChunk){var self=this;if(!transferId||"string"!=typeof transferId)return void log.error("Failed streaming data chunk as stream session ID is not provided.");if(!dataChunk||"object"!=typeof dataChunk||!(dataChunk instanceof Blob||dataChunk instanceof ArrayBuffer))return void log.error("Failed streaming data chunk as it is not provided.");if(!(self._inRoom&&self._user&&self._user.sid))return void log.error("Failed streaming data chunk as User is not in the Room.");if(!self._dataStreams[transferId])return void log.error("Failed streaming data chunk as session does not exists.");if(!self._dataStreams[transferId].isUpload)return void log.error("Failed streaming data chunk as session is not sending.");if("string"===self._dataStreams[transferId].sessionChunkType?"string"!=typeof dataChunk:"object"!=typeof dataChunk)return void log.error("Failed streaming data chunk as data chunk does not match expected data type.");if(self._hasMCU)return void log.error("Failed streaming data chunk as MCU does not support this feature yet.");var updatedDataChunk=dataChunk instanceof ArrayBuffer?new Blob(dataChunk):dataChunk;if("string"===self._dataStreams[transferId].sessionChunkType?updatedDataChunk.length>self._CHUNK_DATAURL_SIZE:updatedDataChunk.length>self._BINARY_FILE_SIZE)return void log.error("Failed streaming data chunk as data chunk exceeds maximum chunk limit.");var sessionInfo={chunk:updatedDataChunk,chunkSize:updatedDataChunk.size||updatedDataChunk.length||updatedDataChunk.byteLength,chunkType:"string"===self._dataStreams[transferId].sessionChunkType?self.DATA_TRANSFER_DATA_TYPE.STRING:self._binaryChunkType,isPrivate:self._dataStreams[transferId].sessionChunkType.isPrivate,isStringStream:"string"===self._dataStreams[transferId].sessionChunkType,senderPeerId:self._user&&self._user.sid?self._user.sid:null},peersInterop=[],peersNonInterop=[],sendDataFn=function(peerId,channelProp,targetPeers){var onSendDataFn=function(buffer){self._sendMessageToDataChannel(peerId,buffer,channelProp,!0);var updatedSessionInfo=clone(sessionInfo);if(delete updatedSessionInfo.chunk,targetPeers)for(var i=0;i<targetPeers.length;i++)self._trigger("dataStreamState",self.DATA_STREAM_STATE.SENT,transferId,targetPeers[i],sessionInfo,null),self._trigger("incomingDataStream",dataChunk,transferId,targetPeers[i],updatedSessionInfo,!0);else self._trigger("dataStreamState",self.DATA_STREAM_STATE.SENT,transferId,peerId,sessionInfo,null),self._trigger("incomingDataStream",dataChunk,transferId,peerId,updatedSessionInfo,!0)};dataChunk instanceof Blob&&sessionInfo.chunkType===self.DATA_TRANSFER_DATA_TYPE.ARRAY_BUFFER?self._blobToArrayBuffer(dataChunk,onSendDataFn):onSendDataFn(dataChunk instanceof Blob||sessionInfo.chunkType!==self.DATA_TRANSFER_DATA_TYPE.BLOB?self._isUsingPlugin&&"string"!=typeof dataChunk?new Int8Array(dataChunk):dataChunk:new Blob([dataChunk]))};for(var peerId in self._dataStreams[transferId].sessions)if(self._dataStreams[transferId].sessions.hasOwnProperty(peerId)&&self._dataStreams[transferId].sessions[peerId]){var channelProp=self._dataStreams[transferId].sessions[peerId];if(!self._dataChannels[self._hasMCU?"MCU":peerId]||!self._dataChannels[self._hasMCU?"MCU":peerId][channelProp]||self._dataChannels[self._hasMCU?"MCU":peerId][channelProp].channel.readyState!==self.DATA_CHANNEL_STATE.OPEN||self._dataChannels[self._hasMCU?"MCU":peerId][channelProp].streamId!==transferId)return log.error([peerId,"RTCDataChannel",transferId,"Failed streaming data as it has not started or is ready."]),void self._trigger("dataStreamState",self.DATA_STREAM_STATE.ERROR,transferId,peerId,sessionInfo,new Error("Streaming as it has not started or Datachannel connection is not open."));self._hasMCU?"main"===channelProp?peersInterop.push(peerId):peersNonInterop.push(peerId):sendDataFn(peerId,channelProp)}self._hasMCU&&(peersInterop.length>0&&sendDataFn(peerId,"main",peersInterop),peersNonInterop.length>0&&sendDataFn(peerId,transferId,peersNonInterop))},Skylink.prototype.stopStreamingData=function(transferId){var self=this;if(!transferId||"string"!=typeof transferId)return void log.error("Failed streaming data chunk as stream session ID is not provided.");if(!(self._inRoom&&self._user&&self._user.sid))return void log.error("Failed streaming data chunk as User is not in the Room.");if(!self._dataStreams[transferId])return void log.error("Failed stopping data streaming session as it does not exists.");if(!self._dataStreams[transferId].isUpload)return void log.error("Failed stopping data streaming session as it is not sending.");if(self._hasMCU)return void log.error("Failed stopping data streaming session as MCU does not support this feature yet.");var sessionInfo={chunk:null,chunkSize:0,chunkType:"string"===self._dataStreams[transferId].sessionChunkType?self.DATA_TRANSFER_DATA_TYPE.STRING:self._binaryChunkType,isPrivate:self._dataStreams[transferId].sessionChunkType.isPrivate,isStringStream:"string"===self._dataStreams[transferId].sessionChunkType,senderPeerId:self._user&&self._user.sid?self._user.sid:null},peersInterop=[],peersNonInterop=[],sendDataFn=function(peerId,channelProp,targetPeers){self._sendMessageToDataChannel(peerId,{type:self._DC_PROTOCOL_TYPE.WRQ,transferId:transferId,name:transferId,size:0,originalSize:0,dataType:"fastBinaryStop",mimeType:null,chunkType:self._dataStreams[transferId].sessionChunkType,chunkSize:0,timeout:0,isPrivate:self._dataStreams[transferId].isPrivate,sender:self._user.sid,agent:window.webrtcDetectedBrowser,version:window.webrtcDetectedVersion,target:targetPeers||peerId},channelProp);var updatedSessionInfo=clone(sessionInfo);if(delete updatedSessionInfo.chunk,targetPeers)for(var i=0;i<targetPeers.length;i++)self._trigger("dataStreamState",self.DATA_STREAM_STATE.SENDING_STOPPED,transferId,targetPeers[i],sessionInfo,null),self._trigger("incomingDataStreamStopped",transferId,targetPeers[i],updatedSessionInfo,!0);else self._trigger("dataStreamState",self.DATA_STREAM_STATE.SENDING_STOPPED,transferId,peerId,sessionInfo,null),self._trigger("incomingDataStreamStopped",transferId,peerId,updatedSessionInfo,!0)};for(var peerId in self._dataStreams[transferId].sessions)if(self._dataStreams[transferId].sessions.hasOwnProperty(peerId)&&self._dataStreams[transferId].sessions[peerId]){var channelProp=self._dataStreams[transferId].sessions[peerId];if(!self._dataChannels[self._hasMCU?"MCU":peerId]||!self._dataChannels[self._hasMCU?"MCU":peerId][channelProp]||self._dataChannels[self._hasMCU?"MCU":peerId][channelProp].channel.readyState!==self.DATA_CHANNEL_STATE.OPEN||self._dataChannels[self._hasMCU?"MCU":peerId][channelProp].streamId!==transferId)return log.error([peerId,"RTCDataChannel",transferId,"Failed stopping data streaming session as channel is closed."]),void self._trigger("dataStreamState",self.DATA_STREAM_STATE.ERROR,transferId,peerId,sessionInfo,new Error("Failed stopping data streaming session as Datachannel connection is not open or is active."));self._hasMCU?"main"===self._dataStreams[transferId].sessions[peerId]?peersInterop.push(peerId):peersNonInterop.push(peerId):sendDataFn(peerId,channelProp)}self._hasMCU&&(peersInterop.length>0&&sendDataFn(peerId,"main",peersInterop),peersNonInterop.length>0&&sendDataFn(peerId,transferId,peersNonInterop))},Skylink.prototype._startDataTransfer=function(data,timeout,targetPeerId,sendChunksAsBinary,callback,sessionType){var self=this,transferId=(self._user?self._user.sid:"")+"_"+(new Date).getTime(),transferErrors={},transferCompleted=[],chunks=[],listOfPeers=Object.keys(self._peerConnections),sessionChunkType="string",transferInfo={name:null,size:null,chunkSize:null,chunkType:null,dataType:null,mimeType:null,direction:self.DATA_TRANSFER_TYPE.UPLOAD,timeout:60,isPrivate:!1,percentage:0};"number"==typeof timeout?transferInfo.timeout=timeout:Array.isArray(timeout)?listOfPeers=timeout:timeout&&"string"==typeof timeout?listOfPeers=[timeout]:timeout&&"boolean"==typeof timeout?sessionChunkType="binary":"function"==typeof timeout&&(callback=timeout),Array.isArray(targetPeerId)?listOfPeers=targetPeerId:targetPeerId&&"string"==typeof targetPeerId?listOfPeers=[targetPeerId]:targetPeerId&&"boolean"==typeof targetPeerId?sessionChunkType="binary":"function"==typeof targetPeerId&&(callback=targetPeerId),sendChunksAsBinary&&"boolean"==typeof sendChunksAsBinary?sessionChunkType="binary":"function"==typeof sendChunksAsBinary&&(callback=sendChunksAsBinary),listOfPeers.indexOf("MCU")>-1&&listOfPeers.splice(listOfPeers.indexOf("MCU"),1);var emitErrorBeforeDataTransferFn=function(error){if(log.error(error),"function"==typeof callback){var transferErrors={};if(0===listOfPeers.length)transferErrors.self=new Error(error);else for(var i=0;i<listOfPeers.length;i++)transferErrors[listOfPeers[i]]=new Error(error);callback({transferId:null,transferInfo:transferInfo,listOfPeers:listOfPeers,transferErrors:transferErrors},null)}};if("blob"===sessionType){self._hasMCU&&"binary"===sessionChunkType&&(log.warn("Binary data chunks transfer is not yet supported with MCU environment. Fallbacking to binary string data chunks transfer."),sessionChunkType="string");var chunkSize="string"===sessionChunkType?"firefox"===window.webrtcDetectedBrowser?self._MOZ_CHUNK_FILE_SIZE:self._CHUNK_FILE_SIZE:"firefox"===window.webrtcDetectedBrowser?self._MOZ_BINARY_FILE_SIZE:self._BINARY_FILE_SIZE;if(transferInfo.dataType=self.DATA_TRANSFER_SESSION_TYPE.BLOB,transferInfo.chunkSize="string"===sessionChunkType?4*Math.ceil(chunkSize/3):chunkSize,transferInfo.chunkType="binary"===sessionChunkType?self._binaryChunkType:self.DATA_TRANSFER_DATA_TYPE.BINARY_STRING,!(data&&"object"==typeof data&&data instanceof Blob))return void emitErrorBeforeDataTransferFn("Provided data is not a Blob data");if(transferInfo.name=data.name||transferId,transferInfo.mimeType=data.type||null,data.size<1)return void emitErrorBeforeDataTransferFn("Provided data is not a valid Blob data.");transferInfo.originalSize=data.size,transferInfo.size="string"===sessionChunkType?4*Math.ceil(data.size/3):data.size,chunks=self._chunkBlobData(data,chunkSize)}else{if(transferInfo.dataType=self.DATA_TRANSFER_SESSION_TYPE.DATA_URL,transferInfo.chunkSize=self._CHUNK_DATAURL_SIZE,transferInfo.chunkType=self.DATA_TRANSFER_DATA_TYPE.STRING,!data||"string"!=typeof data)return void emitErrorBeforeDataTransferFn("Provided data is not a dataURL");transferInfo.originalSize=transferInfo.size=data.length||data.size,chunks=self._chunkDataURL(data,transferInfo.chunkSize)}if(!self._user||!self._user.sid)return void emitErrorBeforeDataTransferFn("Unable to send any "+sessionType.replace("data","dataURL")+" data. User is not in Room.");if(!self._enableDataChannel)return void emitErrorBeforeDataTransferFn("Unable to send any "+sessionType.replace("data","dataURL")+" data. Datachannel is disabled");if(0===listOfPeers.length)return void emitErrorBeforeDataTransferFn("Unable to send any "+sessionType.replace("data","dataURL")+" data. There are no Peers to start data transfer with");if(self._dataTransfers[transferId]=clone(transferInfo),self._dataTransfers[transferId].peers={},self._dataTransfers[transferId].peers.main={},self._dataTransfers[transferId].peers[transferId]={},self._dataTransfers[transferId].sessions={},self._dataTransfers[transferId].chunks=chunks,self._dataTransfers[transferId].enforceBSPeers=[],self._dataTransfers[transferId].enforcedBSInfo={},self._dataTransfers[transferId].sessionType=sessionType,self._dataTransfers[transferId].sessionChunkType=sessionChunkType,self._dataTransfers[transferId].senderPeerId=self._user.sid,"blob"===sessionType&&"binary"===sessionChunkType){for(var p=0;p<listOfPeers.length;p++){var protocolVer=((self._peerInformations[listOfPeers[p]]||{}).agent||{}).DTProtocolVersion||"0.1.0";self._isLowerThanVersion(protocolVer,"0.1.3")&&self._dataTransfers[transferId].enforceBSPeers.push(listOfPeers[p])}if(self._dataTransfers[transferId].enforceBSPeers.length>0){var bsChunkSize="firefox"===window.webrtcDetectedBrowser?self._MOZ_CHUNK_FILE_SIZE:self._CHUNK_FILE_SIZE,bsChunks=self._chunkBlobData(new Blob(chunks),bsChunkSize);self._dataTransfers[transferId].enforceBSInfo={chunkSize:4*Math.ceil(bsChunkSize/3),chunkType:self.DATA_TRANSFER_DATA_TYPE.BINARY_STRING,size:4*Math.ceil(transferInfo.originalSize/3),chunks:bsChunks}}}for(var completeFn=function(peerId,error){transferCompleted.indexOf(peerId)>-1||(log.debug([peerId,"RTCDataChannel",transferId,"Data transfer result. Is errors present? ->"],error),transferCompleted.push(peerId),error&&(transferErrors[peerId]=new Error(error)),listOfPeers.length===transferCompleted.length&&(log.log([null,"RTCDataChannel",transferId,"Data transfer request completed"]),"function"==typeof callback&&(Object.keys(transferErrors).length>0?callback({transferId:transferId,transferInfo:self._getTransferInfo(transferId,peerId,!1,!0,!1),transferErrors:transferErrors,listOfPeers:listOfPeers},null):callback(null,{transferId:transferId,transferInfo:self._getTransferInfo(transferId,peerId,!1,!0,!1),listOfPeers:listOfPeers}))))},i=0;i<listOfPeers.length;i++){var MCUInteropStatus=self._startDataTransferToPeer(transferId,listOfPeers[i],completeFn,null,null);"boolean"==typeof MCUInteropStatus&&(!0===MCUInteropStatus?self._dataTransfers[transferId].peers.main[listOfPeers[i]]=!0:self._dataTransfers[transferId].peers[transferId][listOfPeers[i]]=!0)}self._hasMCU&&(Object.keys(self._dataTransfers[transferId].peers.main).length>0&&self._startDataTransferToPeer(transferId,"MCU",completeFn,"main",Object.keys(self._dataTransfers[transferId].peers.main)),Object.keys(self._dataTransfers[transferId].peers[transferId]).length>0&&self._startDataTransferToPeer(transferId,"MCU",completeFn,transferId,Object.keys(self._dataTransfers[transferId].peers[transferId])))},Skylink.prototype._startDataTransferToPeer=function(transferId,peerId,callback,channelProp,targetPeers){var self=this,peerConnectionStateCbFn=null,dataChannelStateCbFn=null,emitEventFn=function(cb){for(var peers=targetPeers||[peerId],i=0;i<peers.length;i++)cb(peers[i])},returnErrorBeforeTransferFn=function(error){var updatedError="MCU"===peerId?error.replace(/Peer/g,"MCU Peer"):error;emitEventFn(function(evtPeerId){self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.ERROR,transferId,evtPeerId,self._getTransferInfo(transferId,peerId,!0,!0,!1),{message:new Error(updatedError),transferType:self.DATA_TRANSFER_TYPE.UPLOAD})})},sendWRQFn=function(){var size=self._dataTransfers[transferId].size,chunkSize=self._dataTransfers[transferId].chunkSize,chunkType=self._dataTransfers[transferId].sessionChunkType;self._dataTransfers[transferId].enforceBSPeers.indexOf(peerId)>-1&&(log.warn([peerId,"RTCDataChannel",transferId,"Binary data chunks transfer is not yet supported with Peer connecting from Android, iOS and C++ SDK. Fallbacking to binary string data chunks transfer."]),size=self._dataTransfers[transferId].enforceBSInfo.size,chunkSize=self._dataTransfers[transferId].enforceBSInfo.chunkSize,chunkType="string"),self._sendMessageToDataChannel(peerId,{type:self._DC_PROTOCOL_TYPE.WRQ,transferId:transferId,name:self._dataTransfers[transferId].name,size:size,originalSize:self._dataTransfers[transferId].originalSize,dataType:self._dataTransfers[transferId].sessionType,mimeType:self._dataTransfers[transferId].mimeType,chunkType:chunkType,chunkSize:chunkSize,timeout:self._dataTransfers[transferId].timeout,isPrivate:self._dataTransfers[transferId].isPrivate,sender:self._user.sid,agent:window.webrtcDetectedBrowser,version:window.webrtcDetectedVersion,target:targetPeers||peerId},channelProp),emitEventFn(function(evtPeerId){self._trigger("incomingDataRequest",transferId,evtPeerId,self._getTransferInfo(transferId,peerId,!1,!1,!1),!0),self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.USER_UPLOAD_REQUEST,transferId,evtPeerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),null)})};if("MCU"!==peerId){var dataTransferStateCbFn=function(state,evtTransferId,evtPeerId,transferInfo,error){if(peerConnectionStateCbFn&&self.off("peerConnectionState",peerConnectionStateCbFn),dataChannelStateCbFn&&self.off("dataChannelState",dataChannelStateCbFn),channelProp&&delete self._dataTransfers[transferId].peers[channelProp][peerId],state===self.DATA_TRANSFER_STATE.UPLOAD_COMPLETED?callback(peerId,null):callback(peerId,error.message.message||error.message.toString()),self._hasMCU&&self._dataTransfers[transferId].direction===self.DATA_TRANSFER_TYPE.UPLOAD){if(0!==Object.keys(self._dataTransfers[transferId].peers.main).length||0!==Object.keys(self._dataTransfers[transferId].peers[transferId]).length)return;delete self._dataTransfers[transferId]}else delete self._dataTransfers[transferId].sessions[peerId],0===Object.keys(self._dataTransfers[transferId].sessions).length&&delete self._dataTransfers[transferId]};self.once("dataTransferState",dataTransferStateCbFn,function(state,evtTransferId,evtPeerId){return self._dataTransfers[transferId]&&(self._hasMCU?self._dataTransfers[transferId].peers.main[peerId]||self._dataTransfers[transferId].peers[transferId][peerId]:self._dataTransfers[transferId].sessions[peerId])?evtTransferId===transferId&&evtPeerId===peerId&&[self.DATA_TRANSFER_STATE.UPLOAD_COMPLETED,self.DATA_TRANSFER_STATE.ERROR,self.DATA_TRANSFER_STATE.CANCEL,self.DATA_TRANSFER_STATE.REJECTED].indexOf(state)>-1:(dataTransferStateCbFn&&self.off("dataTransferState",dataTransferStateCbFn),peerConnectionStateCbFn&&self.off("peerConnectionState",peerConnectionStateCbFn),void(dataChannelStateCbFn&&self.off("dataChannelState",dataChannelStateCbFn)))})}if(!self._peerConnections[peerId])return void returnErrorBeforeTransferFn("Unable to start data transfer as Peer connection does not exists.");if(!self._peerInformations[peerId])return void returnErrorBeforeTransferFn("Unable to start data transfer as Peer connection does not exists.");if(self._peerConnections[peerId].signalingState!==self.PEER_CONNECTION_STATE.STABLE)return void returnErrorBeforeTransferFn("Unable to start data transfer as Peer connection is not stable.");if(!self._dataTransfers[transferId])return void returnErrorBeforeTransferFn("Unable to start data transfer as data transfer session is not in order.");if(!self._dataChannels[peerId]||!self._dataChannels[peerId].main)return void returnErrorBeforeTransferFn("Unable to start data transfer as Peer Datachannel connection does not exists.");if(self._dataChannels[peerId].main.channel.readyState!==self.DATA_CHANNEL_STATE.OPEN)return void returnErrorBeforeTransferFn("Unable to start data transfer as Peer Datachannel connection is not opened.");var streamId=self._dataChannels[peerId].main.streamId;if(streamId&&"main"===channelProp&&self._dataStreams[streamId]&&("string"===self._dataStreams[streamId].sessionChunkType&&("string"===self._dataTransfers[transferId].sessionChunkType||self._dataTransfers[transferId].enforceBSPeers.indexOf(peerId)>-1)||"binary"===self._dataStreams[streamId].sessionChunkType&&"binary"===self._dataStreams[streamId].sessionChunkType&&-1===self._dataTransfers[transferId].enforceBSPeers.indexOf(peerId)))return void returnErrorBeforeTransferFn("Unable to start data transfer as Peer Datachannel currently has an active "+self._dataStreams[streamId].sessionChunkType+" data streaming session.");var protocolVer=(self._peerInformations[peerId].agent||{}).DTProtocolVersion||"0.1.0",requireInterop=self._isLowerThanVersion(protocolVer,"0.1.2");return self._isLowerThanVersion(protocolVer,"0.1.2")&&"data"===self._dataTransfers[transferId].sessionType&&"string"===self._dataTransfers[transferId].sessionChunkType?void returnErrorBeforeTransferFn("Unable to start data transfer as Peer do not support DATA_URL type of data transfers"):"MCU"!==peerId&&self._hasMCU?(channelProp=requireInterop?"main":transferId,peerConnectionStateCbFn=function(){returnErrorBeforeTransferFn("Data transfer terminated as Peer connection is not stable.")},self.once("peerConnectionState",peerConnectionStateCbFn,function(state,evtPeerId){return self._dataTransfers[transferId]?state!==self.PEER_CONNECTION_STATE.STABLE&&evtPeerId===peerId:void self.off("peerConnectionState",peerConnectionStateCbFn)}),requireInterop):(requireInterop||"main"===channelProp)&&self._dataChannels[peerId].main.transferId?void returnErrorBeforeTransferFn("Unable to start data transfer as Peer Datachannel has a data transfer in-progress."):(self._dataTransfers[transferId].sessions[peerId]={timer:null,ackN:0},dataChannelStateCbFn=function(state,evtPeerId,error){self._dataTransfers[transferId].sessions[peerId].ackN>=self._dataTransfers[transferId].chunks.length-1||returnErrorBeforeTransferFn(error?error.message||error.toString():"Data transfer terminated as Peer Datachannel connection closed abruptly.")},self.once("dataChannelState",dataChannelStateCbFn,function(state,evtPeerId,error,channelName,channelType){return self._dataTransfers[transferId]&&self._dataTransfers[transferId].sessions[peerId]?evtPeerId!==peerId||channelType===self.DATA_CHANNEL_TYPE.DATA&&channelName!==transferId?void 0:state===self.DATA_CHANNEL_STATE.OPEN&&channelType===self.DATA_CHANNEL_TYPE.DATA&&channelName===transferId?(self._dataChannels[peerId][channelProp].transferId=transferId,sendWRQFn(),!1):[self.DATA_CHANNEL_STATE.CREATE_ERROR,self.DATA_CHANNEL_STATE.ERROR,self.DATA_CHANNEL_STATE.CLOSING,self.DATA_CHANNEL_STATE.CLOSED].indexOf(state)>-1:void self.off("dataChannelState",dataChannelStateCbFn)}),void(requireInterop&&"MCU"!==peerId||"main"===channelProp?(self._dataChannels[peerId].main.transferId=transferId,sendWRQFn()):(channelProp=transferId,self._createDataChannel(peerId,transferId,"data"===self._dataTransfers[transferId].sessionType?self._CHUNK_DATAURL_SIZE:"string"===self._dataTransfers[transferId].sessionChunkType?"firefox"===window.webrtcDetectedBrowser?16384:65546:"firefox"===window.webrtcDetectedBrowser?self._MOZ_BINARY_FILE_SIZE:self._BINARY_FILE_SIZE))))},Skylink.prototype._getTransferInfo=function(transferId,peerId,returnDataProp,hidePercentage,returnDataAtStart){if(!this._dataTransfers[transferId])return{};var transferInfo={name:this._dataTransfers[transferId].name,size:this._dataTransfers[transferId].size,dataType:this._dataTransfers[transferId].dataType||this.DATA_TRANSFER_SESSION_TYPE.BLOB,mimeType:this._dataTransfers[transferId].mimeType||null,chunkSize:this._dataTransfers[transferId].chunkSize,chunkType:this._dataTransfers[transferId].chunkType,timeout:this._dataTransfers[transferId].timeout,isPrivate:this._dataTransfers[transferId].isPrivate,direction:this._dataTransfers[transferId].direction};if(this._dataTransfers[transferId].originalSize?transferInfo.size=this._dataTransfers[transferId].originalSize:this._dataTransfers[transferId].chunkType===this.DATA_TRANSFER_DATA_TYPE.BINARY_STRING&&(transferInfo.size=Math.ceil(3*transferInfo.size/4)),!hidePercentage){if(transferInfo.percentage=0,!this._dataTransfers[transferId].sessions[peerId])return returnDataProp&&(transferInfo.data=null),transferInfo;if(this._dataTransfers[transferId].direction===this.DATA_TRANSFER_TYPE.DOWNLOAD)this._dataTransfers[transferId].sessions[peerId].receivedSize===this._dataTransfers[transferId].sessions[peerId].size?transferInfo.percentage=100:transferInfo.percentage=parseFloat((this._dataTransfers[transferId].sessions[peerId].receivedSize/this._dataTransfers[transferId].size*100).toFixed(2),10);else{var chunksLength=this._dataTransfers[transferId].enforceBSPeers.indexOf(peerId)>-1?this._dataTransfers[transferId].enforceBSInfo.chunks.length:this._dataTransfers[transferId].chunks.length;this._dataTransfers[transferId].sessions[peerId].ackN===chunksLength?transferInfo.percentage=100:transferInfo.percentage=parseFloat((this._dataTransfers[transferId].sessions[peerId].ackN/chunksLength*100).toFixed(2),10)}returnDataProp&&("number"!=typeof returnDataAtStart?100===transferInfo.percentage?transferInfo.data=this._getTransferData(transferId):transferInfo.data=null:(transferInfo.percentage=returnDataAtStart,0===returnDataAtStart&&(transferInfo.data=this._getTransferData(transferId))))}return transferInfo},Skylink.prototype._getTransferData=function(transferId){if(!this._dataTransfers[transferId])return null;if(this._dataTransfers[transferId].dataType===this.DATA_TRANSFER_SESSION_TYPE.BLOB){var mimeType={name:this._dataTransfers[transferId].name};return this._dataTransfers[transferId].mimeType&&(mimeType.type=this._dataTransfers[transferId].mimeType),new Blob(this._dataTransfers[transferId].chunks,mimeType)}return this._dataTransfers[transferId].chunks.join("")},Skylink.prototype._handleDataTransferTimeoutForPeer=function(transferId,peerId,setPeerTO){var self=this;if(!self._dataTransfers[transferId]||!self._dataTransfers[transferId].sessions[peerId])return void log.debug([peerId,"RTCDataChannel",transferId,"Data transfer does not exists for Peer. Ignoring timeout."]);log.debug([peerId,"RTCDataChannel",transferId,"Clearing data transfer timer for Peer."]),self._dataTransfers[transferId].sessions[peerId].timer&&clearTimeout(self._dataTransfers[transferId].sessions[peerId].timer),self._dataTransfers[transferId].sessions[peerId].timer=null,setPeerTO&&(log.debug([peerId,"RTCDataChannel",transferId,"Setting data transfer timer for Peer."]),self._dataTransfers[transferId].sessions[peerId].timer=setTimeout(function(){if(!self._dataTransfers[transferId]||!self._dataTransfers[transferId].sessions[peerId])return void log.debug([peerId,"RTCDataChannel",transferId,"Data transfer already ended for Peer. Ignoring expired timeout."]);if(!self._user||!self._user.sid)return void log.debug([peerId,"RTCDataChannel",transferId,"User is not in Room. Ignoring expired timeout."]);if(!self._dataChannels[peerId])return void log.debug([peerId,"RTCDataChannel",transferId,"Datachannel connection does not exists. Ignoring expired timeout."]);log.error([peerId,"RTCDataChannel",transferId,"Data transfer response has timed out."]);var emitEventFn=function(cb){if("MCU"===peerId){for(var broadcastedPeers=[self._dataTransfers[transferId].peers.main,self._dataTransfers[transferId].peers[transferId]],i=0;i<broadcastedPeers.length;i++)if(broadcastedPeers[i])for(var bcPeerId in broadcastedPeers[i])broadcastedPeers[i].hasOwnProperty(bcPeerId)&&broadcastedPeers[i][bcPeerId]&&cb(bcPeerId)}else cb(peerId)},errorMsg="Connection Timeout. Longer than "+self._dataTransfers[transferId].timeout+" seconds. Connection is abolished.";self._sendMessageToDataChannel(peerId,{type:self._DC_PROTOCOL_TYPE.ERROR,content:errorMsg,isUploadError:self._dataTransfers[transferId].direction===self.DATA_TRANSFER_TYPE.UPLOAD,sender:self._user.sid,name:self._dataTransfers[transferId].name},self._dataChannels[peerId][transferId]?transferId:"main"),emitEventFn(function(evtPeerId){self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.ERROR,transferId,peerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),{transferType:self.DATA_TRANSFER_TYPE.DOWNLOAD,message:new Error(errorMsg)})})},1e3*self._dataTransfers[transferId].timeout))},Skylink.prototype._processDataChannelData=function(rawData,peerId,channelName,channelType){var self=this,channelProp=channelType===self.DATA_CHANNEL_TYPE.MESSAGING?"main":channelName,transferId=self._dataChannels[peerId][channelProp].transferId||null,streamId=self._dataChannels[peerId][channelProp].streamId||null,isStreamChunk=!1;if(streamId&&self._dataStreams[streamId]&&(isStreamChunk="string"===self._dataStreams[streamId].sessionChunkType?"string"==typeof rawData:"object"==typeof rawData),!self._peerConnections[peerId])return void log.warn([peerId,"RTCDataChannel",channelProp,"Dropping data received from Peer as connection is not present ->"],rawData);if(!self._dataChannels[peerId]||!self._dataChannels[peerId][channelProp])return void log.warn([peerId,"RTCDataChannel",channelProp,"Dropping data received from Peer as Datachannel connection is not present ->"],rawData);if("string"==typeof rawData)try{var protocolData=JSON.parse(rawData);if(isStreamChunk=!1,log.debug([peerId,"RTCDataChannel",channelProp,'Received protocol "'+protocolData.type+'" message ->'],protocolData),[self._DC_PROTOCOL_TYPE.ACK,self._DC_PROTOCOL_TYPE.ERROR,self._DC_PROTOCOL_TYPE.CANCEL].indexOf(protocolData.type)>-1&&!(transferId&&self._dataTransfers[transferId]&&self._dataTransfers[transferId].sessions[peerId]))return void log.warn([peerId,"RTCDataChannel",channelProp,"Discarded protocol message as data transfer session is not present ->"],protocolData);switch(protocolData.type){case self._DC_PROTOCOL_TYPE.WRQ:if(transferId&&self._dataTransfers[transferId]&&self._dataTransfers[transferId].sessions[peerId])return log.warn([peerId,"RTCDataChannel",channelProp,"Rejecting bidirectional data transfer request as it is currently not supported in the SDK ->"],protocolData),void self._sendMessageToDataChannel(peerId,{type:self._DC_PROTOCOL_TYPE.ACK,ackN:-1,sender:self._user.sid},channelProp);self._WRQProtocolHandler(peerId,protocolData,channelProp);break;case self._DC_PROTOCOL_TYPE.ACK:self._ACKProtocolHandler(peerId,protocolData,channelProp);break;case self._DC_PROTOCOL_TYPE.ERROR:self._ERRORProtocolHandler(peerId,protocolData,channelProp);break;case self._DC_PROTOCOL_TYPE.CANCEL:self._CANCELProtocolHandler(peerId,protocolData,channelProp);break;case self._DC_PROTOCOL_TYPE.MESSAGE:self._MESSAGEProtocolHandler(peerId,protocolData,channelProp);break;default:log.warn([peerId,"RTCDataChannel",channelProp,'Discarded unknown "'+protocolData.type+'" message ->'],protocolData)}}catch(error){if(rawData.indexOf("{")>-1&&rawData.indexOf("}")>0)throw log.error([peerId,"RTCDataChannel",channelProp,"Failed parsing protocol step data error ->"],{data:rawData,error:error}),self._trigger("dataChannelState",self.DATA_CHANNEL_STATE.ERROR,peerId,error,channelName,channelType,null,self._getDataChannelBuffer(peerId,channelProp)),error
;if(!(isStreamChunk||transferId&&self._dataTransfers[transferId]&&self._dataTransfers[transferId].sessions[peerId]))return void log.warn([peerId,"RTCDataChannel",channelProp,"Discarded data chunk without session ->"],rawData);if(!isStreamChunk&&transferId&&self._dataTransfers[transferId].chunks[self._dataTransfers[transferId].sessions[peerId].ackN])return void log.warn([peerId,"RTCDataChannel",transferId,"Dropping data chunk "+(isStreamChunk?"":"@"+self._dataTransfers[transferId].sessions[peerId].ackN)+" as it has already been added ->"],rawData);self.DATA_TRANSFER_DATA_TYPE.BINARY_STRING;if(isStreamChunk||self._dataTransfers[transferId].dataType===self.DATA_TRANSFER_SESSION_TYPE.DATA_URL)log.debug([peerId,"RTCDataChannel",channelProp,"Received string data chunk "+(isStreamChunk?"":"@"+self._dataTransfers[transferId].sessions[peerId].ackN)+" with size ->"],rawData.length||rawData.size),self._DATAProtocolHandler(peerId,rawData,self.DATA_TRANSFER_DATA_TYPE.STRING,rawData.length||rawData.size||0,channelProp);else{var removeSpaceData=rawData.replace(/\s|\r|\n/g,"");log.debug([peerId,"RTCDataChannel",channelProp,"Received binary string data chunk @"+self._dataTransfers[transferId].sessions[peerId].ackN+" with size ->"],removeSpaceData.length||removeSpaceData.size),self._DATAProtocolHandler(peerId,self._base64ToBlob(removeSpaceData),self.DATA_TRANSFER_DATA_TYPE.BINARY_STRING,removeSpaceData.length||removeSpaceData.size||0,channelProp)}}else{if(!(isStreamChunk||transferId&&self._dataTransfers[transferId]&&self._dataTransfers[transferId].sessions[peerId]))return void log.warn([peerId,"RTCDataChannel",channelProp,"Discarded data chunk without session ->"],rawData);if(!isStreamChunk&&transferId&&self._dataTransfers[transferId].chunks[self._dataTransfers[transferId].sessions[peerId].ackN])return void log.warn([peerId,"RTCDataChannel",transferId,"Dropping data chunk "+(isStreamChunk?"":"@"+self._dataTransfers[transferId].sessions[peerId].ackN)+" as it has already been added ->"],rawData);if(rawData instanceof Blob)log.debug([peerId,"RTCDataChannel",channelProp,"Received blob data chunk "+(isStreamChunk?"":"@"+self._dataTransfers[transferId].sessions[peerId].ackN)+" with size ->"],rawData.size),self._DATAProtocolHandler(peerId,rawData,self.DATA_TRANSFER_DATA_TYPE.BLOB,rawData.size,channelProp);else{var byteArray=rawData,blob=null;if(rawData.constructor&&"Array"===rawData.constructor.name&&(byteArray=new Int8Array(rawData)),"IE"===window.webrtcDetectedBrowser){if(window.BlobBuilder){var bb=new BlobBuilder;bb.append(rawData.constructor&&"ArrayBuffer"===rawData.constructor.name?byteArray:new Uint8Array(byteArray).buffer),blob=bb.getBlob()}}else blob=new Blob([byteArray]);log.debug([peerId,"RTCDataChannel",channelProp,"Received arraybuffer data chunk "+(isStreamChunk?"":"@"+self._dataTransfers[transferId].sessions[peerId].ackN)+" with size ->"],blob.size),self._DATAProtocolHandler(peerId,blob,self.DATA_TRANSFER_DATA_TYPE.ARRAY_BUFFER,blob.size,channelProp)}}},Skylink.prototype._WRQProtocolHandler=function(peerId,data,channelProp){var self=this,transferId="main"===channelProp?data.transferId||null:channelProp,senderPeerId=data.sender||peerId;if(["fastBinaryStart","fastBinaryStop"].indexOf(data.dataType)>-1)if("fastBinaryStart"===data.dataType){transferId||(transferId="stream_"+peerId+"_"+(new Date).getTime()),self._dataStreams[transferId]={chunkSize:0,chunkType:"string"===data.chunkType?self.DATA_TRANSFER_DATA_TYPE.STRING:self._binaryChunkType,sessionChunkType:data.chunkType,isPrivate:!!data.isPrivate,isStringStream:"string"===data.chunkType,senderPeerId:senderPeerId,isUpload:!1},self._dataChannels[peerId][channelProp].streamId=transferId;self.once("dataChannelState",function(){},function(state,evtPeerId,channelName,channelType,error){if(!self._dataStreams[transferId])return!0;if(evtPeerId===peerId&&("main"===channelProp?channelType===self.DATA_CHANNEL_TYPE.MESSAGING:channelName===transferId&&channelType===self.DATA_CHANNEL_TYPE.DATA)&&[self.DATA_CHANNEL_STATE.ERROR,self.DATA_CHANNEL_STATE.CLOSED].indexOf(state)>-1){var updatedError=new Error(error&&error.message?error.message:'Failed data transfer as datachannel state is "'+state+'".');return self._trigger("dataStreamState",self.DATA_STREAM_STATE.ERROR,transferId,senderPeerId,{chunk:null,chunkSize:0,chunkType:self._dataStreams[transferId].chunkType,isPrivate:self._dataStreams[transferId].isPrivate,isStringStream:"string"===self._dataStreams[transferId].sessionChunkType,senderPeerId:senderPeerId},updatedError),!0}}),self._trigger("dataStreamState",self.DATA_STREAM_STATE.RECEIVING_STARTED,transferId,senderPeerId,{chunk:null,chunkSize:0,chunkType:self._dataStreams[transferId].chunkType,isPrivate:self._dataStreams[transferId].isPrivate,isStringStream:"string"===self._dataStreams[transferId].sessionChunkType,senderPeerId:senderPeerId},null),self._trigger("incomingDataStreamStarted",transferId,senderPeerId,{chunkSize:0,chunkType:self._dataStreams[transferId].chunkType,isPrivate:self._dataStreams[transferId].isPrivate,isStringStream:"string"===self._dataStreams[transferId].sessionChunkType,senderPeerId:senderPeerId},!1)}else transferId=self._dataChannels[peerId][channelProp].streamId,self._dataStreams[transferId]&&!self._dataStreams[transferId].isUpload&&(self._trigger("dataStreamState",self.DATA_STREAM_STATE.RECEIVING_STOPPED,transferId,senderPeerId,{chunk:null,chunkSize:0,chunkType:self._dataStreams[transferId].chunkType,isPrivate:self._dataStreams[transferId].isPrivate,isStringStream:"string"===self._dataStreams[transferId].sessionChunkType,senderPeerId:senderPeerId},null),self._trigger("incomingDataStreamStopped",transferId,senderPeerId,{chunkSize:0,chunkType:self._dataStreams[transferId].chunkType,isPrivate:self._dataStreams[transferId].isPrivate,isStringStream:"string"===self._dataStreams[transferId].sessionChunkType,senderPeerId:senderPeerId},!1),self._dataChannels[peerId][channelProp].streamId=null,"main"!==channelProp&&self._closeDataChannel(peerId,channelProp),delete self._dataStreams[transferId]);else transferId||(transferId="transfer_"+peerId+"_"+(new Date).getTime()),self._dataTransfers[transferId]={name:data.name||transferId,size:data.size||0,chunkSize:data.chunkSize,originalSize:data.originalSize||0,timeout:data.timeout||60,isPrivate:!!data.isPrivate,senderPeerId:data.sender||peerId,dataType:self.DATA_TRANSFER_SESSION_TYPE.BLOB,mimeType:data.mimeType||null,chunkType:self.DATA_TRANSFER_DATA_TYPE.BINARY_STRING,direction:self.DATA_TRANSFER_TYPE.DOWNLOAD,chunks:[],sessions:{},sessionType:data.dataType||"blob",sessionChunkType:data.chunkType||"string"},"data"===self._dataTransfers[transferId].sessionType&&"string"===self._dataTransfers[transferId].sessionChunkType?(self._dataTransfers[transferId].dataType=self.DATA_TRANSFER_SESSION_TYPE.DATA_URL,self._dataTransfers[transferId].chunkType=self.DATA_TRANSFER_DATA_TYPE.STRING):"blob"===self._dataTransfers[transferId].sessionType&&"binary"===self._dataTransfers[transferId].sessionChunkType&&(self._dataTransfers[transferId].chunkType=self._binaryChunkType),self._dataChannels[peerId][channelProp].transferId=transferId,self._dataTransfers[transferId].sessions[peerId]={timer:null,ackN:0,receivedSize:0},self._trigger("incomingDataRequest",transferId,senderPeerId,self._getTransferInfo(transferId,peerId,!1,!1,!1),!1),self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.UPLOAD_REQUEST,transferId,senderPeerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),null)},Skylink.prototype._ACKProtocolHandler=function(peerId,data,channelProp){var self=this,transferId=channelProp,senderPeerId=data.sender||peerId;"main"===channelProp&&(transferId=self._dataChannels[peerId].main.transferId),self._handleDataTransferTimeoutForPeer(transferId,peerId,!1);var emitEventFn=function(cb){if("MCU"===peerId){if(!self._dataTransfers[transferId].peers[channelProp])return void log.warn([peerId,"RTCDataChannel",channelProp,"Dropping triggering of ACK event as Peers list does not exists"]);for(var evtPeerId in self._dataTransfers[transferId].peers[channelProp])self._dataTransfers[transferId].peers[channelProp].hasOwnProperty(evtPeerId)&&self._dataTransfers[transferId].peers[channelProp][evtPeerId]&&cb(evtPeerId)}else cb(senderPeerId)};if(data.ackN>-1){if(0===data.ackN)emitEventFn(function(evtPeerId){self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.UPLOAD_STARTED,transferId,evtPeerId,self._getTransferInfo(transferId,peerId,!0,!1,0),null)});else if(self._dataTransfers[transferId].enforceBSPeers.indexOf(peerId)>-1?data.ackN===self._dataTransfers[transferId].enforceBSInfo.chunks.length:data.ackN===self._dataTransfers[transferId].chunks.length)return self._dataTransfers[transferId].sessions[peerId].ackN=data.ackN,emitEventFn(function(evtPeerId){self._trigger("incomingData",self._getTransferData(transferId),transferId,evtPeerId,self._getTransferInfo(transferId,peerId,!1,!1,!1),!0),self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.UPLOAD_COMPLETED,transferId,evtPeerId,self._getTransferInfo(transferId,peerId,!0,!1,100),null)}),void(self._dataChannels[peerId][channelProp]&&(self._dataChannels[peerId][channelProp].transferId=null,"main"!==channelProp&&self._closeDataChannel(peerId,channelProp)));var uploadFn=function(chunk){self._sendMessageToDataChannel(peerId,chunk,channelProp,!0),data.ackN<self._dataTransfers[transferId].chunks.length&&emitEventFn(function(evtPeerId){self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.UPLOADING,transferId,evtPeerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),null)}),self._handleDataTransferTimeoutForPeer(transferId,peerId,!0)};self._dataTransfers[transferId].sessions[peerId].ackN=data.ackN,self._dataTransfers[transferId].enforceBSPeers.indexOf(peerId)>-1?self._blobToBase64(self._dataTransfers[transferId].enforceBSInfo.chunks[data.ackN],uploadFn):self._dataTransfers[transferId].chunkType===self.DATA_TRANSFER_DATA_TYPE.BINARY_STRING?self._blobToBase64(self._dataTransfers[transferId].chunks[data.ackN],uploadFn):self._dataTransfers[transferId].chunkType===self.DATA_TRANSFER_DATA_TYPE.ARRAY_BUFFER?self._blobToArrayBuffer(self._dataTransfers[transferId].chunks[data.ackN],uploadFn):uploadFn(self._dataTransfers[transferId].chunks[data.ackN])}else self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.REJECTED,transferId,senderPeerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),{message:new Error("Data transfer terminated as Peer has rejected data transfer request"),transferType:self.DATA_TRANSFER_TYPE.UPLOAD})},Skylink.prototype._MESSAGEProtocolHandler=function(peerId,data,channelProp){var senderPeerId=data.sender||peerId;log.log([senderPeerId,"RTCDataChannel",channelProp,"Received P2P message from peer:"],data),this._trigger("incomingMessage",{content:data.data,isPrivate:data.isPrivate,isDataChannel:!0,targetPeerId:this._user.sid,senderPeerId:senderPeerId},senderPeerId,this.getPeerInfo(senderPeerId),!1)},Skylink.prototype._ERRORProtocolHandler=function(peerId,data,channelProp){var self=this,transferId=channelProp,senderPeerId=data.sender||peerId;"main"===channelProp&&(transferId=self._dataChannels[peerId].main.transferId),self._handleDataTransferTimeoutForPeer(transferId,peerId,!1);var emitEventFn=function(cb){if("MCU"===peerId){if(!self._dataTransfers[transferId].peers[channelProp])return void log.warn([peerId,"RTCDataChannel",channelProp,"Dropping triggering of ERROR event as Peers list does not exists"]);for(var evtPeerId in self._dataTransfers[transferId].peers[channelProp])self._dataTransfers[transferId].peers[channelProp].hasOwnProperty(evtPeerId)&&self._dataTransfers[transferId].peers[channelProp][evtPeerId]&&cb(evtPeerId)}else cb(senderPeerId)};log.error([peerId,"RTCDataChannel",channelProp,"Received an error from peer ->"],data),emitEventFn(function(evtPeerId){self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.ERROR,transferId,evtPeerId,self._getTransferInfo(transferId,peerID,!0,!1,!1),{message:new Error(data.content),transferType:self._dataTransfers[transferId].direction})})},Skylink.prototype._CANCELProtocolHandler=function(peerId,data,channelProp){var self=this,transferId=channelProp;"main"===channelProp&&(transferId=self._dataChannels[peerId].main.transferId),self._handleDataTransferTimeoutForPeer(transferId,peerId,!1);var emitEventFn=function(cb){if("MCU"===peerId){if(!self._dataTransfers[transferId].peers[channelProp])return void log.warn([peerId,"RTCDataChannel",channelProp,"Dropping triggering of CANCEL event as Peers list does not exists"]);for(var evtPeerId in self._dataTransfers[transferId].peers[channelProp])self._dataTransfers[transferId].peers[channelProp].hasOwnProperty(evtPeerId)&&self._dataTransfers[transferId].peers[channelProp][evtPeerId]&&cb(evtPeerId)}else cb(peerId)};log.error([peerId,"RTCDataChannel",channelProp,"Received data transfer termination from peer ->"],data),emitEventFn(function(evtPeerId){self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.CANCEL,transferId,evtPeerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),{message:new Error(data.content||"Peer has terminated data transfer."),transferType:self._dataTransfers[transferId].direction})})},Skylink.prototype._DATAProtocolHandler=function(peerId,chunk,chunkType,chunkSize,channelProp){var self=this,transferId=channelProp,senderPeerId=peerId;if(self._dataChannels[peerId]&&self._dataChannels[peerId][channelProp]){var streamId=self._dataChannels[peerId][channelProp].streamId;if(streamId&&self._dataStreams[streamId]&&("string"==typeof chunk&&"string"===self._dataStreams[streamId].sessionChunkType||chunk instanceof Blob&&"binary"===self._dataStreams[streamId].sessionChunkType))return senderPeerId=self._dataStreams[streamId].senderPeerId||peerId,self._trigger("dataStreamState",self.DATA_STREAM_STATE.RECEIVED,streamId,senderPeerId,{chunk:chunk,chunkSize:chunkSize,chunkType:chunkType,isPrivate:self._dataStreams[streamId].sessionChunkType.isPrivate,isStringStream:"string"===self._dataStreams[streamId].sessionChunkType,senderPeerId:senderPeerId},null),void self._trigger("incomingDataStream",chunk,transferId,senderPeerId,{chunkSize:chunkSize,chunkType:chunkType,isPrivate:self._dataStreams[streamId].sessionChunkType.isPrivate,isStringStream:"string"===self._dataStreams[streamId].sessionChunkType,senderPeerId:senderPeerId},!1);if("main"===channelProp&&(transferId=self._dataChannels[peerId].main.transferId),self._dataTransfers[transferId].senderPeerId&&(senderPeerId=self._dataTransfers[transferId].senderPeerId),self._handleDataTransferTimeoutForPeer(transferId,peerId,!1),self._dataTransfers[transferId].chunkType=chunkType,self._dataTransfers[transferId].sessions[peerId].receivedSize+=chunkSize,self._dataTransfers[transferId].chunks[self._dataTransfers[transferId].sessions[peerId].ackN]=chunk,self._dataTransfers[transferId].sessions[peerId].receivedSize>=self._dataTransfers[transferId].size)return log.log([peerId,"RTCDataChannel",channelProp,"Data transfer has been completed. Computed size ->"],self._dataTransfers[transferId].sessions[peerId].receivedSize),self._sendMessageToDataChannel(peerId,{type:self._DC_PROTOCOL_TYPE.ACK,sender:self._user.sid,ackN:self._dataTransfers[transferId].sessions[peerId].ackN+1},channelProp),self._trigger("incomingData",self._getTransferData(transferId),transferId,senderPeerId,self._getTransferInfo(transferId,peerId,!1,!1,!1),null),void self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.DOWNLOAD_COMPLETED,transferId,senderPeerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),null);self._dataTransfers[transferId].sessions[peerId].ackN+=1,self._sendMessageToDataChannel(peerId,{type:self._DC_PROTOCOL_TYPE.ACK,sender:self._user.sid,ackN:self._dataTransfers[transferId].sessions[peerId].ackN},channelProp),self._handleDataTransferTimeoutForPeer(transferId,peerId,!0),self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.DOWNLOADING,transferId,senderPeerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),null)}},Skylink.prototype.CANDIDATE_GENERATION_STATE={NEW:"new",GATHERING:"gathering",COMPLETED:"completed"},Skylink.prototype.CANDIDATE_PROCESSING_STATE={RECEIVED:"received",DROPPED:"dropped",BUFFERED:"buffered",PROCESSING:"processing",PROCESS_SUCCESS:"processSuccess",PROCESS_ERROR:"processError"},Skylink.prototype._onIceCandidate=function(targetMid,candidate){var self=this,pc=self._peerConnections[targetMid];if(!pc)return void log.warn([targetMid,"RTCIceCandidate",null,"Ignoring of ICE candidate event as Peer connection does not exists ->"],candidate);if(candidate.candidate){pc.gathering||(log.log([targetMid,"RTCIceCandidate",null,"ICE gathering has started."]),pc.gathering=!0,pc.gathered=!1,self._trigger("candidateGenerationState",self.CANDIDATE_GENERATION_STATE.GATHERING,targetMid));var candidateType=candidate.candidate.split(" ")[7];if(log.debug([targetMid,"RTCIceCandidate",candidateType,"Generated ICE candidate ->"],candidate),"endOfCandidates"===candidateType||!(self._peerConnections[targetMid]&&self._peerConnections[targetMid].localDescription&&self._peerConnections[targetMid].localDescription.sdp&&self._peerConnections[targetMid].localDescription.sdp.indexOf("\r\na=mid:"+candidate.sdpMid+"\r\n")>-1))return void log.warn([targetMid,"RTCIceCandidate",candidateType,"Dropping of sending ICE candidate end-of-candidates signal or unused ICE candidates to prevent errors ->"],candidate);if(self._filterCandidatesType[candidateType]){if(!self._hasMCU||!self._forceTURN)return void log.warn([targetMid,"RTCIceCandidate",candidateType,"Dropping of sending ICE candidate as it matches ICE candidate filtering flag ->"],candidate);log.warn([targetMid,"RTCIceCandidate",candidateType,"Not dropping of sending ICE candidate as TURN connections are enforced as MCU is present (and act as a TURN itself) so filtering of ICE candidate flags are not honoured ->"],candidate)}if(self._gatheredCandidates[targetMid]||(self._gatheredCandidates[targetMid]={sending:{host:[],srflx:[],relay:[]},receiving:{host:[],srflx:[],relay:[]}}),self._gatheredCandidates[targetMid].sending[candidateType].push({sdpMid:candidate.sdpMid,sdpMLineIndex:candidate.sdpMLineIndex,candidate:candidate.candidate}),!self._enableIceTrickle)return void log.warn([targetMid,"RTCIceCandidate",candidateType,"Dropping of sending ICE candidate as trickle ICE is disabled ->"],candidate);log.debug([targetMid,"RTCIceCandidate",candidateType,"Sending ICE candidate ->"],candidate),self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.CANDIDATE,label:candidate.sdpMLineIndex,id:candidate.sdpMid,candidate:candidate.candidate,mid:self._user.sid,target:targetMid,rid:self._room.id})}else{if(log.log([targetMid,"RTCIceCandidate",null,"ICE gathering has completed."]),pc.gathered)return;if(pc.gathering=!1,pc.gathered=!0,self._trigger("candidateGenerationState",self.CANDIDATE_GENERATION_STATE.COMPLETED,targetMid),self._enableIceTrickle)self._gatheredCandidates[targetMid]&&self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.END_OF_CANDIDATES,noOfExpectedCandidates:self._gatheredCandidates[targetMid].sending.srflx.length+self._gatheredCandidates[targetMid].sending.host.length+self._gatheredCandidates[targetMid].sending.relay.length,mid:self._user.sid,target:targetMid,rid:self._room.id});else{var sessionDescription=self._peerConnections[targetMid].localDescription;if(!(sessionDescription&&sessionDescription.type&&sessionDescription.sdp))return void log.warn([targetMid,"RTCSessionDescription",null,"Not sending any session description after ICE gathering completed as it is not present."]);self._sendChannelMessage({type:sessionDescription.type,sdp:self._addSDPMediaStreamTrackIDs(targetMid,sessionDescription),mid:self._user.sid,userInfo:self._getUserInfo(targetMid),target:targetMid,rid:self._room.id})}}},Skylink.prototype._addIceCandidateToQueue=function(targetMid,canId,candidate){var candidateType=candidate.candidate.split(" ")[7];log.debug([targetMid,"RTCIceCandidate",canId+":"+candidateType,"Buffering ICE candidate."]),this._trigger("candidateProcessingState",this.CANDIDATE_PROCESSING_STATE.BUFFERED,targetMid,canId,candidateType,{candidate:candidate.candidate,sdpMid:candidate.sdpMid,sdpMLineIndex:candidate.sdpMLineIndex},null),this._peerCandidatesQueue[targetMid]=this._peerCandidatesQueue[targetMid]||[],this._peerCandidatesQueue[targetMid].push([canId,candidate])},Skylink.prototype._addIceCandidateFromQueue=function(targetMid){this._peerCandidatesQueue[targetMid]=this._peerCandidatesQueue[targetMid]||[];for(var i=0;i<this._peerCandidatesQueue[targetMid].length;i++){var canArray=this._peerCandidatesQueue[targetMid][i];if(canArray){var candidateType=canArray[1].candidate.split(" ")[7];log.debug([targetMid,"RTCIceCandidate",canArray[0]+":"+candidateType,"Adding buffered ICE candidate."]),this._addIceCandidate(targetMid,canArray[0],canArray[1])}else if(this._peerConnections[targetMid]&&this._peerConnections[targetMid].signalingState!==this.PEER_CONNECTION_STATE.CLOSED&&AdapterJS&&!this._isLowerThanVersion(AdapterJS.VERSION,"0.14.0")){log.debug([targetMid,"RTCPeerConnection",null,"Signaling of end-of-candidates remote ICE gathering."]);try{this._peerConnections[targetMid].addIceCandidate(null)}catch(error){log.warn([targetMid,"RTCPeerConnection",null,"Signaling of end-of-candidates remote ICE gathering is not supported."])}}}delete this._peerCandidatesQueue[targetMid],this._signalingEndOfCandidates(targetMid)},Skylink.prototype._addIceCandidate=function(targetMid,canId,candidate){var self=this,candidateType=candidate.candidate.split(" ")[7],onSuccessCbFn=function(){log.log([targetMid,"RTCIceCandidate",canId+":"+candidateType,"Added ICE candidate successfully."]),self._trigger("candidateProcessingState",self.CANDIDATE_PROCESSING_STATE.PROCESS_SUCCESS,targetMid,canId,candidateType,{candidate:candidate.candidate,sdpMid:candidate.sdpMid,sdpMLineIndex:candidate.sdpMLineIndex},null)},onErrorCbFn=function(error){log.error([targetMid,"RTCIceCandidate",canId+":"+candidateType,"Failed adding ICE candidate ->"],error),self._trigger("candidateProcessingState",self.CANDIDATE_PROCESSING_STATE.PROCESS_ERROR,targetMid,canId,candidateType,{candidate:candidate.candidate,sdpMid:candidate.sdpMid,sdpMLineIndex:candidate.sdpMLineIndex},error)};if(log.debug([targetMid,"RTCIceCandidate",canId+":"+candidateType,"Adding ICE candidate."]),self._trigger("candidateProcessingState",self.CANDIDATE_PROCESSING_STATE.PROCESSING,targetMid,canId,candidateType,{candidate:candidate.candidate,sdpMid:candidate.sdpMid,sdpMLineIndex:candidate.sdpMLineIndex},null),!(self._peerConnections[targetMid]&&self._peerConnections[targetMid].signalingState!==self.PEER_CONNECTION_STATE.CLOSED&&self._peerConnections[targetMid].remoteDescription&&self._peerConnections[targetMid].remoteDescription.sdp&&self._peerConnections[targetMid].remoteDescription.sdp.indexOf("\r\na=mid:"+candidate.sdpMid+"\r\n")>-1))return log.warn([targetMid,"RTCIceCandidate",canId+":"+candidateType,"Dropping ICE candidate as Peer connection does not exists or is closed"]),void self._trigger("candidateProcessingState",self.CANDIDATE_PROCESSING_STATE.DROPPED,targetMid,canId,candidateType,{candidate:candidate.candidate,sdpMid:candidate.sdpMid,sdpMLineIndex:candidate.sdpMLineIndex},new Error("Failed processing ICE candidate as Peer connection does not exists or is closed."));self._useSafariWebRTC?self._peerConnections[targetMid].addIceCandidate(candidate).then(onSuccessCbFn).catch(onErrorCbFn):self._peerConnections[targetMid].addIceCandidate(candidate,onSuccessCbFn,onErrorCbFn)},Skylink.prototype.ICE_CONNECTION_STATE={STARTING:"starting",CHECKING:"checking",CONNECTED:"connected",COMPLETED:"completed",CLOSED:"closed",FAILED:"failed",TRICKLE_FAILED:"trickleFailed",DISCONNECTED:"disconnected"},Skylink.prototype.TURN_TRANSPORT={UDP:"udp",TCP:"tcp",ANY:"any",NONE:"none",ALL:"all"},Skylink.prototype._setIceServers=function(givenConfig){var self=this,givenIceServers=clone(givenConfig.iceServers),iceServersList={},newIceServers=[],useTURNSSLProtocol=!1,useTURNSSLPort=!1;self._forceTURNSSL&&("chrome"===window.webrtcDetectedBrowser||self._isUsingPlugin?useTURNSSLProtocol=!0:useTURNSSLPort=!0),log.log("TURN server connections SSL configuration",{useTURNSSLProtocol:useTURNSSLProtocol,useTURNSSLPort:useTURNSSLPort});var i,pushIceServer=function(username,credential,url,index){iceServersList[username]||(iceServersList[username]={}),iceServersList[username][credential]||(iceServersList[username][credential]=[]),-1===iceServersList[username][credential].indexOf(url)&&("number"==typeof index?iceServersList[username][credential].splice(index,0,url):iceServersList[username][credential].push(url))};for(i=0;i<givenIceServers.length;i++){var server=givenIceServers[i];if("string"==typeof server.url){if(0===server.url.indexOf("stun")){if(!self._enableSTUN){log.warn("Ignoring STUN server provided at index "+i,clone(server));continue}if(!self._usePublicSTUN&&-1===server.url.indexOf("temasys")){log.warn("Ignoring public STUN server provided at index "+i,clone(server));continue}}else if(0===server.url.indexOf("turn")){if(!self._enableTURN){log.warn("Ignoring TURN server provided at index "+i,clone(server));continue}if(-1===server.url.indexOf(":443")&&useTURNSSLPort){log.log("Ignoring TURN Server (non-SSL port) provided at index "+i,clone(server));continue}if(useTURNSSLProtocol){var parts=server.url.split(":");parts[0]="turns",server.url=parts.join(":")}}if(server.url.indexOf("@")>0){var protocolParts=server.url.split(":"),urlParts=protocolParts[1].split("@");server.username=urlParts[0],server.url=protocolParts[0]+":"+urlParts[1],"edge"===window.webrtcDetectedBrowser?server.url+=":3478":protocolParts[2]&&(server.url+=":"+protocolParts[2])}var username="string"==typeof server.username?server.username:"none",credential="string"==typeof server.credential?server.credential:"none";if(0===server.url.indexOf("turn"))if(self._TURNTransport===self.TURN_TRANSPORT.ANY)pushIceServer(username,credential,server.url);else{var rawUrl=server.url;if(rawUrl.indexOf("?transport=")>0&&(rawUrl=rawUrl.split("?transport=")[0]),self._TURNTransport===self.TURN_TRANSPORT.NONE)pushIceServer(username,credential,rawUrl);else if(self._TURNTransport===self.TURN_TRANSPORT.UDP)pushIceServer(username,credential,rawUrl+"?transport=udp");else if(self._TURNTransport===self.TURN_TRANSPORT.TCP)pushIceServer(username,credential,rawUrl+"?transport=tcp");else{if(self._TURNTransport!==self.TURN_TRANSPORT.ALL){log.warn('Invalid TURN transport option "'+self._TURNTransport+'". Ignoring TURN server at index'+i,clone(server));continue}pushIceServer(username,credential,rawUrl+"?transport=tcp"),pushIceServer(username,credential,rawUrl+"?transport=udp")}}else pushIceServer(username,credential,server.url)}else log.warn("Ignoring ICE server provided at index "+i,clone(server))}self._enableSTUN&&self._usePublicSTUN&&"firefox"===window.webrtcDetectedBrowser&&pushIceServer("none","none","stun:stun.services.mozilla.com",0);var hasUrlsSupport=!1;"chrome"===window.webrtcDetectedBrowser&&window.webrtcDetectedVersion>34&&(hasUrlsSupport=!0),"firefox"===window.webrtcDetectedBrowser&&window.webrtcDetectedVersion>38&&(hasUrlsSupport=!0),"opera"===window.webrtcDetectedBrowser&&window.webrtcDetectedVersion>31&&(hasUrlsSupport=!0),self._isUsingPlugin?hasUrlsSupport=!0:"safari"===window.webrtcDetectedBrowser&&window.webrtcDetectedVersion>=11&&(hasUrlsSupport=!0),["bowser","edge"].indexOf(window.webrtcDetectedBrowser)>-1&&(hasUrlsSupport=!0);for(var serverUsername in iceServersList)if(iceServersList.hasOwnProperty(serverUsername))for(var serverCred in iceServersList[serverUsername])if(iceServersList[serverUsername].hasOwnProperty(serverCred))if(hasUrlsSupport){var urlsItem={urls:iceServersList[serverUsername][serverCred]};if("none"!==serverUsername&&(urlsItem.username=serverUsername),"none"!==serverCred&&(urlsItem.credential=serverCred),"edge"===window.webrtcDetectedBrowser){if(urlsItem.username&&urlsItem.credential){urlsItem.urls=[urlsItem.urls[0]],newIceServers.push(urlsItem);break}}else newIceServers.push(urlsItem)}else for(var j=0;j<iceServersList[serverUsername][serverCred].length;j++){var urlItem={url:iceServersList[serverUsername][serverCred][j]};"none"!==serverUsername&&(urlItem.username=serverUsername),"none"!==serverCred&&(urlItem.credential=serverCred),newIceServers.push(urlItem)}if(self._iceServer){var nUsername=null,nCredential=null;for(i=0;i<newIceServers.length;i++)newIceServers[i].username&&(nUsername=newIceServers[i].username),newIceServers[i].credential&&(nCredential=newIceServers[i].credential);newIceServers=[{urls:self._iceServer.urls,username:nUsername,credential:nCredential}]}return log.log("Output iceServers configuration:",newIceServers),{iceServers:newIceServers}},Skylink.prototype.PEER_CONNECTION_STATE={STABLE:"stable",HAVE_LOCAL_OFFER:"have-local-offer",HAVE_REMOTE_OFFER:"have-remote-offer",CLOSED:"closed"},Skylink.prototype.GET_CONNECTION_STATUS_STATE={RETRIEVING:0,RETRIEVE_SUCCESS:1,RETRIEVE_ERROR:-1},Skylink.prototype.SERVER_PEER_TYPE={MCU:"mcu"},Skylink.prototype.BUNDLE_POLICY={MAX_COMPAT:"max-compat",BALANCED:"balanced",MAX_BUNDLE:"max-bundle",NONE:"none"},Skylink.prototype.RTCP_MUX_POLICY={REQUIRE:"require",NEGOTIATE:"negotiate"},Skylink.prototype.PEER_CERTIFICATE={RSA:"RSA",ECDSA:"ECDSA",AUTO:"AUTO"},Skylink.prototype.refreshConnection=function(targetPeerId,iceRestart,options,callback){var self=this,listOfPeers=Object.keys(self._peerConnections),doIceRestart=!1,bwOptions={};Array.isArray(targetPeerId)?listOfPeers=targetPeerId:"string"==typeof targetPeerId?listOfPeers=[targetPeerId]:"boolean"==typeof targetPeerId?doIceRestart=targetPeerId:targetPeerId&&"object"==typeof targetPeerId?bwOptions=targetPeerId:"function"==typeof targetPeerId&&(callback=targetPeerId),"boolean"==typeof iceRestart?doIceRestart=iceRestart:iceRestart&&"object"==typeof iceRestart?bwOptions=iceRestart:"function"==typeof iceRestart&&(callback=iceRestart),options&&"object"==typeof options?bwOptions=options:"function"==typeof options&&(callback=options);var emitErrorForPeersFn=function(error){if(log.error(error),"function"==typeof callback){var listOfPeerErrors={};if(0===listOfPeers.length)listOfPeerErrors.self=new Error(error);else for(var i=0;i<listOfPeers.length;i++)listOfPeerErrors[listOfPeers[i]]=new Error(error);callback({refreshErrors:listOfPeerRestartErrors,listOfPeers:listOfPeers},null)}};return 0!==listOfPeers.length||self._hasMCU&&!self._mcuUseRenegoRestart?"edge"===window.webrtcDetectedBrowser?void emitErrorForPeersFn("Edge browser currently does not support renegotiation."):void self._throttle(function(runFn){if(!runFn&&self._hasMCU&&!self._mcuUseRenegoRestart)return void(self._throttlingShouldThrowError&&emitErrorForPeersFn("Unable to run as throttle interval has not reached ("+self._throttlingTimeouts.refreshConnection+"ms)."));self._refreshPeerConnection(listOfPeers,doIceRestart,bwOptions,callback)},"refreshConnection",self._throttlingTimeouts.refreshConnection):void emitErrorForPeersFn("There is currently no peer connections to restart")},Skylink.prototype._refreshPeerConnection=function(listOfPeers,doIceRestart,bwOptions,callback){var self=this,listOfPeerRestarts=[],error="",listOfPeerRestartErrors={},listOfPeersSettings={},refreshSinglePeerCallback=function(peerId){return function(error){-1===listOfPeerRestarts.indexOf(peerId)&&(error?(log.error([peerId,"RTCPeerConnection",null,"Failed restarting for peer"],error),listOfPeerRestartErrors[peerId]=error):listOfPeersSettings[peerId]={iceRestart:!self._hasMCU&&self._peerInformations[peerId]&&self._peerInformations[peerId].config&&self._peerInformations[peerId].config.enableIceRestart&&self._enableIceRestart&&doIceRestart,customSettings:self.getPeersCustomSettings()[peerId]||{}},listOfPeerRestarts.push(peerId)),listOfPeerRestarts.length===listOfPeers.length&&"function"==typeof callback&&(log.log([null,"PeerConnection",null,"Invoked all peers to restart. Firing callback"]),Object.keys(listOfPeerRestartErrors).length>0?callback({
refreshErrors:listOfPeerRestartErrors,listOfPeers:listOfPeers,refreshSettings:listOfPeersSettings},null):callback(null,{listOfPeers:listOfPeers,refreshSettings:listOfPeersSettings}))}},refreshSinglePeer=function(peerId,peerCallback){if(!self._peerConnections[peerId])return error="There is currently no existing peer connection made with the peer. Unable to restart connection",log.error([peerId,null,null,error]),void peerCallback(error);log.log([peerId,"PeerConnection",null,"Restarting peer connection"]),self._restartPeerConnection(peerId,doIceRestart,bwOptions,peerCallback)};if(self._hasMCU)self._restartMCUConnection(callback,doIceRestart,bwOptions);else{var i;for(i=0;i<listOfPeers.length;i++){var peerId=listOfPeers[i];Object.keys(self._peerConnections).indexOf(peerId)>-1?refreshSinglePeer(peerId,refreshSinglePeerCallback(peerId)):(error="Peer connection with peer does not exists. Unable to restart",log.error([peerId,"PeerConnection",null,error]),refreshSinglePeerCallback(peerId)(error))}}},Skylink.prototype.getConnectionStatus=function(targetPeerId,callback){var self=this,listOfPeers=Object.keys(self._peerConnections),listOfPeerStats={},listOfPeerErrors={};if(Array.isArray(targetPeerId)?listOfPeers=targetPeerId:"string"==typeof targetPeerId&&targetPeerId?listOfPeers=[targetPeerId]:"function"==typeof targetPeerId&&(callback=targetPeerId,targetPeerId=void 0),0===listOfPeers.length)return listOfPeerErrors.self=new Error("There is currently no peer connections to retrieve connection status"),log.error([null,"RTCStatsReport",null,"Retrieving request failure ->"],listOfPeerErrors.self),void("function"==typeof callback&&callback({listOfPeers:listOfPeers,retrievalErrors:listOfPeerErrors,connectionStats:listOfPeerStats},null));"edge"===window.webrtcDetectedBrowser&&log.warn("Edge browser does not have well support for stats.");for(var completedTaskCounter=[],checkCompletedFn=function(peerId){-1===completedTaskCounter.indexOf(peerId)&&completedTaskCounter.push(peerId),completedTaskCounter.length===listOfPeers.length&&"function"==typeof callback&&(Object.keys(listOfPeerErrors).length>0?callback({listOfPeers:listOfPeers,retrievalErrors:listOfPeerErrors,connectionStats:listOfPeerStats},null):callback(null,{listOfPeers:listOfPeers,connectionStats:listOfPeerStats}))},statsFn=function(peerId){var retrieveFn=function(firstRetrieval,nextCb){return function(err,result){if(err)return log.error([peerId,"RTCStatsReport",null,"Retrieval failure ->"],error),listOfPeerErrors[peerId]=error,self._trigger("getConnectionStatusStateChange",self.GET_CONNECTION_STATUS_STATE.RETRIEVE_ERROR,peerId,null,error),checkCompletedFn(peerId),void(firstRetrieval&&delete self._peerStats[peerId]);firstRetrieval?nextCb():(listOfPeerStats[peerId]=result,self._trigger("getConnectionStatusStateChange",self.GET_CONNECTION_STATUS_STATE.RETRIEVE_SUCCESS,peerId,listOfPeerStats[peerId],null),checkCompletedFn(peerId))}};if(!self._peerStats[peerId])return self._peerStats[peerId]={},log.debug([peerId,"RTCStatsReport",null,"Retrieving first report to tabulate results"]),void self._retrieveStats(peerId,retrieveFn(!0,function(){self._retrieveStats(peerId,retrieveFn())}),!0);self._retrieveStats(peerId,retrieveFn())},i=0;i<listOfPeers.length;i++){var peerId=listOfPeers[i];self._trigger("getConnectionStatusStateChange",self.GET_CONNECTION_STATUS_STATE.RETRIEVING,peerId,null,null),self._peerConnections.hasOwnProperty(peerId)&&self._peerConnections[peerId]?statsFn(peerId):(listOfPeerErrors[peerId]=new Error("The peer connection object does not exists"),log.error([peerId,"RTCStatsReport",null,"Retrieval failure ->"],listOfPeerErrors[peerId]),self._trigger("getConnectionStatusStateChange",self.GET_CONNECTION_STATUS_STATE.RETRIEVE_ERROR,peerId,null,listOfPeerErrors[peerId]),checkCompletedFn(peerId))}},Skylink.prototype._retrieveStats=function(peerId,callback,beSilentOnLogs,isAutoBwStats){var self=this;if(beSilentOnLogs||log.debug([peerId,"RTCStatsReport",null,"Retrieivng connection status"]),"edge"===window.webrtcDetectedBrowser)return callback(new Error("Edge does not support stats"));if(!self._peerStats[peerId]&&!isAutoBwStats)return callback(new Error("No stats initiated yet."));var pc=self._peerConnections[peerId],result={raw:null,connection:{iceConnectionState:pc.iceConnectionState,iceGatheringState:pc.iceGatheringState,signalingState:pc.signalingState,remoteDescription:{type:pc.remoteDescription?pc.remoteDescription.type||null:null,sdp:pc.remoteDescription?pc.remoteDescription.sdp||null:null},localDescription:{type:pc.localDescription?pc.localDescription.type||null:null,sdp:pc.localDescription?pc.localDescription.sdp||null:null},candidates:clone(self._gatheredCandidates[peerId]||{sending:{host:[],srflx:[],relay:[]},receiving:{host:[],srflx:[],relay:[]}}),dataChannels:{},constraints:self._peerConnStatus[peerId]?self._peerConnStatus[peerId].constraints:null,optional:self._peerConnStatus[peerId]?self._peerConnStatus[peerId].optional:null,sdpConstraints:self._peerConnStatus[peerId]?self._peerConnStatus[peerId].sdpConstraints:null},audio:{sending:{ssrc:null,bytes:0,packets:0,packetsLost:0,rtt:0,jitter:0,jitterBufferMs:null,codec:self._getSDPSelectedCodec(peerId,pc.remoteDescription,"audio",beSilentOnLogs),nacks:null,inputLevel:null,echoReturnLoss:null,echoReturnLossEnhancement:null,totalBytes:0,totalPackets:0,totalPacketsLost:0,totalNacks:null},receiving:{ssrc:null,bytes:0,packets:0,packetsLost:0,packetsDiscarded:0,fractionLost:0,nacks:null,jitter:0,jitterBufferMs:null,codec:self._getSDPSelectedCodec(peerId,pc.remoteDescription,"audio",beSilentOnLogs),outputLevel:null,totalBytes:0,totalPackets:0,totalPacketsLost:0,totalNacks:null}},video:{sending:{ssrc:null,bytes:0,packets:0,packetsLost:0,rtt:0,jitter:0,jitterBufferMs:null,codec:self._getSDPSelectedCodec(peerId,pc.remoteDescription,"video",beSilentOnLogs),frameWidth:null,frameHeight:null,framesDecoded:null,framesCorrupted:null,framesDropped:null,framesPerSecond:null,framesInput:null,frames:null,frameRateEncoded:null,frameRate:null,frameRateInput:null,frameRateMean:null,frameRateStdDev:null,nacks:null,plis:null,firs:null,slis:null,qpSum:null,totalBytes:0,totalPackets:0,totalPacketsLost:0,totalNacks:null,totalPlis:null,totalFirs:null,totalSlis:null,totalFrames:null},receiving:{ssrc:null,bytes:0,packets:0,packetsDiscarded:0,packetsLost:0,fractionLost:0,jitter:0,jitterBufferMs:null,codec:self._getSDPSelectedCodec(peerId,pc.remoteDescription,"video",beSilentOnLogs),frameWidth:null,frameHeight:null,framesDecoded:null,framesCorrupted:null,framesPerSecond:null,framesDropped:null,framesOutput:null,frames:null,frameRateMean:null,frameRateStdDev:null,nacks:null,plis:null,firs:null,slis:null,e2eDelay:null,totalBytes:0,totalPackets:0,totalPacketsLost:0,totalNacks:null,totalPlis:null,totalFirs:null,totalSlis:null,totalFrames:null}},selectedCandidate:{local:{ipAddress:null,candidateType:null,portNumber:null,transport:null,turnMediaTransport:null},remote:{ipAddress:null,candidateType:null,portNumber:null,transport:null},consentResponses:{received:null,sent:null,totalReceived:null,totalSent:null},consentRequests:{received:null,sent:null,totalReceived:null,totalSent:null},responses:{received:null,sent:null,totalReceived:null,totalSent:null},requests:{received:null,sent:null,totalReceived:null,totalSent:null}},certificate:{local:self._getSDPFingerprint(peerId,pc.localDescription,beSilentOnLogs),remote:self._getSDPFingerprint(peerId,pc.remoteDescription,beSilentOnLogs),dtlsCipher:null,srtpCipher:null}};if(self._dataChannels[peerId])for(var channelProp in self._dataChannels[peerId])self._dataChannels[peerId].hasOwnProperty(channelProp)&&self._dataChannels[peerId][channelProp]&&(result.connection.dataChannels[self._dataChannels[peerId][channelProp].channel.label]={label:self._dataChannels[peerId][channelProp].channel.label,readyState:self._dataChannels[peerId][channelProp].channel.readyState,channelType:"main"===channelProp?self.DATA_CHANNEL_TYPE.MESSAGING:self.DATA_CHANNEL_TYPE.DATA,currentTransferId:self._dataChannels[peerId][channelProp].transferId||null,currentStreamId:self._dataChannels[peerId][channelProp].streamId||null});var loopFn=function(obj,fn){for(var prop in obj)obj.hasOwnProperty(prop)&&obj[prop]&&fn(obj[prop],prop)},formatCandidateFn=function(candidateDirType,candidate){result.selectedCandidate[candidateDirType].ipAddress=candidate.ipAddress,result.selectedCandidate[candidateDirType].candidateType=candidate.candidateType,result.selectedCandidate[candidateDirType].portNumber="number"!=typeof candidate.portNumber?parseInt(candidate.portNumber,10)||null:candidate.portNumber,result.selectedCandidate[candidateDirType].transport=candidate.transport};pc.getStats(null,function(stats){if(beSilentOnLogs||log.debug([peerId,"RTCStatsReport",null,"Retrieval success ->"],stats),isAutoBwStats?!self._peerStats[peerId]:!self._peerBandwidth[peerId])return void callback(new Error("Peer connection stats object is not defined.",null));if(result.raw=stats,"firefox"===window.webrtcDetectedBrowser)loopFn(stats,function(obj,prop){var dirType="";0===prop.indexOf("inbound_rtp")||0===prop.indexOf("outbound_rtp")?(dirType=0===prop.indexOf("inbound_rtp")?"receiving":"sending",isAutoBwStats?self._peerBandwidth[peerId][prop]||(self._peerBandwidth[peerId][prop]=obj):self._peerStats[peerId][prop]||(self._peerStats[peerId][prop]=obj),result[obj.mediaType][dirType].bytes=self._parseConnectionStats(isAutoBwStats?self._peerBandwidth[peerId][prop]:self._peerStats[peerId][prop],obj,"receiving"===dirType?"bytesReceived":"bytesSent"),result[obj.mediaType][dirType].totalBytes=parseInt(("receiving"===dirType?obj.bytesReceived:obj.bytesSent)||"0",10),result[obj.mediaType][dirType].packets=self._parseConnectionStats(isAutoBwStats?self._peerBandwidth[peerId][prop]:self._peerStats[peerId][prop],obj,"receiving"===dirType?"packetsReceived":"packetsSent"),result[obj.mediaType][dirType].totalPackets=parseInt(("receiving"===dirType?obj.packetsReceived:obj.packetsSent)||"0",10),result[obj.mediaType][dirType].ssrc=obj.ssrc,"video"===obj.mediaType&&(result.video[dirType].frameRateMean=obj.framerateMean||0,result.video[dirType].frameRateStdDev=obj.framerateStdDev||0,result.video[dirType].framesDropped="number"==typeof obj.framesDropped?obj.framesDropped:"number"==typeof obj.droppedFrames?obj.droppedFrames:null,result.video[dirType].framesCorrupted="number"==typeof obj.framesCorrupted?obj.framesCorrupted:null,result.video[dirType].framesPerSecond="number"==typeof obj.framesPerSecond?obj.framesPerSecond:null,"sending"===dirType?(result.video[dirType].framesEncoded="number"==typeof obj.framesEncoded?obj.framesEncoded:null,result.video[dirType].frames="number"==typeof obj.framesSent?obj.framesSent:null):(result.video[dirType].framesDecoded="number"==typeof obj.framesDecoded?obj.framesDecoded:null,result.video[dirType].frames="number"==typeof obj.framesReceived?obj.framesReceived:null)),"receiving"===dirType&&(obj.packetsDiscarded=("number"==typeof obj.packetsDiscarded?obj.packetsDiscarded:obj.discardedPackets)||0,obj.packetsLost="number"==typeof obj.packetsLost?obj.packetsLost:0,result[obj.mediaType].receiving.packetsLost=self._parseConnectionStats(isAutoBwStats?self._peerBandwidth[peerId][prop]:self._peerStats[peerId][prop],obj,"packetsLost"),result[obj.mediaType].receiving.packetsDiscarded=self._parseConnectionStats(isAutoBwStats?self._peerBandwidth[peerId][prop]:self._peerStats[peerId][prop],obj,"packetsDiscarded"),result[obj.mediaType].receiving.totalPacketsDiscarded=obj.packetsDiscarded,result[obj.mediaType].receiving.totalPacketsLost=obj.packetsLost),isAutoBwStats?self._peerBandwidth[peerId][prop]=obj:self._peerStats[peerId][prop]||(self._peerStats[peerId][prop]=obj)):0===prop.indexOf("inbound_rtcp")||0===prop.indexOf("outbound_rtcp")?(dirType=0===prop.indexOf("inbound_rtp")?"receiving":"sending",isAutoBwStats?self._peerBandwidth[peerId][prop]||(self._peerBandwidth[peerId][prop]=obj):self._peerStats[peerId][prop]||(self._peerStats[peerId][prop]=obj),"sending"===dirType?(result[obj.mediaType].sending.rtt=obj.mozRtt||0,result[obj.mediaType].sending.targetBitrate="number"==typeof obj.targetBitrate?obj.targetBitrate:0):result[obj.mediaType].receiving.jitter=obj.jitter||0,isAutoBwStats?self._peerBandwidth[peerId][prop]=obj:self._peerStats[peerId][prop]||(self._peerStats[peerId][prop]=obj)):obj.nominated&&obj.selected&&(formatCandidateFn("remote",stats[obj.remoteCandidateId]),formatCandidateFn("local",stats[obj.localCandidateId]))});else if("edge"===window.webrtcDetectedBrowser){var tracks=[];pc.getRemoteStreams().length>0&&(tracks=tracks.concat(pc.getRemoteStreams()[0].getTracks())),pc.getLocalStreams().length>0&&(tracks=tracks.concat(pc.getLocalStreams()[0].getTracks())),loopFn(tracks,function(track){loopFn(stats,function(obj,prop){if("track"===obj.type&&obj.trackIdentifier===track.id){var dirType=obj.remoteSource?"receiving":"sending",mediaType=track.kind;"audio"===mediaType?(result[mediaType][dirType]["sending"===dirType?"inputLevel":"outputLevel"]=obj.audioLevel,"sending"===dirType&&(result[mediaType][dirType].echoReturnLoss=obj.echoReturnLoss,result[mediaType][dirType].echoReturnLossEnhancement=obj.echoReturnLossEnhancement)):(result[mediaType][dirType].frames=self._parseConnectionStats(isAutoBwStats?self._peerBandwidth[peerId][prop]:self._peerStats[peerId][prop],obj,"sending"===dirType?obj.framesSent:obj.framesReceived),result[mediaType][dirType].framesDropped=obj.framesDropped,result[mediaType][dirType].framesDecoded=obj.framesDecoded,result[mediaType][dirType].framesCorrupted=obj.framesCorrupted,result[mediaType][dirType].framesPerSecond=obj.framesPerSecond,result[mediaType][dirType].frameHeight=obj.frameHeight||null,result[mediaType][dirType].frameWidth=obj.frameWidth||null,result[mediaType][dirType].totalFrames="sending"===dirType?obj.framesSent:obj.framesReceived),loopFn(stats,function(streamObj,subprop){streamObj.mediaTrackId===obj.id&&["outboundrtp","inboundrtp"].indexOf(streamObj.type)>-1&&(isAutoBwStats?self._peerBandwidth[peerId][subprop]||(self._peerBandwidth[peerId][subprop]=streamObj):self._peerStats[peerId][subprop]||(self._peerStats[peerId][subprop]=streamObj),result[mediaType][dirType].ssrc=parseInt(streamObj.ssrc||"0",10),result[mediaType][dirType].nacks=self._parseConnectionStats(isAutoBwStats?self._peerBandwidth[peerId][subprop]:self._peerStats[peerId][subprop],streamObj,"nackCount"),result[mediaType][dirType].totalNacks=streamObj.nackCount,"video"===mediaType&&(result[mediaType][dirType].firs=self._parseConnectionStats(isAutoBwStats?self._peerBandwidth[peerId][subprop]:self._peerStats[peerId][subprop],streamObj,"firCount"),result[mediaType][dirType].plis=self._parseConnectionStats(isAutoBwStats?self._peerBandwidth[peerId][subprop]:self._peerStats[peerId][subprop],streamObj,"pliCount"),result[mediaType][dirType].slis=self._parseConnectionStats(isAutoBwStats?self._peerBandwidth[peerId][subprop]:self._peerStats[peerId][subprop],streamObj,"sliCount"),result[mediaType][dirType].totalFirs=streamObj.firCount,result[mediaType][dirType].totalPlis=streamObj.plisCount,result[mediaType][dirType].totalSlis=streamObj.sliCount),result[mediaType][dirType].bytes=self._parseConnectionStats(isAutoBwStats?self._peerBandwidth[peerId][subprop]:self._peerStats[peerId][subprop],streamObj,"receiving"===dirType?"bytesReceived":"bytesSent"),result[mediaType][dirType].packets=self._parseConnectionStats(isAutoBwStats?self._peerBandwidth[peerId][subprop]:self._peerStats[peerId][subprop],streamObj,"receiving"===dirType?"packetsReceived":"packetsSent"),result[mediaType][dirType].totalBytes="receiving"===dirType?streamObj.bytesReceived:streamObj.bytesSent,result[mediaType][dirType].totalPackets="receiving"===dirType?streamObj.packetsReceived:streamObj.packetsSent,"receiving"===dirType?(result[mediaType][dirType].jitter=streamObj.jitter||0,result[mediaType].receiving.fractionLost=streamObj.fractionLost,result[mediaType][dirType].packetsLost=self._parseConnectionStats(isAutoBwStats?self._peerBandwidth[peerId][subprop]:self._peerStats[peerId][subprop],streamObj,"packetsLost"),result[mediaType][dirType].packetsDiscarded=self._parseConnectionStats(isAutoBwStats?self._peerBandwidth[peerId][subprop]:self._peerStats[peerId][subprop],streamObj,"packetsDiscarded"),result[mediaType][dirType].totalPacketsLost=streamObj.packetsLost,result[mediaType][dirType].totalPacketsDiscarded=streamObj.packetsDiscarded||0):(result[mediaType].sending.rtt=streamObj.roundTripTime||0,result[mediaType].sending.targetBitrate=streamObj.targetBitrate||0),result[mediaType][dirType].codec&&streamObj.codecId&&(result[mediaType][dirType].codec.name=streamObj.codecId))})}})})}else{var reportedCandidate=!1,reportedCertificate=!1;loopFn(stats,function(obj,prop){if(0===prop.indexOf("ssrc_")){var dirType=prop.indexOf("_recv")>0?"receiving":"sending";obj.mediaType||(obj.mediaType=obj.hasOwnProperty("audioOutputLevel")||obj.hasOwnProperty("audioInputLevel")||obj.hasOwnProperty("googEchoCancellationReturnLoss")||obj.hasOwnProperty("googEchoCancellation")?"audio":"video"),isAutoBwStats?self._peerBandwidth[peerId][prop]||(self._peerBandwidth[peerId][prop]=obj):self._peerStats[peerId][prop]||(self._peerStats[peerId][prop]=obj);try{if("video"===obj.mediaType&&"receiving"===dirType){var captureStartNtpTimeMs=parseInt(obj.googCaptureStartNtpTimeMs||"0",10),streamId=self._useSafariWebRTC?pc.remoteStreamId:pc.getRemoteStreams().length>0?pc.getRemoteStreams()[0].id||pc.getRemoteStreams()[0].label:null;if(captureStartNtpTimeMs>0&&streamId&&document&&"function"==typeof document.getElementsByTagName){var elements=[];self._isUsingPlugin?elements=document.getElementsByTagName("object"):(elements=document.getElementsByTagName("video"),0===elements.length&&(elements=document.getElementsByTagName("audio")));for(var e=0;e<elements.length;e++){var videoElmStreamId=null;if(self._isUsingPlugin){if(!(elements[e].children&&"object"==typeof elements[e].children&&"number"==typeof elements[e].children.length&&elements[e].children.length>0))break;for(var ec=0;ec<elements[e].children.length;ec++)if("streamId"===elements[e].children[ec].name){videoElmStreamId=elements[e].children[ec].value||null;break}}else videoElmStreamId=elements[e].srcObject?elements[e].srcObject.id||elements[e].srcObject.label:null;if(videoElmStreamId&&videoElmStreamId===streamId){result[obj.mediaType][dirType].e2eDelay=(new Date).getTime()+22089888e5-captureStartNtpTimeMs-1e3*elements[e].currentTime;break}}}}}catch(error){beSilentOnLogs||log.warn([peerId,"RTCStatsReport",null,"Failed retrieving e2e delay ->"],error)}if(result[obj.mediaType][dirType].ssrc=parseInt(obj.ssrc||"0",10),result[obj.mediaType][dirType].bytes=self._parseConnectionStats(isAutoBwStats?self._peerBandwidth[peerId][prop]:self._peerStats[peerId][prop],obj,"receiving"===dirType?"bytesReceived":"bytesSent"),result[obj.mediaType][dirType].packets=self._parseConnectionStats(isAutoBwStats?self._peerBandwidth[peerId][prop]:self._peerStats[peerId][prop],obj,"receiving"===dirType?"packetsReceived":"packetsSent"),result[obj.mediaType][dirType].nacks=self._parseConnectionStats(isAutoBwStats?self._peerBandwidth[peerId][prop]:self._peerStats[peerId][prop],obj,"receiving"===dirType?"googNacksReceived":"googNacksSent"),result[obj.mediaType][dirType].totalPackets=parseInt(("receiving"===dirType?obj.packetsReceived:obj.packetsSent)||"0",10),result[obj.mediaType][dirType].totalBytes=parseInt(("receiving"===dirType?obj.bytesReceived:obj.bytesSent)||"0",10),result[obj.mediaType][dirType].totalNacks=parseInt(("receiving"===dirType?obj.googNacksReceived:obj.googNacksSent)||"0",10),result[obj.mediaType][dirType].codec&&(obj.googCodecName&&"unknown"!==obj.googCodecName&&(result[obj.mediaType][dirType].codec.name=obj.googCodecName),obj.codecImplementationName&&"unknown"!==obj.codecImplementationName&&(result[obj.mediaType][dirType].codec.implementation=obj.codecImplementationName)),"sending"===dirType?(result[obj.mediaType].sending.rtt=parseFloat(obj.googRtt||"0",10),result[obj.mediaType].sending.targetBitrate=obj.targetBitrate?parseInt(obj.targetBitrate,10):null):(result[obj.mediaType].receiving.packetsLost=self._parseConnectionStats(isAutoBwStats?self._peerBandwidth[peerId][prop]:self._peerStats[peerId][prop],obj,"packetsLost"),result[obj.mediaType].receiving.packetsDiscarded=self._parseConnectionStats(isAutoBwStats?self._peerBandwidth[peerId][prop]:self._peerStats[peerId][prop],obj,"packetsDiscarded"),result[obj.mediaType].receiving.jitter=parseFloat(obj.googJitterReceived||"0",10),result[obj.mediaType].receiving.jitterBufferMs=obj.googJitterBufferMs?parseFloat(obj.googJitterBufferMs||"0",10):null,result[obj.mediaType].receiving.totalPacketsLost=parseInt(obj.packetsLost||"0",10),result[obj.mediaType].receiving.totalPacketsDiscarded=parseInt(obj.packetsDiscarded||"0",10)),"video"===obj.mediaType?(result.video[dirType].framesCorrupted=obj.framesCorrupted?parseInt(obj.framesCorrupted,10):null,result.video[dirType].framesPerSecond=obj.framesPerSecond?parseFloat(obj.framesPerSecond,10):null,result.video[dirType].framesDropped=obj.framesDropped?parseInt(obj.framesDropped,10):null,"sending"===dirType?(result.video[dirType].frameWidth=obj.googFrameWidthSent?parseInt(obj.googFrameWidthSent,10):null,result.video[dirType].frameHeight=obj.googFrameHeightSent?parseInt(obj.googFrameHeightSent,10):null,result.video[dirType].plis=obj.googPlisSent?self._parseConnectionStats(isAutoBwStats?self._peerBandwidth[peerId][prop]:self._peerStats[peerId][prop],obj,"googPlisSent"):null,result.video[dirType].firs=obj.googFirsSent?self._parseConnectionStats(isAutoBwStats?self._peerBandwidth[peerId][prop]:self._peerStats[peerId][prop],obj,"googFirsSent"):null,result[obj.mediaType][dirType].totalPlis=obj.googPlisSent?parseInt(obj.googPlisSent,10):null,result[obj.mediaType][dirType].totalFirs=obj.googFirsSent?parseInt(obj.googFirsSent,10):null,result.video[dirType].framesEncoded=obj.framesEncoded?parseInt(obj.framesEncoded,10):null,result.video[dirType].frameRateEncoded=obj.googFrameRateEncoded?parseInt(obj.googFrameRateEncoded,10):null,result.video[dirType].frameRateInput=obj.googFrameRateInput?parseInt(obj.googFrameRateInput,10):null,result.video[dirType].frameRate=obj.googFrameRateSent?parseInt(obj.googFrameRateSent,10):null,result.video[dirType].qpSum=obj.qpSum?parseInt(obj.qpSum,10):null,result.video[dirType].frames=obj.framesSent?self._parseConnectionStats(self._peerStats[peerId][prop],obj,"framesSent"):null,result.video[dirType].totalFrames=obj.framesSent?parseInt(obj.framesSent,10):null):(result.video[dirType].frameWidth=obj.googFrameWidthReceived?parseInt(obj.googFrameWidthReceived,10):null,result.video[dirType].frameHeight=obj.googFrameHeightReceived?parseInt(obj.googFrameHeightReceived,10):null,result.video[dirType].plis=obj.googPlisReceived?self._parseConnectionStats(isAutoBwStats?self._peerBandwidth[peerId][prop]:self._peerStats[peerId][prop],obj,"googPlisReceived"):null,result.video[dirType].firs=obj.googFirsReceived?self._parseConnectionStats(isAutoBwStats?self._peerBandwidth[peerId][prop]:self._peerStats[peerId][prop],obj,"googFirsReceived"):null,result[obj.mediaType][dirType].totalPlis=obj.googPlisReceived?parseInt(obj.googPlisReceived,10):null,result[obj.mediaType][dirType].totalFirs=obj.googFirsReceived?parseInt(obj.googFirsReceived,10):null,result.video[dirType].framesDecoded=obj.framesDecoded?parseInt(obj.framesDecoded,10):null,result.video[dirType].frameRateDecoded=obj.googFrameRateDecoded?parseInt(obj.googFrameRateDecoded,10):null,result.video[dirType].frameRateOutput=obj.googFrameRateOutput?parseInt(obj.googFrameRateOutput,10):null,result.video[dirType].frameRate=obj.googFrameRateReceived?parseInt(obj.googFrameRateReceived,10):null,result.video[dirType].frames=obj.framesReceived?self._parseConnectionStats(isAutoBwStats?self._peerBandwidth[peerId][prop]:self._peerStats[peerId][prop],obj,"framesReceived"):null,result.video[dirType].totalFrames=obj.framesReceived?parseInt(obj.framesReceived,10):null)):"receiving"===dirType?result.audio[dirType].outputLevel=parseFloat(obj.audioOutputLevel||"0",10):(result.audio[dirType].inputLevel=parseFloat(obj.audioInputLevel||"0",10),result.audio[dirType].echoReturnLoss=parseFloat(obj.googEchoCancellationReturnLoss||"0",10),result.audio[dirType].echoReturnLossEnhancement=parseFloat(obj.googEchoCancellationReturnLossEnhancement||"0",10)),isAutoBwStats?self._peerBandwidth[peerId][prop]=obj:self._peerStats[peerId][prop]||(self._peerStats[peerId][prop]=obj),reportedCandidate||loopFn(stats,function(canObj,canProp){reportedCandidate||0!==canProp.indexOf("Conn-")||obj.transportId===canObj.googChannelId&&(isAutoBwStats?self._peerBandwidth[peerId][canProp]||(self._peerBandwidth[peerId][canProp]=canObj):self._peerStats[peerId][canProp]||(self._peerStats[peerId][canProp]=canObj),formatCandidateFn("local",stats[canObj.localCandidateId]),formatCandidateFn("remote",stats[canObj.remoteCandidateId]),result.selectedCandidate.writable=canObj.googWritable?"true"===canObj.googWritable:null,result.selectedCandidate.readable=canObj.googReadable?"true"===canObj.googReadable:null,result.selectedCandidate.rtt=canObj.googRtt?self._parseConnectionStats(isAutoBwStats?self._peerBandwidth[peerId][canProp]:self._peerStats[peerId][canProp],canObj,"googRtt"):null,result.selectedCandidate.totalRtt=canObj.googRtt?parseInt(canObj.googRtt,10):null,result.selectedCandidate.requests={received:canObj.requestsReceived?self._parseConnectionStats(isAutoBwStats?self._peerBandwidth[peerId][canProp]:self._peerStats[peerId][canProp],canObj,"requestsReceived"):null,sent:canObj.requestsSent?self._parseConnectionStats(isAutoBwStats?self._peerBandwidth[peerId][canProp]:self._peerStats[peerId][canProp],canObj,"requestsSent"):null,totalReceived:canObj.requestsReceived?parseInt(canObj.requestsReceived,10):null,totalSent:canObj.requestsSent?parseInt(canObj.requestsSent,10):null},result.selectedCandidate.responses={received:canObj.responsesReceived?self._parseConnectionStats(isAutoBwStats?self._peerBandwidth[peerId][canProp]:self._peerStats[peerId][canProp],canObj,"responsesReceived"):null,sent:canObj.responsesSent?self._parseConnectionStats(isAutoBwStats?self._peerBandwidth[peerId][canProp]:self._peerStats[peerId][canProp],canObj,"responsesSent"):null,totalReceived:canObj.responsesReceived?parseInt(canObj.responsesReceived,10):null,totalSent:canObj.responsesSent?parseInt(canObj.responsesSent,10):null},result.selectedCandidate.consentRequests={received:canObj.consentRequestsReceived?self._parseConnectionStats(isAutoBwStats?self._peerBandwidth[peerId][canProp]:self._peerStats[peerId][canProp],canObj,"consentRequestsReceived"):null,sent:canObj.consentRequestsSent?self._parseConnectionStats(isAutoBwStats?self._peerBandwidth[peerId][canProp]:self._peerStats[peerId][canProp],canObj,"consentRequestsSent"):null,totalReceived:canObj.consentRequestsReceived?parseInt(canObj.consentRequestsReceived,10):null,totalSent:canObj.consentRequestsSent?parseInt(canObj.consentRequestsSent,10):null},result.selectedCandidate.consentResponses={received:canObj.consentResponsesReceived?self._parseConnectionStats(isAutoBwStats?self._peerBandwidth[peerId][canProp]:self._peerStats[peerId][canProp],canObj,"consentResponsesReceived"):null,sent:canObj.consentResponsesSent?self._parseConnectionStats(isAutoBwStats?self._peerBandwidth[peerId][canProp]:self._peerStats[peerId][canProp],canObj,"consentResponsesSent"):null,totalReceived:canObj.consentResponsesReceived?parseInt(canObj.consentResponsesReceived,10):null,totalSent:canObj.consentResponsesSent?parseInt(canObj.consentResponsesSent,10):null},isAutoBwStats?self._peerBandwidth[peerId][canProp]||(self._peerBandwidth[peerId][canProp]=canObj):self._peerStats[peerId][canProp]||(self._peerStats[peerId][canProp]=canObj),reportedCandidate=!0)}),!reportedCertificate&&stats[obj.transportId]){result.certificate.srtpCipher=stats[obj.transportId].srtpCipher||null,result.certificate.dtlsCipher=stats[obj.transportId].dtlsCipher||null;var localCertId=stats[obj.transportId].localCertificateId,remoteCertId=stats[obj.transportId].remoteCertificateId;localCertId&&stats[localCertId]&&(result.certificate.local.derBase64=stats[localCertId].googDerBase64||null,stats[localCertId].googFingerprint&&(result.certificate.local.fingerprint=stats[localCertId].googFingerprint),stats[localCertId].googFingerprintAlgorithm&&(result.certificate.local.fingerprintAlgorithm=stats[localCertId].googFingerprintAlgorithm)),remoteCertId&&stats[remoteCertId]&&(result.certificate.remote.derBase64=stats[remoteCertId].googDerBase64||null,stats[remoteCertId].googFingerprint&&(result.certificate.remote.fingerprint=stats[remoteCertId].googFingerprint),stats[remoteCertId].googFingerprintAlgorithm&&(result.certificate.remote.fingerprintAlgorithm=stats[remoteCertId].googFingerprintAlgorithm)),reportedCertificate=!0}}})}0===(result.selectedCandidate.local.candidateType||"").indexOf("relay")?(result.selectedCandidate.local.turnMediaTransport="UDP",self._forceTURNSSL&&"firefox"!==window.webrtcDetectedBrowser?result.selectedCandidate.local.turnMediaTransport="TCP/TLS":(self._TURNTransport===self.TURN_TRANSPORT.TCP||self._forceTURNSSL)&&self._room&&self._room.connection&&self._room.connection.peerConfig&&Array.isArray(self._room.connection.peerConfig.iceServers)&&self._room.connection.peerConfig.iceServers[0]&&self._room.connection.peerConfig.iceServers[0].urls[0]&&self._room.connection.peerConfig.iceServers[0].urls[0].indexOf("?transport=tcp")>0&&(result.selectedCandidate.local.turnMediaTransport="TCP")):result.selectedCandidate.local.turnMediaTransport=null,callback(null,result)},function(error){beSilentOnLogs||log.error([peerId,"RTCStatsReport",null,"Failed retrieving stats ->"],error),callback(error,null)})},Skylink.prototype._addPeer=function(targetMid,cert,peerBrowser,receiveOnly,isSS){var self=this;return self._peerConnections[targetMid]?void log.error([targetMid,null,null,"Connection to peer has already been made"]):(self._peerConnStatus[targetMid]={connected:!1,init:!1},log.log([targetMid,null,null,"Starting the connection to peer. Options provided:"],{peerBrowser:peerBrowser,receiveOnly:receiveOnly,enableDataChannel:self._enableDataChannel}),log.info("Adding peer",isSS),self._peerConnections[targetMid]=self._createPeerConnection(targetMid,!!isSS,cert),self._peerConnections[targetMid]?(self._peerConnStatus[targetMid].init=!0,void(self._peerConnections[targetMid].hasScreen=!!isSS)):void log.error([targetMid,null,null,"Failed creating the connection to peer."]))},Skylink.prototype._restartPeerConnection=function(peerId,doIceRestart,bwOptions,callback){var self=this;if(!self._peerConnections[peerId])return void log.error([peerId,null,null,"Peer does not have an existing connection. Unable to restart"]);var pc=self._peerConnections[peerId],agent=(self.getPeerInfo(peerId)||{}).agent||{};if(self._isLowerThanVersion(agent.SMProtocolVersion||"","0.1.2")){var notSupportedError=new Error("Failed restarting with other agents connecting from other SDKs as re-negotiation is not supported by other SDKs");return log.warn([peerId,"RTCPeerConnection",null,"Ignoring restart request as agent's SDK does not support it"],notSupportedError),void("function"==typeof callback&&(log.debug([peerId,"RTCPeerConnection",null,"Firing restart failure callback"]),callback(notSupportedError)))}if(pc.signalingState===self.PEER_CONNECTION_STATE.STABLE&&self._peerConnections[peerId]){log.log([peerId,null,null,"Sending restart message to signaling server ->"],{iceRestart:doIceRestart,options:bwOptions}),self._peerCustomConfigs[peerId]=self._peerCustomConfigs[peerId]||{},self._peerCustomConfigs[peerId].bandwidth=self._peerCustomConfigs[peerId].bandwidth||{},self._peerCustomConfigs[peerId].googleXBandwidth=self._peerCustomConfigs[peerId].googleXBandwidth||{},
bwOptions.bandwidth&&"object"==typeof bwOptions.bandwidth&&("number"==typeof bwOptions.bandwidth.audio&&(self._peerCustomConfigs[peerId].bandwidth.audio=bwOptions.bandwidth.audio),"number"==typeof bwOptions.bandwidth.video&&(self._peerCustomConfigs[peerId].bandwidth.video=bwOptions.bandwidth.video),"number"==typeof bwOptions.bandwidth.data&&(self._peerCustomConfigs[peerId].bandwidth.data=bwOptions.bandwidth.data)),bwOptions.googleXBandwidth&&"object"==typeof bwOptions.googleXBandwidth&&("number"==typeof bwOptions.googleXBandwidth.min&&(self._peerCustomConfigs[peerId].googleXBandwidth.min=bwOptions.googleXBandwidth.min),"number"==typeof bwOptions.googleXBandwidth.max&&(self._peerCustomConfigs[peerId].googleXBandwidth.max=bwOptions.googleXBandwidth.max));var restartMsg={type:self._SIG_MESSAGE_TYPE.RESTART,mid:self._user.sid,rid:self._room.id,agent:window.webrtcDetectedBrowser,version:(window.webrtcDetectedVersion||0).toString(),os:window.navigator.platform,userInfo:self._getUserInfo(peerId),target:peerId,weight:self._peerPriorityWeight,receiveOnly:self.getPeerInfo().config.receiveOnly,enableIceTrickle:self._enableIceTrickle,enableDataChannel:self._enableDataChannel,enableIceRestart:self._enableIceRestart,doIceRestart:!0===doIceRestart&&self._enableIceRestart&&self._peerInformations[peerId]&&self._peerInformations[peerId].config.enableIceRestart,isRestartResend:!1,temasysPluginVersion:AdapterJS.WebRTCPlugin.plugin?AdapterJS.WebRTCPlugin.plugin.VERSION:null,SMProtocolVersion:self.SM_PROTOCOL_VERSION,DTProtocolVersion:self.DT_PROTOCOL_VERSION};self._publishOnly&&(restartMsg.publishOnly={type:self._streams.screenshare&&self._streams.screenshare.stream?"screenshare":"video"}),self._parentId&&(restartMsg.parentId=self._parentId),self._peerEndOfCandidatesCounter[peerId]=self._peerEndOfCandidatesCounter[peerId]||{},self._peerEndOfCandidatesCounter[peerId].len=0,self._sendChannelMessage(restartMsg),self._trigger("peerRestart",peerId,self.getPeerInfo(peerId),!0,!0===doIceRestart),"function"==typeof callback&&(log.debug([peerId,"RTCPeerConnection",null,"Firing restart callback"]),callback(null))}else if(pc.signalingState===self.PEER_CONNECTION_STATE.HAVE_LOCAL_OFFER){var hasLocalDescription=pc.localDescription&&pc.localDescription.sdp;if(hasLocalDescription)self._sendChannelMessage({type:pc.localDescription.type,sdp:pc.localDescription.sdp,mid:self._user.sid,target:peerId,rid:self._room.id,restart:!0});else{var noLocalDescriptionError="Failed re-sending localDescription as there is no localDescription set to connection. There could be a handshaking step error";log.error([peerId,"RTCPeerConnection",null,noLocalDescriptionError],{localDescription:pc.localDescription,remoteDescription:pc.remoteDescription}),"function"==typeof callback&&(log.debug([peerId,"RTCPeerConnection",null,"Firing restart failure callback"]),callback(new Error(noLocalDescriptionError)))}}else{var unableToRestartError="Failed restarting as peer connection state is "+pc.signalingState;log.warn([peerId,"RTCPeerConnection",null,unableToRestartError]),"function"==typeof callback&&(log.debug([peerId,"RTCPeerConnection",null,"Firing restart failure callback"]),callback(new Error(unableToRestartError)))}},Skylink.prototype._removePeer=function(peerId){if(!this._peerConnections[peerId]&&!this._peerInformations[peerId])return void log.debug([peerId,"RTCPeerConnection",null,"Dropping the hangup from Peer as not connected to Peer at all."]);var peerInfo=clone(this.getPeerInfo(peerId))||{userData:"",settings:{audio:!1,video:!1,data:!1},mediaStatus:{audioMuted:!0,videoMuted:!0},agent:{name:"unknown",version:0,os:"",pluginVersion:null},config:{enableDataChannel:!0,enableIceRestart:!1,enableIceTrickle:!0,priorityWeight:0,publishOnly:!1,receiveOnly:!0},parentId:null,room:clone(this._selectedRoom)};"MCU"!==peerId?this._trigger("peerLeft",peerId,peerInfo,!1):(this._hasMCU=!1,log.log([peerId,null,null,"MCU has stopped listening and left"]),this._trigger("serverPeerLeft",peerId,this.SERVER_PEER_TYPE.MCU)),this._peerConnections[peerId]&&(this._peerConnections[peerId].signalingState!==this.PEER_CONNECTION_STATE.CLOSED&&this._peerConnections[peerId].close(),"MCU"!==peerId&&this._handleEndedStreams(peerId),delete this._peerConnections[peerId]),this._peerInformations[peerId]&&delete this._peerInformations[peerId],this._peerMessagesStamps[peerId]&&delete this._peerMessagesStamps[peerId],this._streamsSession[peerId]&&delete this._streamsSession[peerId],this._peerEndOfCandidatesCounter[peerId]&&delete this._peerEndOfCandidatesCounter[peerId],this._peerCandidatesQueue[peerId]&&delete this._peerCandidatesQueue[peerId],this._sdpSessions[peerId]&&delete this._sdpSessions[peerId],this._peerStats[peerId]&&delete this._peerStats[peerId],this._peerBandwidth[peerId]&&delete this._peerBandwidth[peerId],this._gatheredCandidates[peerId]&&delete this._gatheredCandidates[peerId],this._peerCustomConfigs[peerId]&&delete this._peerCustomConfigs[peerId],this._peerConnStatus[peerId]&&delete this._peerConnStatus[peerId],this._dataChannels[peerId]&&this._closeDataChannel(peerId),log.log([peerId,"RTCPeerConnection",null,"Successfully removed peer"])},Skylink.prototype._createPeerConnection=function(targetMid,isScreenSharing,cert){var pc,self=this;if(self._inRoom&&self._room&&self._room.connection&&self._room.connection.peerConfig&&Array.isArray(self._room.connection.peerConfig.iceServers)){var constraints={iceServers:self._room.connection.peerConfig.iceServers,iceTransportPolicy:self._filterCandidatesType.host&&self._filterCandidatesType.srflx&&!self._filterCandidatesType.relay?"relay":"all",bundlePolicy:self._peerConnectionConfig.bundlePolicy===self.BUNDLE_POLICY.NONE?self.BUNDLE_POLICY.BALANCED:self._peerConnectionConfig.bundlePolicy,rtcpMuxPolicy:self._peerConnectionConfig.rtcpMuxPolicy,iceCandidatePoolSize:self._peerConnectionConfig.iceCandidatePoolSize},optional={optional:[{DtlsSrtpKeyAgreement:!0},{googIPv6:!0}]};cert&&(constraints.certificates=[cert]),self._peerConnStatus[targetMid]&&(self._peerConnStatus[targetMid].constraints=constraints,self._peerConnStatus[targetMid].optional=optional);try{log.debug([targetMid,"RTCPeerConnection",null,"Creating peer connection ->"],{constraints:constraints,optional:optional}),pc=new(self._useEdgeWebRTC&&window.msRTCPeerConnection?window.msRTCPeerConnection:window.RTCPeerConnection)(constraints,optional)}catch(error){return log.error([targetMid,null,null,"Failed creating peer connection:"],error),self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ERROR,targetMid,error),null}pc.setOffer="",pc.setAnswer="",pc.hasStream=!1,pc.hasScreen=!!isScreenSharing,pc.hasMainChannel=!1,pc.firefoxStreamId="",pc.processingLocalSDP=!1,pc.processingRemoteSDP=!1,pc.gathered=!1,pc.gathering=!1,pc.localStreamId=null,pc.remoteStreamId=null,pc.remoteStream=null,pc.localStream=null,pc.remoteStreamTrigger=!1,self._gatheredCandidates[targetMid]={sending:{host:[],srflx:[],relay:[]},receiving:{host:[],srflx:[],relay:[]}},self._streamsSession[targetMid]=self._streamsSession[targetMid]||{},self._peerEndOfCandidatesCounter[targetMid]=self._peerEndOfCandidatesCounter[targetMid]||{},self._sdpSessions[targetMid]={local:{},remote:{}},self._peerBandwidth[targetMid]={};var bandwidth=null;return pc.ondatachannel=function(event){var dc=event.channel||event;if(log.debug([targetMid,"RTCDataChannel",dc.label,"Received datachannel ->"],dc),self._enableDataChannel&&self._peerInformations[targetMid]&&self._peerInformations[targetMid].config.enableDataChannel){self.DATA_CHANNEL_TYPE.DATA,dc.label;pc.hasMainChannel||(self.DATA_CHANNEL_TYPE.MESSAGING,"main",pc.hasMainChannel=!0),self._createDataChannel(targetMid,dc)}else log.warn([targetMid,"RTCDataChannel",dc.label,"Not adding datachannel as enable datachannel is set to false"])},self._useSafariWebRTC?pc.ontrack=function(event){if(self._peerConnections[targetMid]){var track=event.track;if("MCU"===targetMid)return void log.warn([targetMid,"MediaStream",pc.remoteStreamId,"Ignoring received remote track from MCU ->"],track);if(!self._sdpSettings.direction.audio.receive&&!self._sdpSettings.direction.video.receive)return void log.warn([targetMid,"MediaStream",pc.remoteStreamId,"Ignoring received empty remote track ->"],track);if(pc.remoteStream){pc.hasStream=!0,pc.remoteStream.addTrack(track);var peerSettings=clone(self.getPeerInfo(targetMid).settings);self._streamsSession[targetMid][streamId]=self._streamsSession[targetMid][streamId]||{},self._streamsSession[targetMid][streamId][track.kind]=peerSettings[track.kind],"video"===track.kind&&(pc.hasScreen=!(!peerSettings.video||"object"!=typeof peerSettings.video||!peerSettings.video.screenshare))}}}:pc.onaddstream=function(event){if(self._peerConnections[targetMid]){var stream=event.stream||event,streamId=stream.id||stream.label;if("MCU"===targetMid)return void log.warn([targetMid,"MediaStream",streamId,"Ignoring received remote stream from MCU ->"],stream);if(!self._sdpSettings.direction.audio.receive&&!self._sdpSettings.direction.video.receive)return void log.warn([targetMid,"MediaStream",streamId,"Ignoring received empty remote stream ->"],stream);if(!self._hasMCU&&"firefox"===window.webrtcDetectedBrowser&&pc.getRemoteStreams().length>1&&pc.remoteDescription&&pc.remoteDescription.sdp&&-1===pc.remoteDescription.sdp.indexOf(" msid:"+streamId+" "))return void log.warn([targetMid,"MediaStream",streamId,"Ignoring received empty remote stream ->"],stream);var peerSettings=clone(self.getPeerInfo(targetMid).settings),hasScreenshare=peerSettings.video&&"object"==typeof peerSettings.video&&!!peerSettings.video.screenshare;pc.hasStream=!0,pc.hasScreen=!!hasScreenshare,self._streamsSession[targetMid][streamId]=peerSettings,self._onRemoteStreamAdded(targetMid,stream,!!hasScreenshare)}},pc.onicecandidate=function(event){self._onIceCandidate(targetMid,event.candidate||event)},pc.oniceconnectionstatechange=function(evt){var iceConnectionState=pc.iceConnectionState;if(log.debug([targetMid,"RTCIceConnectionState",null,"Ice connection state changed ->"],iceConnectionState),"edge"===window.webrtcDetectedBrowser&&("connecting"===iceConnectionState?iceConnectionState=self.ICE_CONNECTION_STATE.CHECKING:"new"===iceConnectionState&&(iceConnectionState=self.ICE_CONNECTION_STATE.FAILED)),self._trigger("iceConnectionState",iceConnectionState,targetMid),iceConnectionState===self.ICE_CONNECTION_STATE.FAILED&&self._enableIceTrickle&&self._trigger("iceConnectionState",self.ICE_CONNECTION_STATE.TRICKLE_FAILED,targetMid),self._peerConnStatus[targetMid]&&(self._peerConnStatus[targetMid].connected=[self.ICE_CONNECTION_STATE.COMPLETED,self.ICE_CONNECTION_STATE.CONNECTED].indexOf(iceConnectionState)>-1),!self._hasMCU&&[self.ICE_CONNECTION_STATE.CONNECTED,self.ICE_CONNECTION_STATE.COMPLETED].indexOf(iceConnectionState)>-1&&self._bandwidthAdjuster&&!bandwidth&&"edge"!==window.webrtcDetectedBrowser&&"edge"!==(((self._peerInformations[targetMid]||{}).agent||{}).name||"edge")){var currentBlock=0,formatTotalFn=function(arr){for(var total=0,i=0;i<arr.length;i++)total+=arr[i];return total/arr.length};bandwidth={audio:{send:[],recv:[]},video:{send:[],recv:[]}};var pullInterval=setInterval(function(){if(!self._peerConnections[targetMid]||self._peerConnections[targetMid].signalingState===self.PEER_CONNECTION_STATE.CLOSED||!self._bandwidthAdjuster||!self._peerBandwidth[targetMid])return void clearInterval(pullInterval);self._retrieveStats(targetMid,function(err,stats){if(!self._peerConnections[targetMid]||self._peerConnections[targetMid].signalingState===self.PEER_CONNECTION_STATE.CLOSED||!self._bandwidthAdjuster)return void clearInterval(pullInterval);if(err?(bandwidth.audio.send.push(0),bandwidth.audio.recv.push(0),bandwidth.video.send.push(0),bandwidth.video.recv.push(0)):(bandwidth.audio.send.push(8*stats.audio.sending.bytes),bandwidth.audio.recv.push(8*stats.audio.receiving.bytes),bandwidth.video.send.push(8*stats.video.sending.bytes),bandwidth.video.recv.push(8*stats.video.receiving.bytes)),++currentBlock===self._bandwidthAdjuster.interval){currentBlock=0;var totalAudioBw=formatTotalFn(bandwidth.audio.send),totalVideoBw=formatTotalFn(bandwidth.video.send);self._bandwidthAdjuster.useUploadBwOnly||(totalAudioBw+=formatTotalFn(bandwidth.audio.recv),totalVideoBw+=formatTotalFn(bandwidth.video.recv),totalAudioBw/=2,totalVideoBw/=2),totalAudioBw=parseInt(totalAudioBw*(self._bandwidthAdjuster.limitAtPercentage/100)/1e3,10),totalVideoBw=parseInt(totalVideoBw*(self._bandwidthAdjuster.limitAtPercentage/100)/1e3,10),bandwidth={audio:{send:[],recv:[]},video:{send:[],recv:[]}},self.refreshConnection(targetMid,{bandwidth:{audio:totalAudioBw,video:totalVideoBw}})}},!0,!0)},1e3)}},pc.onsignalingstatechange=function(){log.debug([targetMid,"RTCSignalingState",null,"Peer connection state changed ->"],pc.signalingState),self._trigger("peerConnectionState",pc.signalingState,targetMid)},pc.onicegatheringstatechange=function(){log.log([targetMid,"RTCIceGatheringState",null,"Ice gathering state changed ->"],pc.iceGatheringState),self._trigger("candidateGenerationState",pc.iceGatheringState,targetMid)},"firefox"===window.webrtcDetectedBrowser&&(pc.removeStream=function(stream){for(var senders=pc.getSenders(),s=0;s<senders.length;s++)for(var tracks=stream.getTracks(),t=0;t<tracks.length;t++)tracks[t]===senders[s].track&&pc.removeTrack(senders[s])}),pc}},Skylink.prototype._restartMCUConnection=function(callback,doIceRestart,bwOptions){var self=this,listOfPeers=Object.keys(self._peerConnections),listOfPeerRestartErrors={},sendRestartMsgFn=function(peerId){var restartMsg={type:self._SIG_MESSAGE_TYPE.RESTART,mid:self._user.sid,rid:self._room.id,agent:window.webrtcDetectedBrowser,version:(window.webrtcDetectedVersion||0).toString(),os:window.navigator.platform,userInfo:self._getUserInfo(peerId),target:peerId,weight:self._peerPriorityWeight,receiveOnly:self.getPeerInfo().config.receiveOnly,enableIceTrickle:self._enableIceTrickle,enableDataChannel:self._enableDataChannel,enableIceRestart:self._enableIceRestart,doIceRestart:self._mcuUseRenegoRestart&&!0===doIceRestart&&self._enableIceRestart&&self._peerInformations[peerId]&&self._peerInformations[peerId].config.enableIceRestart,isRestartResend:!1,temasysPluginVersion:AdapterJS.WebRTCPlugin.plugin?AdapterJS.WebRTCPlugin.plugin.VERSION:null,SMProtocolVersion:self.SM_PROTOCOL_VERSION,DTProtocolVersion:self.DT_PROTOCOL_VERSION};self._publishOnly&&(restartMsg.publishOnly={type:self._streams.screenshare&&self._streams.screenshare.stream?"screenshare":"video"}),self._parentId&&(restartMsg.parentId=self._parentId),log.log([peerId,"RTCPeerConnection",null,"Sending restart message to signaling server ->"],restartMsg),self._sendChannelMessage(restartMsg)};bwOptions.bandwidth&&"object"==typeof bwOptions.bandwidth&&("number"==typeof bwOptions.bandwidth.audio&&(self._streamsBandwidthSettings.bAS.audio=bwOptions.bandwidth.audio),"number"==typeof bwOptions.bandwidth.video&&(self._streamsBandwidthSettings.bAS.video=bwOptions.bandwidth.video),"number"==typeof bwOptions.bandwidth.data&&(self._streamsBandwidthSettings.bAS.data=bwOptions.bandwidth.data)),bwOptions.googleXBandwidth&&"object"==typeof bwOptions.googleXBandwidth&&("number"==typeof bwOptions.googleXBandwidth.min&&(self._streamsBandwidthSettings.googleX.min=bwOptions.googleXBandwidth.min),"number"==typeof bwOptions.googleXBandwidth.max&&(self._streamsBandwidthSettings.googleX.max=bwOptions.googleXBandwidth.max));for(var i=0;i<listOfPeers.length;i++)if(self._peerConnections[listOfPeers[i]])"MCU"!==listOfPeers[i]&&(self._trigger("peerRestart",listOfPeers[i],self.getPeerInfo(listOfPeers[i]),!0,!1),self._mcuUseRenegoRestart||sendRestartMsgFn(listOfPeers[i]));else{var error="Peer connection with peer does not exists. Unable to restart";log.error([listOfPeers[i],"PeerConnection",null,error]),listOfPeerRestartErrors[listOfPeers[i]]=new Error(error)}if(self._trigger("serverPeerRestart","MCU",self.SERVER_PEER_TYPE.MCU),self._mcuUseRenegoRestart)self._peerEndOfCandidatesCounter.MCU=self._peerEndOfCandidatesCounter.MCU||{},self._peerEndOfCandidatesCounter.MCU.len=0,sendRestartMsgFn("MCU");else{var peerJoinedFn=function(peerId,peerInfo,isSelf){log.log([null,"PeerConnection",null,"Invoked all peers to restart with MCU. Firing callback"]),"function"==typeof callback&&(Object.keys(listOfPeerRestartErrors).length>0?callback({refreshErrors:listOfPeerRestartErrors,listOfPeers:listOfPeers},null):callback(null,{listOfPeers:listOfPeers}))};self.once("peerJoined",peerJoinedFn,function(peerId,peerInfo,isSelf){return isSelf}),self.leaveRoom(!1,function(error,success){if(error){if("function"==typeof callback){for(var i=0;i<listOfPeers.length;i++)listOfPeerRestartErrors[listOfPeers[i]]=error;callback({refreshErrors:listOfPeerRestartErrors,listOfPeers:listOfPeers},null)}}else self.joinRoom(self._selectedRoom,{bandwidth:bwOptions.bandwidth||{},googleXBandwidth:bwOptions.googleXBandwidth||{},sdpSettings:clone(self._sdpSettings),voiceActivityDetection:self._voiceActivityDetection,publishOnly:!!self._publishOnly,parentId:self._parentId||null,autoBandwidthAdjustment:self._bandwidthAdjuster})})}},Skylink.prototype._parseConnectionStats=function(prevStats,stats,prop){var nTime=stats.timestamp,oTime=prevStats?prevStats.timestamp||0:0,nVal=parseFloat(stats[prop]||"0",10),oVal=parseFloat(prevStats?prevStats[prop]||"0":"0",10);return new Date(nTime).getTime()===new Date(oTime).getTime()?nVal:parseFloat(((nVal-oVal)/(nTime-oTime)*1e3).toFixed(3)||"0",10)},Skylink.prototype._signalingEndOfCandidates=function(targetMid){var self=this;if(self._peerEndOfCandidatesCounter[targetMid]&&self._peerConnections[targetMid].remoteDescription&&self._peerConnections[targetMid].remoteDescription.sdp&&"number"==typeof self._peerEndOfCandidatesCounter[targetMid].expectedLen&&self._peerEndOfCandidatesCounter[targetMid].len>=self._peerEndOfCandidatesCounter[targetMid].expectedLen&&(!self._peerCandidatesQueue[targetMid]||0===self._peerCandidatesQueue[targetMid].length)&&!self._peerEndOfCandidatesCounter[targetMid].hasSet){log.debug([targetMid,"RTCPeerConnection",null,"Signaling of end-of-candidates remote ICE gathering."]),self._peerEndOfCandidatesCounter[targetMid].hasSet=!0;try{if("edge"===window.webrtcDetectedBrowser){for(var mLineCounter=-1,addedMids=[],sdpLines=self._peerConnections[targetMid].remoteDescription.sdp.split("\r\n"),rejected=!1,i=0;i<sdpLines.length;i++)if(0===sdpLines[i].indexOf("m="))rejected="0"===sdpLines[i].split(" ")[1],mLineCounter++;else if(0===sdpLines[i].indexOf("a=mid:")&&!rejected){var mid=sdpLines[i].split("a=mid:")[1]||"";if(mid&&-1===addedMids.indexOf(mid)&&(addedMids.push(mid),self._addIceCandidate(targetMid,"endofcan-"+(new Date).getTime(),new RTCIceCandidate({sdpMid:mid,sdpMLineIndex:mLineCounter,candidate:"candidate:1 1 udp 1 0.0.0.0 9 typ endOfCandidates"})),self._peerConnectionConfig.bundlePolicy===self.BUNDLE_POLICY.MAX_BUNDLE))break}}else AdapterJS&&!self._isLowerThanVersion(AdapterJS.VERSION,"0.14.0")&&self._peerConnections[targetMid].addIceCandidate(null);self._gatheredCandidates[targetMid]&&self._trigger("candidatesGathered",targetMid,{expected:self._peerEndOfCandidatesCounter[targetMid].expectedLen||0,received:self._peerEndOfCandidatesCounter[targetMid].len||0,processed:self._gatheredCandidates[targetMid].receiving.srflx.length+self._gatheredCandidates[targetMid].receiving.relay.length+self._gatheredCandidates[targetMid].receiving.host.length})}catch(error){log.error([targetMid,"RTCPeerConnection",null,"Failed signaling end-of-candidates ->"],error)}}},Skylink.prototype.setUserData=function(userData){var self=this,updatedUserData="";void 0!==userData&&null!==userData&&(updatedUserData=userData),this._userData=updatedUserData,self._inRoom?(log.log("Updated userData -> ",updatedUserData),self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.UPDATE_USER,mid:self._user.sid,rid:self._room.id,userData:updatedUserData,stamp:(new Date).getTime()}),self._trigger("peerUpdated",self._user.sid,self.getPeerInfo(),!0)):log.warn("User is not in the room. Broadcast of updated information will be dropped")},Skylink.prototype.getUserData=function(peerId){if(peerId&&this._peerInformations[peerId]){var userData=this._peerInformations[peerId].userData;return null!==userData&&void 0===userData||(userData=""),userData}return this._userData},Skylink.prototype.getPeerInfo=function(peerId){var peerInfo=null;return"string"==typeof peerId&&"object"==typeof this._peerInformations[peerId]?(peerInfo=clone(this._peerInformations[peerId]),peerInfo.room=clone(this._selectedRoom),peerInfo.settings.bandwidth=peerInfo.settings.bandwidth||{},peerInfo.settings.googleXBandwidth=peerInfo.settings.googleXBandwidth||{},"boolean"==typeof peerInfo.settings.video||peerInfo.settings.video&&"object"==typeof peerInfo.settings.video||(peerInfo.settings.video=!1,peerInfo.mediaStatus.audioMuted=!0),"boolean"==typeof peerInfo.settings.audio||peerInfo.settings.audio&&"object"==typeof peerInfo.settings.audio||(peerInfo.settings.audio=!1,peerInfo.mediaStatus.audioMuted=!0),"boolean"!=typeof peerInfo.mediaStatus.audioMuted&&(peerInfo.mediaStatus.audioMuted=!0),"boolean"!=typeof peerInfo.mediaStatus.videoMuted&&(peerInfo.mediaStatus.videoMuted=!0),peerInfo.settings.maxBandwidth&&(peerInfo.settings.bandwidth=clone(peerInfo.settings.maxBandwidth),delete peerInfo.settings.maxBandwidth),peerInfo.settings.video&&"object"==typeof peerInfo.settings.video&&peerInfo.settings.video.customSettings&&"object"==typeof peerInfo.settings.video.customSettings&&(peerInfo.settings.video.customSettings.frameRate&&(peerInfo.settings.video.frameRate=clone(peerInfo.settings.video.customSettings.frameRate)),peerInfo.settings.video.customSettings.facingMode&&(peerInfo.settings.video.facingMode=clone(peerInfo.settings.video.customSettings.facingMode)),peerInfo.settings.video.customSettings.width&&(peerInfo.settings.video.resolution=peerInfo.settings.video.resolution||{},peerInfo.settings.video.resolution.width=clone(peerInfo.settings.video.customSettings.width)),peerInfo.settings.video.customSettings.height&&(peerInfo.settings.video.resolution=peerInfo.settings.video.resolution||{},peerInfo.settings.video.resolution.height=clone(peerInfo.settings.video.customSettings.height)),peerInfo.settings.video.customSettings.facingMode&&(peerInfo.settings.video.facingMode=clone(peerInfo.settings.video.customSettings.facingMode))),peerInfo.settings.audio&&"object"==typeof peerInfo.settings.audio&&(peerInfo.settings.audio.stereo=!0===peerInfo.settings.audio.stereo),null!==peerInfo.userData&&void 0!==peerInfo.userData||(peerInfo.userData=""),peerInfo.parentId=peerInfo.parentId||null,"MCU"===peerId?(peerInfo.config.receiveOnly=!0,peerInfo.config.publishOnly=!1):this._hasMCU&&(peerInfo.config.receiveOnly=!1,peerInfo.config.publishOnly=!0),this._sdpSettings.direction.audio.receive||(peerInfo.settings.audio=!1,peerInfo.mediaStatus.audioMuted=!0),this._sdpSettings.direction.video.receive||(peerInfo.settings.video=!1,peerInfo.mediaStatus.videoMuted=!0),this._sdpSettings.connection.audio||(peerInfo.settings.audio=!1,peerInfo.mediaStatus.audioMuted=!0),this._sdpSettings.connection.video||(peerInfo.settings.video=!1,peerInfo.mediaStatus.videoMuted=!0),peerInfo.settings.data=!!(this._dataChannels[peerId]&&this._dataChannels[peerId].main&&this._dataChannels[peerId].main.channel&&this._dataChannels[peerId].main.channel.readyState===this.DATA_CHANNEL_STATE.OPEN),peerInfo.connected=this._peerConnStatus[peerId]&&!!this._peerConnStatus[peerId].connected,peerInfo.init=this._peerConnStatus[peerId]&&!!this._peerConnStatus[peerId].init,this._sdpSessions[peerId]&&this._sdpSessions[peerId].remote&&this._sdpSessions[peerId].remote.connection&&"object"==typeof this._sdpSessions[peerId].remote.connection&&(this._sdpSessions[peerId].remote.connection.audio&&this._sdpSessions[peerId].remote.connection.audio.indexOf("send")>-1||(peerInfo.settings.audio=!1,peerInfo.mediaStatus.audioMuted=!0),this._sdpSessions[peerId].remote.connection.video&&this._sdpSessions[peerId].remote.connection.video.indexOf("send")>-1||(peerInfo.settings.video=!1,peerInfo.mediaStatus.videoMuted=!0),this._sdpSessions[peerId].remote.connection.data&&this._sdpSessions[peerId].remote.connection.data.indexOf("send")>-1||(peerInfo.settings.data=!1)),this._getSDPEdgeVideoSupports(peerId)||(peerInfo.settings.video=!1,peerInfo.mediaStatus.videoMuted=!0)):(peerInfo={userData:clone(this._userData),settings:{audio:!1,video:!1},mediaStatus:clone(this._streamsMutedSettings),agent:{name:window.webrtcDetectedBrowser,version:window.webrtcDetectedVersion,os:window.navigator.platform,pluginVersion:AdapterJS.WebRTCPlugin.plugin?AdapterJS.WebRTCPlugin.plugin.VERSION:null,SMProtocolVersion:this.SMProtocolVersion,DTProtocolVersion:this.DTProtocolVersion},room:clone(this._selectedRoom),config:{enableDataChannel:this._enableDataChannel,enableIceTrickle:this._enableIceTrickle,enableIceRestart:this._enableIceRestart,priorityWeight:this._peerPriorityWeight,receiveOnly:!1,publishOnly:!!this._publishOnly},connected:null,init:null},null!==peerInfo.userData&&void 0!==peerInfo.userData||(peerInfo.userData=""),this._streams.screenshare?peerInfo.settings=clone(this._streams.screenshare.settings):this._streams.userMedia&&(peerInfo.settings=clone(this._streams.userMedia.settings)),peerInfo.settings.bandwidth=clone(this._streamsBandwidthSettings.bAS),peerInfo.settings.googleXBandwidth=clone(this._streamsBandwidthSettings.googleX),peerInfo.parentId=this._parentId?this._parentId:null,peerInfo.config.receiveOnly=!peerInfo.settings.video&&!peerInfo.settings.audio,peerInfo.settings.data=this._enableDataChannel&&this._sdpSettings.connection.data,peerInfo.settings.audio&&"object"==typeof peerInfo.settings.audio&&("boolean"==typeof this._codecParams.audio.opus.stereo&&(peerInfo.settings.audio.stereo=this._codecParams.audio.opus.stereo),"boolean"==typeof this._codecParams.audio.opus.usedtx&&(peerInfo.settings.audio.usedtx=this._codecParams.audio.opus.usedtx),"number"==typeof this._codecParams.audio.opus.maxplaybackrate&&(peerInfo.settings.audio.maxplaybackrate=this._codecParams.audio.opus.maxplaybackrate),"boolean"==typeof this._codecParams.audio.opus.useinbandfec&&(peerInfo.settings.audio.useinbandfec=this._codecParams.audio.opus.useinbandfec))),peerInfo.settings.audio||(peerInfo.mediaStatus.audioMuted=!0),peerInfo.settings.video||(peerInfo.mediaStatus.videoMuted=!0),peerInfo.settings.audio||peerInfo.settings.video||(peerInfo.config.receiveOnly=!0,peerInfo.config.publishOnly=!1),peerInfo},Skylink.prototype.getPeersInRoom=function(){for(var listOfPeersInfo={},listOfPeers=Object.keys(this._peerInformations),i=0;i<listOfPeers.length;i++)listOfPeersInfo[listOfPeers[i]]=clone(this.getPeerInfo(listOfPeers[i])),listOfPeersInfo[listOfPeers[i]].isSelf=!1;return this._user&&this._user.sid&&(listOfPeersInfo[this._user.sid]=clone(this.getPeerInfo()),listOfPeersInfo[this._user.sid].isSelf=!0),listOfPeersInfo},Skylink.prototype.getPeersStream=function(){for(var listOfPeersStreams={},listOfPeers=Object.keys(this._peerConnections),i=0;i<listOfPeers.length;i++){var stream=null,streamId=null;if(this._peerConnections[listOfPeers[i]]&&this._peerConnections[listOfPeers[i]].remoteDescription&&this._peerConnections[listOfPeers[i]].remoteDescription.sdp&&(this._sdpSettings.direction.audio.receive||this._sdpSettings.direction.video.receive))if(self._useSafariWebRTC)stream=this._peerConnections[listOfPeers[i]].remoteStream,streamId=this._peerConnections[listOfPeers[i]].remoteStreamId;else{for(var streams=this._peerConnections[listOfPeers[i]].getRemoteStreams(),j=0;j<streams.length;j++)if(this._peerConnections[listOfPeers[i]].remoteDescription.sdp.indexOf("msid:"+(streams[j].id||streams[j].label))>0){stream=streams[j];break}streamId=stream?stream.id||stream.label||null:null}listOfPeersStreams[listOfPeers[i]]={streamId:streamId,stream:stream,isSelf:!1}}if(this._user&&this._user.sid){var selfStream=null;this._streams.screenshare&&this._streams.screenshare.stream?selfStream=this._streams.screenshare.stream:this._streams.userMedia&&this._streams.userMedia.stream&&(selfStream=this._streams.userMedia.stream),listOfPeersStreams[this._user.sid]={streamId:selfStream?selfStream.id||selfStream.label||null:null,stream:selfStream,isSelf:!0}}return listOfPeersStreams},Skylink.prototype.getPeersDatachannels=function(){for(var listOfPeersDatachannels={},listOfPeers=Object.keys(this._peerConnections),i=0;i<listOfPeers.length;i++)if(listOfPeersDatachannels[listOfPeers[i]]={},this._dataChannels[listOfPeers[i]])for(var channelProp in this._dataChannels[listOfPeers[i]])if(this._dataChannels[listOfPeers[i]].hasOwnProperty(channelProp)&&this._dataChannels[listOfPeers[i]][channelProp]){var channel=this._dataChannels[listOfPeers[i]][channelProp];listOfPeersDatachannels[listOfPeers[i]][channel.channelName]=this._getDataChannelBuffer(listOfPeers[i],channelProp),listOfPeersDatachannels[listOfPeers[i]][channel.channelName].channelName=channel.channelName,listOfPeersDatachannels[listOfPeers[i]][channel.channelName].channelType=channel.channelType,listOfPeersDatachannels[listOfPeers[i]][channel.channelName].channelProp=channelProp,listOfPeersDatachannels[listOfPeers[i]][channel.channelName].currentTransferId=channel.transferId,listOfPeersDatachannels[listOfPeers[i]][channel.channelName].currentStreamId=channel.streamId,listOfPeersDatachannels[listOfPeers[i]][channel.channelName].readyState=channel.channel?channel.channel.readyState:self.DATA_CHANNEL_STATE.CREATE_ERROR}return listOfPeersDatachannels},Skylink.prototype.getCurrentDataTransfers=function(){var listOfDataTransfers={};if(!this._user||!this._user.sid)return{};for(var prop in this._dataTransfers)this._dataTransfers.hasOwnProperty(prop)&&this._dataTransfers[prop]&&(listOfDataTransfers[prop]={transferInfo:this._getTransferInfo(prop,this._user.sid,!0,!0,!0),isSelf:this._dataTransfers[prop].senderPeerId===this._user.sid,peerId:this._dataTransfers[prop].senderPeerId||this._user.sid});return listOfDataTransfers},Skylink.prototype.getCurrentDataStreamsSession=function(){var listOfDataStreams={};if(!this._user||!this._user.sid)return{};for(var prop in this._dataStreams)this._dataStreams.hasOwnProperty(prop)&&this._dataStreams[prop]&&(listOfDataStreams[prop]={streamInfo:{chunkType:"string"===this._dataStreams[prop].sessionChunkType?this.DATA_TRANSFER_DATA_TYPE.STRING:this.DATA_TRANSFER_DATA_TYPE.BLOB,isPrivate:this._dataStreams[prop].isPrivate,isStringStream:"string"===this._dataStreams[prop].sessionChunkType,senderPeerId:this._dataStreams[prop].senderPeerId},isSelf:this._dataStreams[prop].senderPeerId===this._user.sid,peerId:this._dataStreams[prop].senderPeerId||this._user.sid});return listOfDataStreams},Skylink.prototype.getPeersCustomSettings=function(){var self=this,customSettingsList={};for(var peerId in self._peerInformations)self._peerInformations.hasOwnProperty(peerId)&&self._peerInformations[peerId]&&(customSettingsList[peerId]=self._getPeerCustomSettings(peerId));return customSettingsList},Skylink.prototype._getPeerCustomSettings=function(peerId){var self=this,customSettings={settings:{audio:!1,video:!1,data:!1,bandwidth:clone(self._streamsBandwidthSettings.bAS),googleXBandwidth:clone(self._streamsBandwidthSettings.googleX)},mediaStatus:{audioMuted:!0,videoMuted:!0}},usePeerId=self._hasMCU?"MCU":peerId;if(!self._peerInformations[usePeerId])return customSettings;if(self._peerConnections[usePeerId]&&self._peerConnections[usePeerId].signalingState!==self.PEER_CONNECTION_STATE.CLOSED){customSettings.settings.data=self._enableDataChannel&&self._peerInformations[peerId].config.enableDataChannel;var parseStreamFn=function(stream,streamId){return self._streams.screenshare&&self._streams.screenshare.stream&&streamId===(self._streams.screenshare.stream.id||self._streams.screenshare.stream.label)?(customSettings.settings.audio=clone(self._streams.screenshare.settings.audio),customSettings.settings.video=clone(self._streams.screenshare.settings.video),
customSettings.mediaStatus=clone(self._streamsMutedSettings),!0):self._streams.userMedia&&self._streams.userMedia.stream&&streamId===(self._streams.userMedia.stream.id||self._streams.userMedia.stream.label)?(customSettings.settings.audio=clone(self._streams.userMedia.settings.audio),customSettings.settings.video=clone(self._streams.userMedia.settings.video),customSettings.mediaStatus=clone(self._streamsMutedSettings),!0):void("edge"===window.webrtcDetectedBrowser&&(customSettings.settings.audio=clone(self._streams.userMedia.settings.audio),customSettings.settings.video=clone(self._streams.userMedia.settings.video),customSettings.mediaStatus=clone(self._streamsMutedSettings),0===stream.getAudioTracks().length&&(customSettings.settings.audio=!1,customSettings.mediaStatus.audioMuted=!0),0===stream.getVideoTracks().length&&(customSettings.settings.video=!1,customSettings.mediaStatus.videoMuted=!0)))};if(self._useSafariWebRTC)parseStreamFn(self._peerConnections[peerId].localStream,self._peerConnections[peerId].localStreamId);else for(var streams=self._peerConnections[peerId].getLocalStreams(),s=0;s<streams.length;s++){var shouldBreak=parseStreamFn(streams[s],streams[s].id||streams[s].label);if(shouldBreak)break}}return self._peerCustomConfigs[usePeerId]&&(self._peerCustomConfigs[usePeerId].bandwidth&&"object"==typeof self._peerCustomConfigs[usePeerId].bandwidth&&("number"==typeof self._peerCustomConfigs[usePeerId].bandwidth.audio&&(customSettings.settings.bandwidth.audio=self._peerCustomConfigs[usePeerId].bandwidth.audio),"number"==typeof self._peerCustomConfigs[usePeerId].bandwidth.video&&(customSettings.settings.bandwidth.video=self._peerCustomConfigs[usePeerId].bandwidth.video),"number"==typeof self._peerCustomConfigs[usePeerId].bandwidth.data&&(customSettings.settings.bandwidth.data=self._peerCustomConfigs[usePeerId].bandwidth.data)),self._peerCustomConfigs[usePeerId].googleXBandwidth&&"object"==typeof self._peerCustomConfigs[usePeerId].googleXBandwidth&&("number"==typeof self._peerCustomConfigs[usePeerId].googleXBandwidth.min&&(customSettings.settings.googleXBandwidth.min=self._peerCustomConfigs[usePeerId].googleXBandwidth.min),"number"==typeof self._peerCustomConfigs[usePeerId].googleXBandwidth.max&&(customSettings.settings.googleXBandwidth.max=self._peerCustomConfigs[usePeerId].googleXBandwidth.max))),self._sdpSessions[usePeerId]&&self._sdpSessions[usePeerId].local&&self._sdpSessions[usePeerId].local.connection&&"object"==typeof self._sdpSessions[usePeerId].local.connection&&(self._sdpSessions[usePeerId].local.connection.audio&&self._sdpSessions[usePeerId].local.connection.audio.indexOf("send")>-1||(customSettings.settings.audio=!1,customSettings.mediaStatus.audioMuted=!0),self._sdpSessions[usePeerId].local.connection.video&&self._sdpSessions[usePeerId].local.connection.video.indexOf("send")>-1||(customSettings.settings.video=!1,customSettings.mediaStatus.videoMuted=!0),self._sdpSessions[usePeerId].local.connection.data&&self._sdpSessions[usePeerId].local.connection.data.indexOf("send")>-1||(customSettings.settings.data=!1)),customSettings.settings.video&&!self._getSDPEdgeVideoSupports(usePeerId)&&(customSettings.settings.video=!1,customSettings.mediaStatus.videoMuted=!0),customSettings},Skylink.prototype._getUserInfo=function(peerId){var userInfo=clone(this.getPeerInfo()),userCustomInfoForPeer=peerId?this._getPeerCustomSettings(peerId):null;return userCustomInfoForPeer&&"object"==typeof userCustomInfoForPeer&&(userInfo.settings=userCustomInfoForPeer.settings,userInfo.mediaStatus=userCustomInfoForPeer.mediaStatus),userInfo.settings.video&&"object"==typeof userInfo.settings.video&&(userInfo.settings.video.customSettings={},userInfo.settings.video.frameRate&&"object"==typeof userInfo.settings.video.frameRate&&(userInfo.settings.video.customSettings.frameRate=clone(userInfo.settings.video.frameRate),userInfo.settings.video.frameRate=-1),userInfo.settings.video.facingMode&&"object"==typeof userInfo.settings.video.facingMode&&(userInfo.settings.video.customSettings.facingMode=clone(userInfo.settings.video.facingMode),userInfo.settings.video.facingMode="-1"),userInfo.settings.video.resolution&&"object"==typeof userInfo.settings.video.resolution&&(userInfo.settings.video.resolution.width&&"object"==typeof userInfo.settings.video.resolution.width&&(userInfo.settings.video.customSettings.width=clone(userInfo.settings.video.width),userInfo.settings.video.resolution.width=-1),userInfo.settings.video.resolution.height&&"object"==typeof userInfo.settings.video.resolution.height&&(userInfo.settings.video.customSettings.height=clone(userInfo.settings.video.height),userInfo.settings.video.resolution.height=-1))),userInfo.settings.bandwidth&&(userInfo.settings.maxBandwidth=clone(userInfo.settings.bandwidth),delete userInfo.settings.bandwidth),delete userInfo.agent,delete userInfo.room,delete userInfo.config,delete userInfo.parentId,delete userInfo.settings.data,userInfo},Skylink.prototype.HANDSHAKE_PROGRESS={ENTER:"enter",WELCOME:"welcome",OFFER:"offer",ANSWER:"answer",ERROR:"error"},Skylink.prototype._doOffer=function(targetMid,iceRestart,peerBrowser){var self=this,pc=self._peerConnections[targetMid];if(log.log([targetMid,null,null,"Checking caller status"],peerBrowser),!pc)return void log.warn([targetMid,"RTCSessionDescription","offer","Dropping of creating of offer as connection does not exists"]);if(pc.signalingState!==self.PEER_CONNECTION_STATE.STABLE)return void log.warn([targetMid,"RTCSessionDescription","offer",'Dropping of creating of offer as signalingState is not "'+self.PEER_CONNECTION_STATE.STABLE+'" ->'],pc.signalingState);var doIceRestart=!!((self._peerInformations[targetMid]||{}).config||{}).enableIceRestart&&iceRestart&&self._enableIceRestart,offerToReceiveAudio=!(!self._sdpSettings.connection.audio&&"MCU"!==targetMid),offerToReceiveVideo=!(!self._sdpSettings.connection.video&&"MCU"!==targetMid)&&self._getSDPEdgeVideoSupports(targetMid),offerConstraints={offerToReceiveAudio:offerToReceiveAudio,offerToReceiveVideo:offerToReceiveVideo,iceRestart:doIceRestart,voiceActivityDetection:self._voiceActivityDetection};peerBrowser.os=peerBrowser.os||"",self._hasMCU&&"MCU"!==targetMid||self._addLocalMediaStreams(targetMid),self._enableDataChannel&&self._peerInformations[targetMid]&&self._peerInformations[targetMid].config.enableDataChannel&&(self._dataChannels[targetMid]&&self._dataChannels[targetMid].main||(self._createDataChannel(targetMid),self._peerConnections[targetMid].hasMainChannel=!0)),log.debug([targetMid,null,null,"Creating offer with config:"],offerConstraints),pc.endOfCandidates=!1,self._peerConnStatus[targetMid]&&(self._peerConnStatus[targetMid].sdpConstraints=offerConstraints);var successCbFn=function(offer){log.debug([targetMid,null,null,"Created offer"],offer),self._setLocalAndSendMessage(targetMid,offer)},errorCbFn=function(error){self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ERROR,targetMid,error),log.error([targetMid,null,null,"Failed creating an offer:"],error)};self._useSafariWebRTC?pc.createOffer(offerConstraints).then(successCbFn).catch(errorCbFn):pc.createOffer(successCbFn,errorCbFn,self._isUsingPlugin?{mandatory:{OfferToReceiveAudio:offerConstraints.offerToReceiveAudio,OfferToReceiveVideo:offerConstraints.offerToReceiveVideo,iceRestart:offerConstraints.iceRestart,voiceActivityDetection:offerConstraints.voiceActivityDetection}}:offerConstraints)},Skylink.prototype._doAnswer=function(targetMid){var self=this;log.log([targetMid,null,null,"Creating answer with config:"],self._room.connection.sdpConstraints);var pc=self._peerConnections[targetMid];if(!pc)return void log.warn([targetMid,"RTCSessionDescription","answer","Dropping of creating of answer as connection does not exists"]);if(pc.signalingState!==self.PEER_CONNECTION_STATE.HAVE_REMOTE_OFFER)return void log.warn([targetMid,"RTCSessionDescription","answer",'Dropping of creating of answer as signalingState is not "'+self.PEER_CONNECTION_STATE.HAVE_REMOTE_OFFER+'" ->'],pc.signalingState);self._hasMCU&&"MCU"!==targetMid||"edge"===window.webrtcDetectedBrowser||self._addLocalMediaStreams(targetMid);var offerToReceiveAudio=!(!self._sdpSettings.connection.audio&&"MCU"!==targetMid),offerToReceiveVideo=!(!self._sdpSettings.connection.video&&"MCU"!==targetMid)&&self._getSDPEdgeVideoSupports(targetMid),answerConstraints="edge"===window.webrtcDetectedBrowser?{offerToReceiveVideo:offerToReceiveVideo,offerToReceiveAudio:offerToReceiveAudio,voiceActivityDetection:self._voiceActivityDetection}:void 0;self._peerConnStatus[targetMid]&&(self._peerConnStatus[targetMid].sdpConstraints=answerConstraints);var successCbFn=function(answer){log.debug([targetMid,null,null,"Created answer"],answer),self._setLocalAndSendMessage(targetMid,answer)},errorCbFn=function(error){log.error([targetMid,null,null,"Failed creating an answer:"],error),self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ERROR,targetMid,error)};self._useSafariWebRTC?pc.createAnswer(answerConstraints).then(successCbFn).catch(errorCbFn):pc.createAnswer(successCbFn,errorCbFn,answerConstraints)},Skylink.prototype._setLocalAndSendMessage=function(targetMid,_sessionDescription){var self=this,pc=self._peerConnections[targetMid];if(!_sessionDescription||!_sessionDescription.sdp)return void log.warn([targetMid,"RTCSessionDescription",null,"Local session description is undefined ->"],_sessionDescription);if(!pc)return void log.warn([targetMid,"RTCSessionDescription",_sessionDescription.type,"Local session description will not be set as connection does not exists ->"],_sessionDescription);if(_sessionDescription.type===self.HANDSHAKE_PROGRESS.OFFER&&pc.signalingState!==self.PEER_CONNECTION_STATE.STABLE)return void log.warn([targetMid,"RTCSessionDescription",_sessionDescription.type,'Local session description will not be set as signaling state is "'+pc.signalingState+'" ->'],_sessionDescription);if(_sessionDescription.type===self.HANDSHAKE_PROGRESS.ANSWER&&pc.signalingState!==self.PEER_CONNECTION_STATE.HAVE_REMOTE_OFFER)return void log.warn([targetMid,"RTCSessionDescription",_sessionDescription.type,'Local session description will not be set as signaling state is "'+pc.signalingState+'" ->'],_sessionDescription);if(pc.processingLocalSDP)return void log.warn([targetMid,"RTCSessionDescription",_sessionDescription.type,"Local session description will not be set as another is being processed ->"],_sessionDescription);pc.processingLocalSDP=!0;var sessionDescription={type:_sessionDescription.type,sdp:_sessionDescription.sdp};sessionDescription.sdp=self._removeSDPFirefoxH264Pref(targetMid,sessionDescription),sessionDescription.sdp=self._setSDPCodecParams(targetMid,sessionDescription),sessionDescription.sdp=self._removeSDPUnknownAptRtx(targetMid,sessionDescription),sessionDescription.sdp=self._removeSDPCodecs(targetMid,sessionDescription),sessionDescription.sdp=self._handleSDPConnectionSettings(targetMid,sessionDescription,"local"),sessionDescription.sdp=self._removeSDPREMBPackets(targetMid,sessionDescription),log.log([targetMid,"RTCSessionDescription",sessionDescription.type,"Local session description updated ->"],sessionDescription.sdp);var successCbFn=function(){if(log.debug([targetMid,"RTCSessionDescription",sessionDescription.type,"Local session description has been set ->"],sessionDescription),pc.processingLocalSDP=!1,self._trigger("handshakeProgress",sessionDescription.type,targetMid),sessionDescription.type===self.HANDSHAKE_PROGRESS.ANSWER?pc.setAnswer="local":pc.setOffer="local",!self._enableIceTrickle&&!pc.gathered)return void log.log([targetMid,"RTCSessionDescription",sessionDescription.type,"Local session description sending is halted to complete ICE gathering."]);self._sendChannelMessage({type:sessionDescription.type,sdp:self._addSDPMediaStreamTrackIDs(targetMid,sessionDescription),mid:self._user.sid,target:targetMid,rid:self._room.id,userInfo:self._getUserInfo(targetMid)})},errorCbFn=function(error){log.error([targetMid,"RTCSessionDescription",sessionDescription.type,"Local description failed setting ->"],error),pc.processingLocalSDP=!1,self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ERROR,targetMid,error)};self._useSafariWebRTC&&pc.setLocalDescription(new RTCSessionDescription(sessionDescription)).then(successCbFn).catch(errorCbFn),pc.setLocalDescription(new RTCSessionDescription(sessionDescription),successCbFn,errorCbFn)},Skylink.prototype.GET_PEERS_STATE={ENQUIRED:"enquired",RECEIVED:"received"},Skylink.prototype.INTRODUCE_STATE={INTRODUCING:"introducing",ERROR:"error"},Skylink.prototype.getPeers=function(showAll,callback){var self=this;return self._isPrivileged?self._appKey?("function"==typeof showAll&&(callback=showAll,showAll=!1),self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.GET_PEERS,showAll:showAll||!1}),self._trigger("getPeersStateChange",self.GET_PEERS_STATE.ENQUIRED,self._user.sid,null),log.log("Enquired server for peers within the realm"),void("function"==typeof callback&&self.once("getPeersStateChange",function(state,privilegedPeerId,peerList){callback(null,peerList)},function(state,privilegedPeerId,peerList){return state===self.GET_PEERS_STATE.RECEIVED}))):void log.warn("App key is not defined. Please authenticate again."):void log.warn("Please upgrade your key to privileged to use this function")},Skylink.prototype.introducePeer=function(sendingPeerId,receivingPeerId){var self=this;if(!self._isPrivileged)return log.warn("Please upgrade your key to privileged to use this function"),void self._trigger("introduceStateChange",self.INTRODUCE_STATE.ERROR,self._user.sid,sendingPeerId,receivingPeerId,"notPrivileged");self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.INTRODUCE,sendingPeerId:sendingPeerId,receivingPeerId:receivingPeerId}),self._trigger("introduceStateChange",self.INTRODUCE_STATE.INTRODUCING,self._user.sid,sendingPeerId,receivingPeerId,null),log.log("Introducing",sendingPeerId,"to",receivingPeerId)},Skylink.prototype.SYSTEM_ACTION={WARNING:"warning",REJECT:"reject"},Skylink.prototype.SYSTEM_ACTION_REASON={CREDENTIALS_EXPIRED:"oldTimeStamp",CREDENTIALS_ERROR:"credentialError",DUPLICATED_LOGIN:"duplicatedLogin",ROOM_NOT_STARTED:"notStart",EXPIRED:"expired",ROOM_LOCKED:"locked",FAST_MESSAGE:"fastmsg",ROOM_CLOSING:"toclose",ROOM_CLOSED:"roomclose",SERVER_ERROR:"serverError",KEY_ERROR:"keyFailed"},Skylink.prototype.joinRoom=function(room,options,callback){var self=this,selectedRoom=self._defaultRoom,previousRoom=self._selectedRoom,mediaOptions={};room&&"string"==typeof room?selectedRoom=room:room&&"object"==typeof room?mediaOptions=room:"function"==typeof room&&(callback=room),options&&"object"==typeof options?mediaOptions=options:"function"==typeof options&&(callback=options);var resolveAsErrorFn=function(error,tryRoom,readyState){log.error(error),"function"==typeof callback&&callback({room:tryRoom,errorCode:readyState||null,error:error instanceof Error?error:new Error(JSON.stringify(error))})},joinRoomFn=function(){self._initSelectedRoom(selectedRoom,function(initError,initSuccess){if(initError)return void resolveAsErrorFn(initError.error,self._selectedRoom,self._readyState);self._waitForOpenChannel(mediaOptions,function(error,success){if(error)return void resolveAsErrorFn(error,self._selectedRoom,self._readyState);if("function"==typeof callback){var peerOnJoin=function(peerId,peerInfo,isSelf){self.off("systemAction",peerFailedJoin),self.off("channelClose",peerSocketFailedJoin),log.info([null,"Room",selectedRoom,"Connected to Room ->"],peerInfo),callback(null,{room:self._selectedRoom,peerId:peerId,peerInfo:peerInfo})},peerFailedJoin=function(action,message){self.off("peerJoined",peerOnJoin),self.off("channelClose",peerSocketFailedJoin),log.error([null,"Room",selectedRoom,"Failed connecting to Room ->"],message),resolveAsErrorFn(new Error(message),self._selectedRoom,self._readyState)},peerSocketFailedJoin=function(){self.off("systemAction",peerFailedJoin),self.off("peerJoined",peerOnJoin),log.error([null,"Room",selectedRoom,"Failed connecting to Room due to abrupt disconnection."]),resolveAsErrorFn(new Error("Channel closed abruptly before session was established"),self._selectedRoom,self._readyState)};self.once("peerJoined",peerOnJoin,function(peerId,peerInfo,isSelf){return peerInfo.room===selectedRoom&&isSelf}),self.once("systemAction",peerFailedJoin,function(action){return action===self.SYSTEM_ACTION.REJECT}),self.once("channelClose",peerSocketFailedJoin)}self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.JOIN_ROOM,uid:self._user.uid,cid:self._key,rid:self._room.id,userCred:self._user.token,timeStamp:self._user.timeStamp,apiOwner:self._appKeyOwner,roomCred:self._room.token,start:self._room.startDateTime,len:self._room.duration,isPrivileged:!0===self._isPrivileged,autoIntroduce:!1!==self._autoIntroduce,key:self._appKey})})})};if(null===room||["number","boolean"].indexOf(typeof room)>-1)return void resolveAsErrorFn("Invalid room name is provided",room);if(null===options||["number","boolean"].indexOf(typeof options)>-1)return void resolveAsErrorFn("Invalid mediaOptions is provided",selectedRoom);if(self._inRoom){var stopStream=!1===mediaOptions.audio&&!1===mediaOptions.video;self.leaveRoom(stopStream,function(lRError,lRSuccess){log.debug([null,"Room",previousRoom,"Leave Room callback result ->"],[lRError,lRSuccess]),joinRoomFn()})}else joinRoomFn()},Skylink.prototype.leaveRoom=function(stopMediaOptions,callback){var self=this,stopUserMedia=!0,stopScreenshare=!0,previousRoom=self._selectedRoom,previousUserPeerId=self._user?self._user.sid:null,peersThatLeft=[],isNotInRoom=!self._inRoom;"boolean"==typeof stopMediaOptions?!1===stopMediaOptions&&(stopUserMedia=!1,stopScreenshare=!1):stopMediaOptions&&"object"==typeof stopMediaOptions?(stopUserMedia=!1!==stopMediaOptions.userMedia,stopScreenshare=!1!==stopMediaOptions.screenshare):"function"==typeof stopMediaOptions&&(callback=stopMediaOptions);for(var infoPeerId in self._peerInformations)self._peerInformations.hasOwnProperty(infoPeerId)&&self._peerInformations[infoPeerId]&&(peersThatLeft.push(infoPeerId),self._removePeer(infoPeerId));for(var connPeerId in self._peerConnections)self._peerConnections.hasOwnProperty(connPeerId)&&self._peerConnections[connPeerId]&&-1===peersThatLeft.indexOf(connPeerId)&&(peersThatLeft.push(connPeerId),self._removePeer(connPeerId));if(self._inRoom=!1,self._closeChannel(),isNotInRoom){var notInRoomError="Unable to leave room as user is not in any room";return log.error([null,"Room",previousRoom,notInRoomError]),void("function"==typeof callback&&callback(new Error(notInRoomError),null))}self._stopStreams({userMedia:stopUserMedia,screenshare:stopScreenshare}),self._wait(function(){log.log([null,"Room",previousRoom,"User left the room"]),self._trigger("peerLeft",previousUserPeerId,self.getPeerInfo(),!0),"function"==typeof callback&&callback(null,{peerId:previousUserPeerId,previousRoom:previousRoom})},function(){return!self._channelOpen})},Skylink.prototype.lockRoom=function(){this._user&&this._user.sid&&(log.log("Update to isRoomLocked status ->",!0),this._sendChannelMessage({type:this._SIG_MESSAGE_TYPE.ROOM_LOCK,mid:this._user.sid,rid:this._room.id,lock:!0}),this._roomLocked=!0,this._trigger("roomLock",!0,this._user.sid,this.getPeerInfo(),!0))},Skylink.prototype.unlockRoom=function(){this._user&&this._user.sid&&(log.log("Update to isRoomLocked status ->",!1),this._sendChannelMessage({type:this._SIG_MESSAGE_TYPE.ROOM_LOCK,mid:this._user.sid,rid:this._room.id,lock:!1}),this._roomLocked=!1,this._trigger("roomLock",!1,this._user.sid,this.getPeerInfo(),!0))},Skylink.prototype._waitForOpenChannel=function(mediaOptions,callback){var self=this;self._socketCurrentReconnectionAttempt=0,self._wait(function(){var onChannelOpen=function(){self.off("socketError",onChannelError),setTimeout(function(){if(mediaOptions=mediaOptions||{},self._userData=mediaOptions.userData||self._userData||"",self._streamsBandwidthSettings={googleX:{},bAS:{}},self._publishOnly=!1,self._sdpSettings={connection:{audio:!0,video:!0,data:!0},direction:{audio:{send:!0,receive:!0},video:{send:!0,receive:!0}}},self._voiceActivityDetection="boolean"!=typeof mediaOptions.voiceActivityDetection||mediaOptions.voiceActivityDetection,self._peerConnectionConfig={bundlePolicy:self.BUNDLE_POLICY.BALANCED,rtcpMuxPolicy:self.RTCP_MUX_POLICY.REQUIRE,iceCandidatePoolSize:0,certificate:self.PEER_CERTIFICATE.AUTO},self._bandwidthAdjuster=null,mediaOptions.bandwidth&&("number"==typeof mediaOptions.bandwidth.audio&&(self._streamsBandwidthSettings.bAS.audio=mediaOptions.bandwidth.audio),"number"==typeof mediaOptions.bandwidth.video&&(self._streamsBandwidthSettings.bAS.video=mediaOptions.bandwidth.video),"number"==typeof mediaOptions.bandwidth.data&&(self._streamsBandwidthSettings.bAS.data=mediaOptions.bandwidth.data)),mediaOptions.googleXBandwidth&&("number"==typeof mediaOptions.googleXBandwidth.min&&(self._streamsBandwidthSettings.googleX.min=mediaOptions.googleXBandwidth.min),"number"==typeof mediaOptions.googleXBandwidth.max&&(self._streamsBandwidthSettings.googleX.max=mediaOptions.googleXBandwidth.max)),mediaOptions.sdpSettings&&(mediaOptions.sdpSettings.direction&&(mediaOptions.sdpSettings.direction.audio&&(self._sdpSettings.direction.audio.receive="boolean"!=typeof mediaOptions.sdpSettings.direction.audio.receive||mediaOptions.sdpSettings.direction.audio.receive,self._sdpSettings.direction.audio.send="boolean"!=typeof mediaOptions.sdpSettings.direction.audio.send||mediaOptions.sdpSettings.direction.audio.send),mediaOptions.sdpSettings.direction.video&&(self._sdpSettings.direction.video.receive="boolean"!=typeof mediaOptions.sdpSettings.direction.video.receive||mediaOptions.sdpSettings.direction.video.receive,self._sdpSettings.direction.video.send="boolean"!=typeof mediaOptions.sdpSettings.direction.video.send||mediaOptions.sdpSettings.direction.video.send)),mediaOptions.sdpSettings.connection&&(self._sdpSettings.connection.audio="boolean"!=typeof mediaOptions.sdpSettings.connection.audio||mediaOptions.sdpSettings.connection.audio,self._sdpSettings.connection.video="boolean"!=typeof mediaOptions.sdpSettings.connection.video||mediaOptions.sdpSettings.connection.video,self._sdpSettings.connection.data="boolean"!=typeof mediaOptions.sdpSettings.connection.data||mediaOptions.sdpSettings.connection.data)),mediaOptions.publishOnly&&(self._sdpSettings.direction.audio.send=!0,self._sdpSettings.direction.audio.receive=!1,self._sdpSettings.direction.video.send=!0,self._sdpSettings.direction.video.receive=!1,self._publishOnly=!0,"object"==typeof mediaOptions.publishOnly&&mediaOptions.publishOnly.parentId&&"string"==typeof mediaOptions.publishOnly.parentId&&(self._parentId=mediaOptions.publishOnly.parentId)),mediaOptions.parentId&&(self._parentId=mediaOptions.parentId),mediaOptions.peerConnection&&"object"==typeof mediaOptions.peerConnection){if("string"==typeof mediaOptions.peerConnection.bundlePolicy)for(var bpProp in self.BUNDLE_POLICY)self.BUNDLE_POLICY.hasOwnProperty(bpProp)&&self.BUNDLE_POLICY[bpProp]===mediaOptions.peerConnection.bundlePolicy&&(self._peerConnectionConfig.bundlePolicy=mediaOptions.peerConnection.bundlePolicy);if("string"==typeof mediaOptions.peerConnection.rtcpMuxPolicy)for(var rmpProp in self.RTCP_MUX_POLICY)self.RTCP_MUX_POLICY.hasOwnProperty(rmpProp)&&self.RTCP_MUX_POLICY[rmpProp]===mediaOptions.peerConnection.rtcpMuxPolicy&&(self._peerConnectionConfig.rtcpMuxPolicy=mediaOptions.peerConnection.rtcpMuxPolicy);if("number"==typeof mediaOptions.peerConnection.iceCandidatePoolSize&&mediaOptions.peerConnection.iceCandidatePoolSize>0&&(self._peerConnectionConfig.iceCandidatePoolSize=mediaOptions.peerConnection.iceCandidatePoolSize),"string"==typeof mediaOptions.peerConnection.certificate)for(var pcProp in self.PEER_CERTIFICATE)self.PEER_CERTIFICATE.hasOwnProperty(pcProp)&&self.PEER_CERTIFICATE[pcProp]===mediaOptions.peerConnection.certificate&&(self._peerConnectionConfig.certificate=mediaOptions.peerConnection.certificate)}if(mediaOptions.autoBandwidthAdjustment&&(self._bandwidthAdjuster={interval:10,limitAtPercentage:100,useUploadBwOnly:!1},"object"==typeof mediaOptions.autoBandwidthAdjustment&&("number"==typeof mediaOptions.autoBandwidthAdjustment.interval&&mediaOptions.autoBandwidthAdjustment.interval>=10&&(self._bandwidthAdjuster.interval=mediaOptions.autoBandwidthAdjustment.interval),"number"==typeof mediaOptions.autoBandwidthAdjustment.limitAtPercentage&&mediaOptions.autoBandwidthAdjustment.limitAtPercentage>=0&&mediaOptions.autoBandwidthAdjustment.limitAtPercentage<=100&&(self._bandwidthAdjuster.limitAtPercentage=mediaOptions.autoBandwidthAdjustment.limitAtPercentage),"boolean"==typeof mediaOptions.autoBandwidthAdjustment.useUploadBwOnly&&(self._bandwidthAdjuster.useUploadBwOnly=mediaOptions.autoBandwidthAdjustment.useUploadBwOnly))),!0===mediaOptions.manualGetUserMedia){self._trigger("mediaAccessRequired");var current50Block=0,mediaAccessRequiredFailure=!1;return void self._wait(function(){!0===mediaAccessRequiredFailure?self._onUserMediaError(new Error("Waiting for stream timeout"),!1,!1):callback(null,self._streams.userMedia.stream)},function(){return current50Block+=1,600===current50Block?(mediaAccessRequiredFailure=!0,!0):!(!self._streams.userMedia||!self._streams.userMedia.stream)||void 0},50)}if(mediaOptions.audio||mediaOptions.video)return void self.getUserMedia({useExactConstraints:!!mediaOptions.useExactConstraints,audio:mediaOptions.audio,video:mediaOptions.video},function(error,success){error?callback(error,null):callback(null,success)});callback(null,null)},1)},onChannelError=function(errorState,error){self.off("channelOpen",onChannelOpen),callback(error)};self._channelOpen?onChannelOpen():(self.once("channelOpen",onChannelOpen),self.once("socketError",onChannelError,function(errorState){return errorState===self.SOCKET_ERROR.RECONNECTION_ABORTED}),self._openChannel())},function(){return self._readyState===self.READY_STATE_CHANGE.COMPLETED})},Skylink.prototype.VERSION="0.6.24",Skylink.prototype.READY_STATE_CHANGE={INIT:0,LOADING:1,COMPLETED:2,ERROR:-1},Skylink.prototype.READY_STATE_CHANGE_ERROR={API_INVALID:4001,API_DOMAIN_NOT_MATCH:4002,API_CORS_DOMAIN_NOT_MATCH:4003,API_CREDENTIALS_INVALID:4004,API_CREDENTIALS_NOT_MATCH:4005,API_INVALID_PARENT_KEY:4006,API_NO_MEETING_RECORD_FOUND:4010,API_OVER_SEAT_LIMIT:4020,API_RETRIEVAL_FAILED:4021,API_WRONG_ACCESS_DOMAIN:5005,XML_HTTP_REQUEST_ERROR:-1,NO_SOCKET_IO:1,NO_XMLHTTPREQUEST_SUPPORT:2,NO_WEBRTC_SUPPORT:3,NO_PATH:4,ADAPTER_NO_LOADED:7,PARSE_CODECS:8},Skylink.prototype.REGIONAL_SERVER={APAC1:"",US1:""},Skylink.prototype.PRIORITY_WEIGHT_SCHEME={ENFORCE_OFFERER:"enforceOfferer",ENFORCE_ANSWERER:"enforceAnswerer",AUTO:"auto"},Skylink.prototype.generateUUID=function(){var d=(new Date).getTime();return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(c){var r=(d+16*Math.random())%16|0;return d=Math.floor(d/16),("x"===c?r:r&&15).toString(16)})},Skylink.prototype.init=function(options,callback){var self=this;if("function"==typeof options&&(callback=options,options=void 0),!options){var error="No API key provided";return log.error(error),void("function"==typeof callback&&callback(error,null))}var appKey,room,defaultRoom,startDateTime,duration,credentials,roomServer=self._roomServer,enableIceTrickle=!0,enableDataChannel=!0,enableSTUNServer=!0,enableTURNServer=!0,TURNTransport=self.TURN_TRANSPORT.ANY,audioFallback=!1,forceSSL=!1,socketTimeout=2e4,forceTURNSSL=!1,audioCodec=self.AUDIO_CODEC.AUTO,videoCodec=self.VIDEO_CODEC.AUTO,forceTURN=!1,usePublicSTUN=!0,disableVideoFecCodecs=!1,disableComfortNoiseCodec=!1,disableREMB=!1,filterCandidatesType={host:!1,srflx:!1,relay:!1},throttleIntervals={shareScreen:1e4,refreshConnection:5e3,getUserMedia:0},throttleShouldThrowError=!1,mcuUseRenegoRestart=!1,iceServer=null,socketServer=null,codecParams={audio:{opus:{}},video:{h264:{},vp8:{},vp9:{}}},priorityWeightScheme=self.PRIORITY_WEIGHT_SCHEME.AUTO,useEdgeWebRTC=!1;if(log.log("Provided init options:",options),"string"==typeof options)appKey=options,defaultRoom=appKey,room=appKey;else{if(appKey=options.appKey||options.apiKey,roomServer="string"==typeof options.roomServer?options.roomServer:roomServer,roomServer=roomServer.lastIndexOf("/")===roomServer.length-1?roomServer.substring(0,roomServer.length-1):roomServer,defaultRoom="string"==typeof options.defaultRoom&&options.defaultRoom?options.defaultRoom:appKey,room=defaultRoom,enableIceTrickle="boolean"==typeof options.enableIceTrickle?options.enableIceTrickle:enableIceTrickle,enableDataChannel="boolean"==typeof options.enableDataChannel?options.enableDataChannel:enableDataChannel,enableSTUNServer="boolean"==typeof options.enableSTUNServer?options.enableSTUNServer:enableSTUNServer,enableTURNServer="boolean"==typeof options.enableTURNServer?options.enableTURNServer:enableTURNServer,forceSSL="boolean"==typeof options.forceSSL?options.forceSSL:forceSSL,socketTimeout="number"==typeof options.socketTimeout?options.socketTimeout:socketTimeout,socketTimeout=socketTimeout<5e3?5e3:socketTimeout,forceTURNSSL="boolean"==typeof options.forceTURNSSL?options.forceTURNSSL:forceTURNSSL,forceTURN="boolean"==typeof options.forceTURN?options.forceTURN:forceTURN,usePublicSTUN="boolean"==typeof options.usePublicSTUN?options.usePublicSTUN:usePublicSTUN,disableVideoFecCodecs="boolean"==typeof options.disableVideoFecCodecs?options.disableVideoFecCodecs:disableVideoFecCodecs,disableComfortNoiseCodec="boolean"==typeof options.disableComfortNoiseCodec?options.disableComfortNoiseCodec:disableComfortNoiseCodec,disableREMB="boolean"==typeof options.disableREMB?options.disableREMB:disableREMB,throttleShouldThrowError="boolean"==typeof options.throttleShouldThrowError?options.throttleShouldThrowError:throttleShouldThrowError,mcuUseRenegoRestart="boolean"==typeof options.mcuUseRenegoRestart?options.mcuUseRenegoRestart:mcuUseRenegoRestart,mcuUseRenegoRestart="boolean"==typeof options.mcuUseRenegoRestart?options.mcuUseRenegoRestart:mcuUseRenegoRestart,useEdgeWebRTC="boolean"==typeof options.useEdgeWebRTC?options.useEdgeWebRTC:useEdgeWebRTC,"object"==typeof options.filterCandidatesType&&options.filterCandidatesType&&(filterCandidatesType.host="boolean"==typeof options.filterCandidatesType.host?options.filterCandidatesType.host:filterCandidatesType.host,filterCandidatesType.srflx="boolean"==typeof options.filterCandidatesType.srflx?options.filterCandidatesType.srflx:filterCandidatesType.srflx,filterCandidatesType.relay="boolean"==typeof options.filterCandidatesType.relay?options.filterCandidatesType.relay:filterCandidatesType.relay),"object"==typeof options.throttleIntervals&&options.throttleIntervals&&(throttleIntervals.shareScreen="number"==typeof options.throttleIntervals.shareScreen?options.throttleIntervals.shareScreen:throttleIntervals.shareScreen,throttleIntervals.refreshConnection="number"==typeof options.throttleIntervals.refreshConnection?options.throttleIntervals.refreshConnection:throttleIntervals.refreshConnection,throttleIntervals.getUserMedia="number"==typeof options.throttleIntervals.getUserMedia?options.throttleIntervals.getUserMedia:throttleIntervals.getUserMedia),options.socketServer&&("string"==typeof options.socketServer?socketServer=options.socketServer:"object"==typeof options.socketServer&&options.socketServer.url&&"string"==typeof options.socketServer.url&&(socketServer={url:options.socketServer.url,ports:Array.isArray(options.socketServer.ports)&&options.socketServer.ports.length>0?options.socketServer.ports:[],protocol:options.socketServer.protocol&&"string"==typeof options.socketServer.protocol?options.socketServer.protocol:null})),options.iceServer&&(iceServer="string"==typeof options.iceServer?{urls:[options.iceServer]}:Array.isArray(options.iceServer)&&options.iceServer.length>0&&options.iceServer[0]&&"string"==typeof options.iceServer[0]?{urls:options.iceServer}:null),
"string"==typeof options.TURNServerTransport)for(var ttType in self.TURN_TRANSPORT)if(self.TURN_TRANSPORT.hasOwnProperty(ttType)&&self.TURN_TRANSPORT[ttType]===options.TURNServerTransport){TURNTransport=options.TURNServerTransport;break}if(options.audioCodec&&("string"==typeof options.audioCodec&&options.audioCodec!==self.AUDIO_CODEC.AUTO||"object"==typeof options.audioCodec&&options.audioCodec.codec&&"string"==typeof options.audioCodec.codec&&options.audioCodec.codec!==self.AUDIO_CODEC.AUTO))for(var acType in self.AUDIO_CODEC)if(self.AUDIO_CODEC.hasOwnProperty(acType)){if("string"==typeof options.audioCodec&&self.AUDIO_CODEC[acType]===options.audioCodec){audioCodec=options.audioCodec;break}if("object"==typeof options.audioCodec&&self.AUDIO_CODEC[acType]===options.audioCodec.codec){audioCodec={codec:options.audioCodec.codec,samplingRate:"number"==typeof options.audioCodec.samplingRate&&options.audioCodec.samplingRate>0?options.audioCodec.samplingRate:null,channels:"number"==typeof options.audioCodec.channels&&options.audioCodec.channels>0?options.audioCodec.channels:null};break}}if(options.videoCodec&&("string"==typeof options.videoCodec&&options.videoCodec!==self.VIDEO_CODEC.AUTO||"object"==typeof options.videoCodec&&options.videoCodec.codec&&"string"==typeof options.videoCodec.codec&&options.videoCodec.codec!==self.VIDEO_CODEC.AUTO))for(var vcType in self.VIDEO_CODEC)if(self.VIDEO_CODEC.hasOwnProperty(vcType)){if("string"==typeof options.videoCodec&&self.VIDEO_CODEC[vcType]===options.videoCodec){videoCodec=options.videoCodec;break}if("object"==typeof options.videoCodec&&self.VIDEO_CODEC[vcType]===options.videoCodec.codec){videoCodec={codec:options.videoCodec.codec,samplingRate:"number"==typeof options.videoCodec.samplingRate&&options.videoCodec.samplingRate>0?options.videoCodec.samplingRate:null};break}}if("string"==typeof options.priorityWeightScheme)for(var pwsType in self.PRIORITY_WEIGHT_SCHEME)if(self.PRIORITY_WEIGHT_SCHEME.hasOwnProperty(pwsType)&&self.PRIORITY_WEIGHT_SCHEME[pwsType]===options.priorityWeightScheme){priorityWeightScheme=options.priorityWeightScheme;break}options.codecParams&&"object"==typeof options.codecParams&&(options.codecParams.audio&&"object"==typeof options.codecParams.audio&&options.codecParams.audio.opus&&"object"==typeof options.codecParams.audio.opus&&(codecParams.audio.opus={stereo:"boolean"==typeof options.codecParams.audio.opus.stereo?options.codecParams.audio.opus.stereo:null,"sprop-stereo":"boolean"==typeof options.codecParams.audio.opus["sprop-stereo"]?options.codecParams.audio.opus["sprop-stereo"]:null,usedtx:"boolean"==typeof options.codecParams.audio.opus.usedtx?options.codecParams.audio.opus.usedtx:null,useinbandfec:"boolean"==typeof options.codecParams.audio.opus.useinbandfec?options.codecParams.audio.opus.useinbandfec:null,maxplaybackrate:"number"==typeof options.codecParams.audio.opus.maxplaybackrate&&options.codecParams.audio.opus.maxplaybackrate>=8e3&&options.codecParams.audio.opus.maxplaybackrate<=48e3?options.codecParams.audio.opus.maxplaybackrate:null,minptime:"number"==typeof options.codecParams.audio.opus.minptime&&options.codecParams.audio.opus.minptime>=3?options.codecParams.audio.opus.minptime:null}),options.codecParams.video&&"object"==typeof options.codecParams.video&&(options.codecParams.video.h264&&"object"==typeof options.codecParams.video.h264&&(codecParams.video.h264={profileLevelId:options.codecParams.video.h264.profileLevelId&&"string"==typeof options.codecParams.video.h264.profileLevelId?options.codecParams.video.h264.profileLevelId:null,levelAsymmetryAllowed:"boolean"==typeof options.codecParams.video.h264.levelAsymmetryAllowed?options.codecParams.video.h264.levelAsymmetryAllowed:null,packetizationMode:"boolean"==typeof options.codecParams.video.h264.packetizationMode?options.codecParams.video.h264.packetizationMode:null}),options.codecParams.video.vp8&&"object"==typeof options.codecParams.video.vp8&&(codecParams.video.vp8={maxFs:"number"==typeof options.codecParams.video.vp8.maxFs?options.codecParams.video.vp8.maxFs:null,maxFr:"number"==typeof options.codecParams.video.vp8.maxFr?options.codecParams.video.vp8.maxFr:null}),options.codecParams.video.vp9&&"object"==typeof options.codecParams.video.vp9&&(codecParams.video.vp9={maxFs:"number"==typeof options.codecParams.video.vp9.maxFs?options.codecParams.video.vp9.maxFs:null,maxFr:"number"==typeof options.codecParams.video.vp9.maxFr?options.codecParams.video.vp9.maxFr:null}))),audioFallback=options.audioFallback||audioFallback,options.credentials&&"string"==typeof options.credentials.credentials&&"number"==typeof options.credentials.duration&&"string"==typeof options.credentials.startDateTime&&(startDateTime=options.credentials.startDateTime,duration=options.credentials.duration,credentials=options.credentials.credentials),!0===forceTURN&&(enableTURNServer=!0,enableSTUNServer=!1,filterCandidatesType.host=!0,filterCandidatesType.srflx=!0,filterCandidatesType.relay=!1)}if("edge"===window.webrtcDetectedBrowser&&(forceTURNSSL=!1,TURNTransport=self.TURN_TRANSPORT.UDP,enableDataChannel=!1),self._appKey=appKey,self._roomServer=roomServer,self._defaultRoom=defaultRoom,self._selectedRoom=room,self._path=roomServer+"/api/"+appKey+"/"+room,credentials&&startDateTime&&duration&&(self._roomStart=startDateTime,self._roomDuration=duration,self._roomCredentials=credentials,self._path+=credentials?"/"+startDateTime+"/"+duration+"?&cred="+credentials:""),self._path+=(credentials?"&":"?")+"rand="+(new Date).toISOString(),self._enableIceTrickle=enableIceTrickle,self._enableDataChannel=enableDataChannel,self._enableSTUN=enableSTUNServer,self._enableTURN=enableTURNServer,self._TURNTransport=TURNTransport,self._audioFallback=audioFallback,self._forceSSL=forceSSL,self._socketTimeout=socketTimeout,self._forceTURNSSL=forceTURNSSL,self._selectedAudioCodec=audioCodec,self._selectedVideoCodec=videoCodec,self._forceTURN=forceTURN,self._usePublicSTUN=usePublicSTUN,self._disableVideoFecCodecs=disableVideoFecCodecs,self._disableComfortNoiseCodec=disableComfortNoiseCodec,self._filterCandidatesType=filterCandidatesType,self._throttlingTimeouts=throttleIntervals,self._throttlingShouldThrowError=throttleShouldThrowError,self._disableREMB=disableREMB,self._mcuUseRenegoRestart=mcuUseRenegoRestart,self._iceServer=iceServer,self._socketServer=socketServer,self._codecParams=codecParams,self._priorityWeightScheme=priorityWeightScheme,self._useEdgeWebRTC=useEdgeWebRTC,log.log("Init configuration:",{serverUrl:self._path,readyState:self._readyState,appKey:self._appKey,roomServer:self._roomServer,defaultRoom:self._defaultRoom,selectedRoom:self._selectedRoom,enableDataChannel:self._enableDataChannel,enableIceTrickle:self._enableIceTrickle,enableTURNServer:self._enableTURN,enableSTUNServer:self._enableSTUN,TURNTransport:self._TURNTransport,audioFallback:self._audioFallback,forceSSL:self._forceSSL,socketTimeout:self._socketTimeout,forceTURNSSL:self._forceTURNSSL,audioCodec:self._selectedAudioCodec,videoCodec:self._selectedVideoCodec,forceTURN:self._forceTURN,usePublicSTUN:self._usePublicSTUN,disableVideoFecCodecs:self._disableVideoFecCodecs,disableComfortNoiseCodec:self._disableComfortNoiseCodec,disableREMB:self._disableREMB,filterCandidatesType:self._filterCandidatesType,throttleIntervals:self._throttlingTimeouts,throttleShouldThrowError:self._throttlingShouldThrowError,mcuUseRenegoRestart:self._mcuUseRenegoRestart,iceServer:self._iceServer,socketServer:self._socketServer,codecParams:self._codecParams,priorityWeightScheme:self._priorityWeightScheme,useEdgeWebRTC:self._useEdgeWebRTC}),self._readyState=0,self._trigger("readyStateChange",self.READY_STATE_CHANGE.INIT,null,self._selectedRoom),"function"==typeof callback){var hasTriggered=!1,readyStateChangeFn=function(readyState,error){hasTriggered||(readyState===self.READY_STATE_CHANGE.COMPLETED?(log.log([null,"Socket",null,"Firing callback. Ready state change has met provided state ->"],readyState),hasTriggered=!0,self.off("readyStateChange",readyStateChangeFn),callback(null,{serverUrl:self._path,readyState:self._readyState,appKey:self._appKey,roomServer:self._roomServer,defaultRoom:self._defaultRoom,selectedRoom:self._selectedRoom,enableDataChannel:self._enableDataChannel,enableIceTrickle:self._enableIceTrickle,enableTURNServer:self._enableTURN,enableSTUNServer:self._enableSTUN,TURNTransport:self._TURNTransport,audioFallback:self._audioFallback,forceSSL:self._forceSSL,socketTimeout:self._socketTimeout,forceTURNSSL:self._forceTURNSSL,audioCodec:self._selectedAudioCodec,videoCodec:self._selectedVideoCodec,forceTURN:self._forceTURN,usePublicSTUN:self._usePublicSTUN,disableVideoFecCodecs:self._disableVideoFecCodecs,disableComfortNoiseCodec:self._disableComfortNoiseCodec,disableREMB:self._disableREMB,filterCandidatesType:self._filterCandidatesType,throttleIntervals:self._throttlingTimeouts,throttleShouldThrowError:self._throttlingShouldThrowError,mcuUseRenegoRestart:self._mcuUseRenegoRestart,iceServer:self._iceServer,socketServer:self._socketServer,codecParams:self._codecParams,priorityWeightScheme:self._priorityWeightScheme,useEdgeWebRTC:self._useEdgeWebRTC})):readyState===self.READY_STATE_CHANGE.ERROR&&(log.log([null,"Socket",null,"Firing callback. Ready state change has met provided state ->"],readyState),log.debug([null,"Socket",null,"Ready state met failure"],error),hasTriggered=!0,self.off("readyStateChange",readyStateChangeFn),callback({error:error.content instanceof Error?error.content:new Error(JSON.stringify(error.content)),errorCode:error.errorCode,status:error.status},null)))};self.on("readyStateChange",readyStateChangeFn)}self._loadInfo()},Skylink.prototype._requestServerInfo=function(method,url,callback,params){var self=this,useXDomainRequest="function"==typeof window.XDomainRequest||"object"==typeof window.XDomainRequest;self._socketUseXDR=useXDomainRequest;var xhr;url=self._forceSSL?"https:"+url:url,useXDomainRequest?(log.debug([null,"XMLHttpRequest",method,"Using XDomainRequest. XMLHttpRequest is now XDomainRequest"],{agent:window.webrtcDetectedBrowser,version:window.webrtcDetectedVersion}),xhr=new XDomainRequest,xhr.setContentType=function(contentType){xhr.contentType=contentType}):(log.debug([null,"XMLHttpRequest",method,"Using XMLHttpRequest"],{agent:window.webrtcDetectedBrowser,version:window.webrtcDetectedVersion}),xhr=new window.XMLHttpRequest,xhr.setContentType=function(contentType){xhr.setRequestHeader("Content-type",contentType)}),xhr.onload=function(){var response=xhr.responseText||xhr.response,status=xhr.status||200;log.debug([null,"XMLHttpRequest",method,"Received sessions parameters"],JSON.parse(response||"{}")),callback(status,JSON.parse(response||"{}"))},xhr.onerror=function(error){log.error([null,"XMLHttpRequest",method,"Failed retrieving information:"],{status:xhr.status}),self._readyState=-1,self._trigger("readyStateChange",self.READY_STATE_CHANGE.ERROR,{status:xhr.status||null,content:"Network error occurred. (Status: "+xhr.status+")",errorCode:self.READY_STATE_CHANGE_ERROR.XML_HTTP_REQUEST_ERROR},self._selectedRoom)},xhr.onprogress=function(){log.debug([null,"XMLHttpRequest",method,"Retrieving information and config from webserver. Url:"],url),log.debug([null,"XMLHttpRequest",method,"Provided parameters:"],params)},xhr.open(method,url,!0),params?(xhr.setContentType("application/json;charset=UTF-8"),xhr.send(JSON.stringify(params))):xhr.send()},Skylink.prototype._parseInfo=function(info){if(log.log("Parsing parameter from server",info),!info.pc_constraints&&!info.offer_constraints)return void this._trigger("readyStateChange",this.READY_STATE_CHANGE.ERROR,{status:200,content:info.info,errorCode:info.error},self._selectedRoom);log.debug("Peer connection constraints:",info.pc_constraints),log.debug("Offer constraints:",info.offer_constraints),this._key=info.cid,this._appKeyOwner=info.apiOwner,this._signalingServer=info.ipSigserver,this._isPrivileged=info.isPrivileged,this._autoIntroduce=info.autoIntroduce,this._user={uid:info.username,token:info.userCred,timeStamp:info.timeStamp,streams:[],info:{}},this._room={id:info.room_key,token:info.roomCred,startDateTime:info.start,duration:info.len,connection:{peerConstraints:JSON.parse(info.pc_constraints),peerConfig:null,offerConstraints:JSON.parse(info.offer_constraints),sdpConstraints:{mandatory:{OfferToReceiveAudio:!0,OfferToReceiveVideo:!0}},mediaConstraints:JSON.parse(info.media_constraints)}},this._socketPorts={"http:":info.httpPortList,"https:":info.httpsPortList},this._readyState=2,this._trigger("readyStateChange",this.READY_STATE_CHANGE.COMPLETED,null,this._selectedRoom),log.info("Parsed parameters from webserver. Ready for web-realtime communication")},Skylink.prototype._loadInfo=function(){var self=this,adapter=function(){try{return window.AdapterJS||AdapterJS}catch(error){return!1}}();if(!adapter||"function"!=typeof adapter.webRTCReady){return void self._trigger("readyStateChange",self.READY_STATE_CHANGE.ERROR,{status:null,content:"AdapterJS dependency is not loaded or incorrect AdapterJS dependency is used",errorCode:self.READY_STATE_CHANGE_ERROR.ADAPTER_NO_LOADED},self._selectedRoom)}return window.io?window.XMLHttpRequest?self._path?void adapter.webRTCReady(function(){if(self._isUsingPlugin=!!adapter.WebRTCPlugin.plugin&&!!adapter.WebRTCPlugin.plugin.VERSION,self._useSafariWebRTC=!self._isUsingPlugin&&"safari"===window.webrtcDetectedBrowser,!function(){try{var p=new window.RTCPeerConnection(null);return["object","function"].indexOf(typeof p.createOffer)>-1&&null!==p.createOffer}catch(e){return!1}}())return window.RTCPeerConnection&&self._isUsingPlugin?log.error("Plugin is not available. Please check plugin status."):log.error("WebRTC not supported. Please upgrade your browser"),self._readyState=-1,void self._trigger("readyStateChange",self.READY_STATE_CHANGE.ERROR,{status:null,content:self._isUsingPlugin&&window.RTCPeerConnection?"Plugin is not available":"WebRTC not available",errorCode:self.READY_STATE_CHANGE_ERROR.NO_WEBRTC_SUPPORT},self._selectedRoom);self._getCodecsSupport(function(error){return error?(log.error(error),self._readyState=-1,void self._trigger("readyStateChange",self.READY_STATE_CHANGE.ERROR,{status:null,content:error.message||error.toString(),errorCode:self.READY_STATE_CHANGE_ERROR.PARSE_CODECS},self._selectedRoom)):0===Object.keys(self._currentCodecSupport.audio).length&&0===Object.keys(self._currentCodecSupport.video).length?(log.error("No audio/video codecs available to start connection."),self._readyState=-1,void self._trigger("readyStateChange",self.READY_STATE_CHANGE.ERROR,{status:null,content:"No audio/video codecs available to start connection",errorCode:self.READY_STATE_CHANGE_ERROR.PARSE_CODECS},self._selectedRoom)):(self._readyState=1,self._trigger("readyStateChange",self.READY_STATE_CHANGE.LOADING,null,self._selectedRoom),void self._requestServerInfo("GET",self._path,function(status,response){if(200!==status){var errorMessage="XMLHttpRequest status not OK\nStatus was: "+status;return self._readyState=0,void self._trigger("readyStateChange",self.READY_STATE_CHANGE.ERROR,{status:status,content:response?response.info||errorMessage:errorMessage,errorCode:response.error||self.READY_STATE_CHANGE_ERROR.INVALID_XMLHTTPREQUEST_STATUS},self._selectedRoom)}self._parseInfo(response)}))})}):(log.error("Skylink is not initialised. Please call init() first"),self._readyState=-1,void self._trigger("readyStateChange",self.READY_STATE_CHANGE.ERROR,{status:null,content:"No API Path is found",errorCode:self.READY_STATE_CHANGE_ERROR.NO_PATH},self._selectedRoom)):(log.error("XMLHttpRequest not supported. Please upgrade your browser"),self._readyState=-1,void self._trigger("readyStateChange",self.READY_STATE_CHANGE.ERROR,{status:null,content:"XMLHttpRequest not available",errorCode:self.READY_STATE_CHANGE_ERROR.NO_XMLHTTPREQUEST_SUPPORT},self._selectedRoom)):(log.error("Socket.io not loaded. Please load socket.io"),self._readyState=-1,void self._trigger("readyStateChange",self.READY_STATE_CHANGE.ERROR,{status:null,content:"Socket.io not found",errorCode:self.READY_STATE_CHANGE_ERROR.NO_SOCKET_IO},self._selectedRoom))},Skylink.prototype._initSelectedRoom=function(room,callback){var self=this;if("function"==typeof room||void 0===room)return void log.error("Invalid room provided. Room:",room);var defaultRoom=self._defaultRoom,initOptions={appKey:self._appKey,roomServer:self._roomServer,defaultRoom:room,enableDataChannel:self._enableDataChannel,enableIceTrickle:self._enableIceTrickle,enableTURNServer:self._enableTURN,enableSTUNServer:self._enableSTUN,TURNServerTransport:self._TURNTransport,audioFallback:self._audioFallback,forceSSL:self._forceSSL,socketTimeout:self._socketTimeout,forceTURNSSL:self._forceTURNSSL,audioCodec:self._selectedAudioCodec,videoCodec:self._selectedVideoCodec,forceTURN:self._forceTURN,usePublicSTUN:self._usePublicSTUN,disableVideoFecCodecs:self._disableVideoFecCodecs,disableComfortNoiseCodec:self._disableComfortNoiseCodec,disableREMB:self._disableREMB,filterCandidatesType:self._filterCandidatesType,throttleIntervals:self._throttlingTimeouts,throttleShouldThrowError:self._throttlingShouldThrowError,mcuUseRenegoRestart:self._mcuUseRenegoRestart,iceServer:self._iceServer?self._iceServer.urls:null,socketServer:self._socketServer?self._socketServer:null,codecParams:self._codecParams?self._codecParams:null,priorityWeightScheme:self._priorityWeightScheme?self._priorityWeightScheme:null,useEdgeWebRTC:self._useEdgeWebRTC};self._roomCredentials&&(initOptions.credentials={credentials:self._roomCredentials,duration:self._roomDuration,startDateTime:self._roomStart}),self.init(initOptions,function(error,success){self._defaultRoom=defaultRoom,error?callback(error,null):callback(null,success)})},Skylink.prototype.LOG_LEVEL={DEBUG:4,LOG:3,INFO:2,WARN:1,ERROR:0,NONE:-1};var _LOG_KEY="SkylinkJS",_LOG_LEVELS=["error","warn","info","log","debug"],_logLevel=0,_enableDebugMode=!1,_enableDebugStack=!1,_enableDebugTrace=!1,_storedLogs=[],_getStoredLogsFn=function(logLevel){if(void 0===logLevel)return _storedLogs;for(var returnLogs=[],i=0;i<_storedLogs.length;i++)_storedLogs[i][1]===_LOG_LEVELS[logLevel]&&returnLogs.push(_storedLogs[i]);return returnLogs},_clearAllStoredLogsFn=function(){_storedLogs=[]},_printAllStoredLogsFn=function(){for(var i=0;i<_storedLogs.length;i++){var timestamp=_storedLogs[i][0],log="undefined"!==console[_storedLogs[i][1]]?_storedLogs[i][1]:"log",message=_storedLogs[i][2],debugObject=_storedLogs[i][3];void 0!==debugObject?console[log](message,debugObject,timestamp):console[log](message,timestamp)}},SkylinkLogs={getLogs:_getStoredLogsFn,clearAllLogs:_clearAllStoredLogsFn,printAllLogs:_printAllStoredLogsFn},_logFn=function(logLevel,message,debugObject){var outputLog=_LOG_KEY;if("object"==typeof message){if(outputLog+=message[0]?" ["+message[0]+"] -":" -",outputLog+=message[1]?" <<"+message[1]+">>":"",message[2])if(outputLog+=" ","object"==typeof message[2])for(var i=0;i<message[2].length;i++)outputLog+="("+message[2][i]+")";else outputLog+="("+message[2]+")";outputLog+=" "+message[3]}else outputLog+=" - "+message;if(_enableDebugMode&&_enableDebugStack){var logItem=[new Date,_LOG_LEVELS[logLevel],outputLog];void 0!==debugObject&&logItem.push(debugObject),_storedLogs.push(logItem)}if(_logLevel>=logLevel)if(logLevel=void 0===console[_LOG_LEVELS[logLevel]]?3:logLevel,_enableDebugMode&&_enableDebugTrace){void 0===console.trace&&logLevel[3];void 0!==debugObject?(console[_LOG_LEVELS[logLevel]](outputLog,debugObject),void 0!==console.trace&&console.trace("")):(console[_LOG_LEVELS[logLevel]](outputLog),void 0!==console.trace&&console.trace(""))}else void 0!==debugObject?console[_LOG_LEVELS[logLevel]](outputLog,debugObject):console[_LOG_LEVELS[logLevel]](outputLog)},log={debug:function(message,object){_logFn(4,message,object)},log:function(message,object){_logFn(3,message,object)},info:function(message,object){_logFn(2,message,object)},warn:function(message,object){_logFn(1,message,object)},error:function(message,object){_logFn(0,message,object)}};Skylink.prototype.setLogLevel=function(logLevel){for(var level in this.LOG_LEVEL)if(this.LOG_LEVEL[level]===logLevel)return _logLevel=logLevel,void log.log([null,"Log",level,"Log level exists. Level is set"]);log.error([null,"Log",level,"Log level does not exist. Level is not set"])},Skylink.prototype.setDebugMode=function(isDebugMode){isDebugMode&&"object"==typeof isDebugMode?(_enableDebugMode=!0,_enableDebugTrace=!0===isDebugMode.trace,_enableDebugStack=!0===isDebugMode.storeLogs):!0===isDebugMode?(_enableDebugMode=!0,_enableDebugTrace=!0,_enableDebugStack=!0):(_enableDebugMode=!1,_enableDebugTrace=!1,_enableDebugStack=!1)};Skylink.prototype.on=function(eventName,callback){"function"==typeof callback?(this._EVENTS[eventName]=this._EVENTS[eventName]||[],this._EVENTS[eventName].push(callback),log.log([null,"Event",eventName,"Event is subscribed"])):log.error([null,"Event",eventName,"Provided parameter is not a function"])},Skylink.prototype.once=function(eventName,callback,condition,fireAlways){"boolean"==typeof condition&&(fireAlways=condition,condition=null),fireAlways=void 0!==fireAlways&&fireAlways,condition="function"!=typeof condition?function(){return!0}:condition,"function"==typeof callback?(this._onceEvents[eventName]=this._onceEvents[eventName]||[],this._onceEvents[eventName].push([callback,condition,fireAlways]),log.log([null,"Event",eventName,"Event is subscribed on condition"])):log.error([null,"Event",eventName,"Provided callback is not a function"])},Skylink.prototype.off=function(eventName,callback){if(eventName&&"string"==typeof eventName){if(void 0===callback)return this._EVENTS[eventName]=[],this._onceEvents[eventName]=[],void log.log([null,"Event",eventName,"All events are unsubscribed"]);for(var arr=this._EVENTS[eventName]||[],once=this._onceEvents[eventName]||[],i=0;i<arr.length;i++)if(arr[i]===callback){log.log([null,"Event",eventName,"Event is unsubscribed"]),arr.splice(i,1);break}if(void 0!==once)for(var j=0;j<once.length;j++)if(once[j][0]===callback){log.log([null,"Event",eventName,"One-time Event is unsubscribed"]),once.splice(j,1);break}}else this._EVENTS={},this._onceEvents={}},Skylink.prototype._trigger=function(eventName){var args=Array.prototype.slice.call(arguments),arr=this._EVENTS[eventName],once=this._onceEvents[eventName]||null;if(args.shift(),arr)for(var i=0;i<arr.length;i++)try{if(log.log([null,"Event",eventName,"Event is fired"]),!1===arr[i].apply(this,args))break}catch(error){throw log.error([null,"Event",eventName,"Exception occurred in event:"],error),error}if(once)for(var j=0;j<once.length;j++)if(!0===once[j][1].apply(this,args)){if(log.log([null,"Event",eventName,"Condition is met. Firing event"]),!1===once[j][0].apply(this,args))break;once[j]&&!once[j][2]&&(log.log([null,"Event",eventName,"Removing event after firing once"]),once.splice(j,1),j--)}else log.log([null,"Event",eventName,"Condition is still not met. Holding event from being fired"]);log.log([null,"Event",eventName,"Event is triggered"])},Skylink.prototype._condition=function(eventName,callback,checkFirst,condition,fireAlways){if("boolean"==typeof condition&&(fireAlways=condition,condition=null),"function"==typeof callback&&"function"==typeof checkFirst){if(checkFirst())return log.log([null,"Event",eventName,"First condition is met. Firing callback"]),void callback();log.log([null,"Event",eventName,"First condition is not met. Subscribing to event"]),this.once(eventName,callback,condition,fireAlways)}else log.error([null,"Event",eventName,"Provided callback or checkFirst is not a function"])},Skylink.prototype._wait=function(callback,condition,intervalTime,fireAlways){if(fireAlways=void 0!==fireAlways&&fireAlways,"function"==typeof callback&&"function"==typeof condition){if(condition())return log.log([null,"Event",null,"Condition is met. Firing callback"]),void callback();log.log([null,"Event",null,"Condition is not met. Doing a check."]),intervalTime="number"==typeof intervalTime?intervalTime:50;var doWait=setInterval(function(){condition()&&(log.log([null,"Event",null,"Condition is met after waiting. Firing callback"]),fireAlways||clearInterval(doWait),callback())},intervalTime)}else"function"!=typeof callback&&log.error([null,"Event",null,"Provided callback is not a function"]),"function"!=typeof condition&&log.error([null,"Event",null,"Provided condition is not a function"])},Skylink.prototype._throttle=function(func,prop,wait){var self=this,now=(new Date).getTime();self._timestamp[prop]&&now-self._timestamp[prop]<wait?func(!1):(func(!0),self._timestamp[prop]=now)},Skylink.prototype.SOCKET_ERROR={CONNECTION_FAILED:0,RECONNECTION_FAILED:-1,CONNECTION_ABORTED:-2,RECONNECTION_ABORTED:-3,RECONNECTION_ATTEMPT:-4},Skylink.prototype.SOCKET_FALLBACK={NON_FALLBACK:"nonfallback",FALLBACK_PORT:"fallbackPortNonSSL",FALLBACK_SSL_PORT:"fallbackPortSSL",LONG_POLLING:"fallbackLongPollingNonSSL",LONG_POLLING_SSL:"fallbackLongPollingSSL"},Skylink.prototype._sendChannelMessage=function(message){var self=this,interval=1e3,throughput=16;if(!self._channelOpen||!self._user||!self._socket)return void log.warn([message.target||"Server","Socket",message.type,"Dropping of message as Socket connection is not opened or is at incorrect step ->"],message);self._user.sid&&!self._peerMessagesStamps[self._user.sid]&&(self._peerMessagesStamps[self._user.sid]={userData:0,audioMuted:0,videoMuted:0});var checkStampFn=function(statusMessage){return statusMessage.type===self._SIG_MESSAGE_TYPE.UPDATE_USER?!!self._user.sid&&statusMessage.stamp>self._peerMessagesStamps[self._user.sid].userData:statusMessage.type===self._SIG_MESSAGE_TYPE.MUTE_VIDEO?!!self._user.sid&&statusMessage.stamp>self._peerMessagesStamps[self._user.sid].videoMuted:statusMessage.type!==self._SIG_MESSAGE_TYPE.MUTE_AUDIO||!!self._user.sid&&statusMessage.stamp>self._peerMessagesStamps[self._user.sid].audioMuted},setStampFn=function(statusMessage){statusMessage.type===self._SIG_MESSAGE_TYPE.UPDATE_USER?self._peerMessagesStamps[self._user.sid].userData=statusMessage.stamp:statusMessage.type===self._SIG_MESSAGE_TYPE.MUTE_VIDEO?self._peerMessagesStamps[self._user.sid].videoMuted=statusMessage.stamp:statusMessage.type===self._SIG_MESSAGE_TYPE.MUTE_AUDIO&&(self._peerMessagesStamps[self._user.sid].audioMuted=statusMessage.stamp)},setQueueFn=function(){log.debug([null,"Socket",null,"Starting queue timeout"]),self._socketMessageTimeout=setTimeout(function(){if((new Date).getTime()-self._timestamp.socketMessage<=interval)return log.debug([null,"Socket",null,"Restarting queue timeout"]),void setQueueFn();startSendingQueuedMessageFn()},interval-((new Date).getTime()-self._timestamp.socketMessage))},triggerEventFn=function(eventMessage){eventMessage.type===self._SIG_MESSAGE_TYPE.PUBLIC_MESSAGE&&self._trigger("incomingMessage",{content:eventMessage.data,isPrivate:!1,targetPeerId:null,listOfPeers:Object.keys(self._peerInformations),isDataChannel:!1,senderPeerId:self._user.sid},self._user.sid,self.getPeerInfo(),!0)},sendGroupMessageFn=function(groupMessageList){if(self._socketMessageTimeout=null,!(self._channelOpen&&self._user&&self._user.sid&&self._socket))return void log.warn([message.target||"Server","Socket",null,"Dropping of group messages as Socket connection is not opened or is at incorrect step ->"],groupMessageList);for(var strGroupMessageList=[],stamps={userData:0,audioMuted:0,videoMuted:0},k=0;k<groupMessageList.length;k++)checkStampFn(groupMessageList[k])&&(groupMessageList[k].type===self._SIG_MESSAGE_TYPE.UPDATE_USER&&groupMessageList[k].stamp>self._peerMessagesStamps[self._user.sid].userData&&groupMessageList[k].stamp>stamps.userData?stamps.userData=groupMessageList[k].stamp:groupMessageList[k].type===self._SIG_MESSAGE_TYPE.MUTE_AUDIO&&groupMessageList[k].stamp>self._peerMessagesStamps[self._user.sid].audioMuted&&groupMessageList[k].stamp>stamps.audioMuted?stamps.audioMuted=groupMessageList[k].stamp:groupMessageList[k].type===self._SIG_MESSAGE_TYPE.MUTE_VIDEO&&groupMessageList[k].stamp>self._peerMessagesStamps[self._user.sid].videoMuted&&groupMessageList[k].stamp>stamps.videoMuted&&(stamps.videoMuted=groupMessageList[k].stamp));for(var i=0;i<groupMessageList.length;i++)groupMessageList[i].type===self._SIG_MESSAGE_TYPE.UPDATE_USER&&groupMessageList[i].stamp<stamps.userData||groupMessageList[i].type===self._SIG_MESSAGE_TYPE.MUTE_AUDIO&&groupMessageList[i].stamp<stamps.audioMuted||groupMessageList[i].type===self._SIG_MESSAGE_TYPE.MUTE_VIDEO&&groupMessageList[i].stamp<stamps.videoMuted?(log.warn([message.target||"Server","Socket",groupMessageList[i],"Dropping of outdated status message ->"],clone(groupMessageList[i])),groupMessageList.splice(i,1),i--):strGroupMessageList.push(JSON.stringify(groupMessageList[i]));if(strGroupMessageList.length>0){var groupMessage={type:self._SIG_MESSAGE_TYPE.GROUP,lists:strGroupMessageList,mid:self._user.sid,rid:self._room.id};log.log([message.target||"Server","Socket",groupMessage.type,"Sending queued grouped message (max: 16 per group) ->"],clone(groupMessage)),self._socket.send(JSON.stringify(groupMessage)),self._timestamp.socketMessage=(new Date).getTime();for(var j=0;j<groupMessageList.length;j++)setStampFn(groupMessageList[j]),triggerEventFn(groupMessageList[j])}},startSendingQueuedMessageFn=function(){self._socketMessageQueue.length>0&&(self._socketMessageQueue.length<throughput?sendGroupMessageFn(self._socketMessageQueue.splice(0,self._socketMessageQueue.length)):(sendGroupMessageFn(self._socketMessageQueue.splice(0,throughput)),setQueueFn()))};if(self._groupMessageList.indexOf(message.type)>-1)if(self._timestamp.socketMessage&&(new Date).getTime()-self._timestamp.socketMessage<=interval)log.debug([message.target||"Server","Socket",message.type,"Queueing socket message to prevent message drop ->"],clone(message)),self._socketMessageQueue.push(message),self._socketMessageTimeout||setQueueFn();else{if(!checkStampFn(message))return void log.warn([message.target||"Server","Socket",message.type,"Dropping of outdated status message ->"],clone(message));self._socketMessageTimeout&&clearTimeout(self._socketMessageTimeout),log.log([message.target||"Server","Socket",message.type,"Sending message ->"],clone(message)),self._socket.send(JSON.stringify(message)),setStampFn(message),triggerEventFn(message),self._timestamp.socketMessage=(new Date).getTime()}else log.log([message.target||"Server","Socket",message.type,"Sending message ->"],clone(message)),self._socket.send(JSON.stringify(message)),message.type===self._SIG_MESSAGE_TYPE.BYE&&self._inRoom&&self._user&&self._user.sid&&message.mid===self._user.sid&&(self.leaveRoom(!1),self._trigger("sessionDisconnect",self._user.sid,self.getPeerInfo()))},Skylink.prototype._createSocket=function(type){var self=this,options={forceNew:!0,reconnection:!0,timeout:self._socketTimeout,reconnectionAttempts:2,reconnectionDelayMax:5e3,reconnectionDelay:1e3,transports:["websocket"]},ports=self._socketServer&&"object"==typeof self._socketServer&&Array.isArray(self._socketServer.ports)&&self._socketServer.ports.length>0?self._socketServer.ports:self._socketPorts[self._signalingServerProtocol],fallbackType=null;null===self._signalingServerPort?(self._signalingServerPort=ports[0],fallbackType=self.SOCKET_FALLBACK.NON_FALLBACK):ports.indexOf(self._signalingServerPort)===ports.length-1||"string"==typeof self._socketServer?"WebSocket"===type?(type="Polling",self._signalingServerPort=ports[0]):self._socketSession.finalAttempts++:self._signalingServerPort=ports[ports.indexOf(self._signalingServerPort)+1],"Polling"===type&&(options.reconnectionDelayMax=1e3,options.reconnectionAttempts=4,options.transports=["xhr-polling","jsonp-polling","polling"]);var url=self._signalingServerProtocol+"//"+self._signalingServer+":"+self._signalingServerPort,retries=0
;self._socketServer&&(url="string"==typeof self._socketServer?self._socketServer:(self._socketServer.protocol?self._socketServer.protocol:self._signalingServerProtocol)+"//"+self._socketServer.url+":"+self._signalingServerPort),self._socketSession.transportType=type,self._socketSession.socketOptions=options,self._socketSession.socketServer=url,null===fallbackType&&(fallbackType="http:"===self._signalingServerProtocol?"Polling"===type?self.SOCKET_FALLBACK.LONG_POLLING:self.SOCKET_FALLBACK.FALLBACK_PORT:"Polling"===type?self.SOCKET_FALLBACK.LONG_POLLING_SSL:self.SOCKET_FALLBACK.FALLBACK_SSL_PORT,self._socketSession.attempts++,self._trigger("socketError",self.SOCKET_ERROR.RECONNECTION_ATTEMPT,null,fallbackType,clone(self._socketSession)),self._trigger("channelRetry",fallbackType,self._socketSession.attempts,clone(self._socketSession))),self._socket&&self._closeChannel(),self._channelOpen=!1,log.log("Opening channel with signaling server url:",clone(self._socketSession));try{self._socket=io.connect(url,options)}catch(error){return log.error("Failed creating socket connection object ->",error),fallbackType===self.SOCKET_FALLBACK.NON_FALLBACK?self._trigger("socketError",self.SOCKET_ERROR.CONNECTION_FAILED,error,fallbackType,clone(self._socketSession)):self._trigger("socketError",self.SOCKET_ERROR.RECONNECTION_FAILED,error,fallbackType,clone(self._socketSession)),void self._trigger("socketError",self.SOCKET_ERROR.RECONNECTION_ABORTED,new Error("Reconnection aborted as there no more available ports, transports and final attempts left."),fallbackType,clone(self._socketSession))}self._socket.on("reconnect_attempt",function(attempt){retries++,self._socketSession.attempts++,self._trigger("channelRetry",fallbackType,self._socketSession.attempts,clone(self._socketSession))}),self._socket.on("reconnect_failed",function(){fallbackType===self.SOCKET_FALLBACK.NON_FALLBACK?self._trigger("socketError",self.SOCKET_ERROR.CONNECTION_FAILED,new Error('Failed connection with transport "'+type+'" and port '+self._signalingServerPort+"."),fallbackType,clone(self._socketSession)):self._trigger("socketError",self.SOCKET_ERROR.RECONNECTION_FAILED,new Error('Failed reconnection with transport "'+type+'" and port '+self._signalingServerPort+"."),fallbackType,clone(self._socketSession)),self._socketSession.finalAttempts<2?self._createSocket(type):self._trigger("socketError",self.SOCKET_ERROR.RECONNECTION_ABORTED,new Error("Reconnection aborted as there no more available ports, transports and final attempts left."),fallbackType,clone(self._socketSession))}),self._socket.on("connect",function(){self._channelOpen||(log.log([null,"Socket",null,"Channel opened"]),self._channelOpen=!0,self._trigger("channelOpen",clone(self._socketSession)))}),self._socket.on("reconnect",function(){self._channelOpen||(log.log([null,"Socket",null,"Channel opened"]),self._channelOpen=!0,self._trigger("channelOpen",clone(self._socketSession)))}),self._socket.on("error",function(error){if(error&&error.message.indexOf("xhr poll error")>-1)return log.error([null,"Socket",null,"XHR poll connection unstable. Disconnecting.. ->"],error),void self._closeChannel();log.error([null,"Socket",null,"Exception occurred ->"],error),self._trigger("channelError",error,clone(self._socketSession))}),self._socket.on("disconnect",function(){self._channelOpen&&(self._channelOpen=!1,self._trigger("channelClose",clone(self._socketSession)),log.log([null,"Socket",null,"Channel closed"]),self._inRoom&&self._user&&self._user.sid&&(self.leaveRoom(!1),self._trigger("sessionDisconnect",self._user.sid,self.getPeerInfo())))}),self._socket.on("message",function(messageStr){var message=JSON.parse(messageStr);if(log.log([null,"Socket",null,"Received message ->"],message),message.type===self._SIG_MESSAGE_TYPE.GROUP){log.debug("Bundle of "+message.lists.length+" messages");for(var i=0;i<message.lists.length;i++){var indiMessage=JSON.parse(message.lists[i]);self._processSigMessage(indiMessage),self._trigger("channelMessage",indiMessage,clone(self._socketSession))}}else self._processSigMessage(message),self._trigger("channelMessage",message,clone(self._socketSession))})},Skylink.prototype._openChannel=function(){var self=this;if(self._channelOpen)return void log.error([null,"Socket",null,"Unable to instantiate a new channel connection as there is already an ongoing channel connection"]);if(self._readyState!==self.READY_STATE_CHANGE.COMPLETED)return void log.error([null,"Socket",null,"Unable to instantiate a new channel connection as readyState is not ready"]);self._forceSSL?self._signalingServerProtocol="https:":self._signalingServerProtocol=window.location.protocol;var socketType="WebSocket";window.WebSocket||(socketType="Polling"),self._socketSession.finalAttempts=0,self._socketSession.attempts=0,self._signalingServerPort=null,self._createSocket(socketType)},Skylink.prototype._closeChannel=function(){this._socket&&(this._socket.removeAllListeners("connect_error"),this._socket.removeAllListeners("reconnect_attempt"),this._socket.removeAllListeners("reconnect_error"),this._socket.removeAllListeners("reconnect_failed"),this._socket.removeAllListeners("connect"),this._socket.removeAllListeners("reconnect"),this._socket.removeAllListeners("error"),this._socket.removeAllListeners("disconnect"),this._socket.removeAllListeners("message")),this._channelOpen&&(this._socket&&this._socket.disconnect(),log.log([null,"Socket",null,"Channel closed"]),this._channelOpen=!1,this._trigger("channelClose",clone(this._socketSession)),this._inRoom&&this._user&&this._user.sid&&(this.leaveRoom(!1),this._trigger("sessionDisconnect",this._user.sid,this.getPeerInfo()))),this._socket=null},Skylink.prototype.SM_PROTOCOL_VERSION="0.1.2.4",Skylink.prototype._SIG_MESSAGE_TYPE={JOIN_ROOM:"joinRoom",IN_ROOM:"inRoom",ENTER:"enter",WELCOME:"welcome",RESTART:"restart",OFFER:"offer",ANSWER:"answer",CANDIDATE:"candidate",BYE:"bye",REDIRECT:"redirect",UPDATE_USER:"updateUserEvent",ROOM_LOCK:"roomLockEvent",MUTE_VIDEO:"muteVideoEvent",MUTE_AUDIO:"muteAudioEvent",PUBLIC_MESSAGE:"public",PRIVATE_MESSAGE:"private",STREAM:"stream",GROUP:"group",GET_PEERS:"getPeers",PEER_LIST:"peerList",INTRODUCE:"introduce",INTRODUCE_ERROR:"introduceError",APPROACH:"approach",START_RECORDING:"startRecordingRoom",STOP_RECORDING:"stopRecordingRoom",RECORDING:"recordingEvent",END_OF_CANDIDATES:"endOfCandidates"},Skylink.prototype._groupMessageList=[Skylink.prototype._SIG_MESSAGE_TYPE.STREAM,Skylink.prototype._SIG_MESSAGE_TYPE.UPDATE_USER,Skylink.prototype._SIG_MESSAGE_TYPE.MUTE_AUDIO,Skylink.prototype._SIG_MESSAGE_TYPE.MUTE_VIDEO,Skylink.prototype._SIG_MESSAGE_TYPE.PUBLIC_MESSAGE],Skylink.prototype.sendMessage=function(message,targetPeerId){var listOfPeers=Object.keys(this._peerInformations),isPrivate=!1;if(Array.isArray(targetPeerId)?(listOfPeers=targetPeerId,isPrivate=!0):targetPeerId&&"string"==typeof targetPeerId&&(listOfPeers=[targetPeerId],isPrivate=!0),!this._inRoom||!this._socket||!this._user)return void log.error("Unable to send message as User is not in Room. ->",message);for(var i=0;i<listOfPeers.length;i++){var peerId=listOfPeers[i];this._peerInformations[peerId]?"MCU"===peerId?(listOfPeers.splice(i,1),i--):isPrivate&&(log.debug([peerId,"Socket",null,"Sending private message to Peer"]),this._sendChannelMessage({cid:this._key,data:message,mid:this._user.sid,rid:this._room.id,target:peerId,type:this._SIG_MESSAGE_TYPE.PRIVATE_MESSAGE})):(log.error([peerId,"Socket",null,"Dropping of sending message to Peer as Peer session does not exists"]),listOfPeers.splice(i,1),i--)}0===listOfPeers.length&&log.warn("Currently there are no Peers to send message to (unless the message is queued and there are Peer connected by then)."),isPrivate?this._trigger("incomingMessage",{content:message,isPrivate:isPrivate,targetPeerId:targetPeerId||null,listOfPeers:listOfPeers,isDataChannel:!1,senderPeerId:this._user.sid},this._user.sid,this.getPeerInfo(),!0):(log.debug([null,"Socket",null,"Broadcasting message to Peers"]),this._sendChannelMessage({cid:this._key,data:message,mid:this._user.sid,rid:this._room.id,type:this._SIG_MESSAGE_TYPE.PUBLIC_MESSAGE}))},Skylink.prototype.startRecording=function(callback){var self=this;if(!self._hasMCU){var noMCUError="Unable to start recording as MCU is not connected";return log.error(noMCUError),void("function"==typeof callback&&callback(new Error(noMCUError),null))}if(self._currentRecordingId){var hasRecordingSessionError="Unable to start recording as there is an existing recording in-progress";return log.error(hasRecordingSessionError),void("function"==typeof callback&&callback(new Error(hasRecordingSessionError),null))}"function"==typeof callback&&self.once("recordingState",function(state,recordingId){callback(null,recordingId)},function(state){return state===self.RECORDING_STATE.START}),self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.START_RECORDING,rid:self._room.id,target:"MCU"}),log.debug(["MCU","Recording",null,"Starting recording"])},Skylink.prototype.stopRecording=function(callback,callbackSuccessWhenLink){var self=this;if(!self._hasMCU){var noMCUError="Unable to stop recording as MCU is not connected";return log.error(noMCUError),void("function"==typeof callback&&callback(new Error(noMCUError),null))}if(!self._currentRecordingId){var noRecordingSessionError="Unable to stop recording as there is no recording in-progress";return log.error(noRecordingSessionError),void("function"==typeof callback&&callback(new Error(noRecordingSessionError),null))}if(self._recordingStartInterval){var recordingSecsRequiredError="Unable to stop recording as 4 seconds has not been recorded yet";return log.error(recordingSecsRequiredError),void("function"==typeof callback&&callback(new Error(recordingSecsRequiredError),null))}if("function"==typeof callback){var expectedRecordingId=self._currentRecordingId;self.once("recordingState",function(state,recordingId,link,error){if(callbackSuccessWhenLink)return error?void callback(error,null):void callback(null,{link:link,recordingId:recordingId});callback(null,recordingId)},function(state,recordingId){if(expectedRecordingId===recordingId)return callbackSuccessWhenLink?[self.RECORDING_STATE.LINK,self.RECORDING_STATE.ERROR].indexOf(state)>-1:state===self.RECORDING_STATE.STOP})}self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.STOP_RECORDING,rid:self._room.id,target:"MCU"}),log.debug(["MCU","Recording",null,"Stopping recording"])},Skylink.prototype.getRecordings=function(){return clone(this._recordings)},Skylink.prototype._processSigMessage=function(message,session){var origin=message.mid;if(origin&&origin!==this._user.sid||(origin="Server"),log.debug([origin,"Socket",message.type,"Received from peer ->"],clone(message)),message.mid===this._user.sid&&message.type!==this._SIG_MESSAGE_TYPE.REDIRECT&&message.type!==this._SIG_MESSAGE_TYPE.IN_ROOM)return void log.debug([origin,"Socket",message.type,"Ignoring message ->"],clone(message));switch(message.type){case this._SIG_MESSAGE_TYPE.PUBLIC_MESSAGE:this._publicMessageHandler(message);break;case this._SIG_MESSAGE_TYPE.PRIVATE_MESSAGE:this._privateMessageHandler(message);break;case this._SIG_MESSAGE_TYPE.IN_ROOM:this._inRoomHandler(message);break;case this._SIG_MESSAGE_TYPE.ENTER:this._enterHandler(message);break;case this._SIG_MESSAGE_TYPE.WELCOME:this._welcomeHandler(message);break;case this._SIG_MESSAGE_TYPE.RESTART:this._restartHandler(message);break;case this._SIG_MESSAGE_TYPE.OFFER:this._offerHandler(message);break;case this._SIG_MESSAGE_TYPE.ANSWER:this._answerHandler(message);break;case this._SIG_MESSAGE_TYPE.CANDIDATE:this._candidateHandler(message);break;case this._SIG_MESSAGE_TYPE.BYE:this._byeHandler(message);break;case this._SIG_MESSAGE_TYPE.REDIRECT:this._redirectHandler(message);break;case this._SIG_MESSAGE_TYPE.UPDATE_USER:this._updateUserEventHandler(message);break;case this._SIG_MESSAGE_TYPE.MUTE_VIDEO:this._muteVideoEventHandler(message);break;case this._SIG_MESSAGE_TYPE.MUTE_AUDIO:this._muteAudioEventHandler(message);break;case this._SIG_MESSAGE_TYPE.STREAM:this._streamEventHandler(message);break;case this._SIG_MESSAGE_TYPE.ROOM_LOCK:this._roomLockEventHandler(message);break;case this._SIG_MESSAGE_TYPE.PEER_LIST:this._peerListEventHandler(message);break;case this._SIG_MESSAGE_TYPE.INTRODUCE_ERROR:this._introduceErrorEventHandler(message);break;case this._SIG_MESSAGE_TYPE.APPROACH:this._approachEventHandler(message);break;case this._SIG_MESSAGE_TYPE.RECORDING:this._recordingEventHandler(message);break;case this._SIG_MESSAGE_TYPE.END_OF_CANDIDATES:this._endOfCandidatesHandler(message);break;default:log.error([message.mid,"Socket",message.type,"Unsupported message ->"],clone(message))}},Skylink.prototype._peerListEventHandler=function(message){var self=this;self._peerList=message.result,log.log(["Server",null,message.type,"Received list of peers"],self._peerList),self._trigger("getPeersStateChange",self.GET_PEERS_STATE.RECEIVED,self._user.sid,self._peerList)},Skylink.prototype._endOfCandidatesHandler=function(message){var self=this,targetMid=message.mid;self._peerConnections[targetMid]&&self._peerConnections[targetMid].signalingState!==self.PEER_CONNECTION_STATE.CLOSED&&(self._peerEndOfCandidatesCounter[targetMid].expectedLen=message.noOfExpectedCandidates||0,self._signalingEndOfCandidates(targetMid))},Skylink.prototype._introduceErrorEventHandler=function(message){var self=this;log.log(["Server",null,message.type,"Introduce failed. Reason: "+message.reason]),self._trigger("introduceStateChange",self.INTRODUCE_STATE.ERROR,self._user.sid,message.sendingPeerId,message.receivingPeerId,message.reason)},Skylink.prototype._approachEventHandler=function(message){var self=this;log.log(["Server",null,message.type,"Approaching peer"],message.target),self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ENTER,self._user.sid);var enterMsg={type:self._SIG_MESSAGE_TYPE.ENTER,mid:self._user.sid,rid:self._room.id,agent:window.webrtcDetectedBrowser,version:(window.webrtcDetectedVersion||0).toString(),os:window.navigator.platform,userInfo:self._getUserInfo(),receiveOnly:self.getPeerInfo().config.receiveOnly,target:message.target,weight:self._peerPriorityWeight,temasysPluginVersion:AdapterJS.WebRTCPlugin.plugin?AdapterJS.WebRTCPlugin.plugin.VERSION:null,enableIceTrickle:self._enableIceTrickle,enableDataChannel:self._enableDataChannel,enableIceRestart:self._enableIceRestart,SMProtocolVersion:self.SM_PROTOCOL_VERSION,DTProtocolVersion:self.DT_PROTOCOL_VERSION};self._publishOnly&&(enterMsg.publishOnly={type:self._streams.screenshare&&self._streams.screenshare.stream?"screenshare":"video"}),self._parentId&&(enterMsg.parentId=self._parentId),self._sendChannelMessage(enterMsg)},Skylink.prototype._redirectHandler=function(message){if(log.log(["Server",null,message.type,"System action warning:"],{message:message.info,reason:message.reason,action:message.action}),message.action===this.SYSTEM_ACTION.REJECT)for(var key in this._peerConnections)this._peerConnections.hasOwnProperty(key)&&this._removePeer(key);"toClose"===message.reason&&(message.reason="toclose"),this._trigger("systemAction",message.action,message.info,message.reason)},Skylink.prototype._updateUserEventHandler=function(message){var targetMid=message.mid;if(log.log([targetMid,null,message.type,"Peer updated userData:"],message.userData),this._peerInformations[targetMid]){if(this._peerMessagesStamps[targetMid]&&"number"==typeof message.stamp){if(message.stamp<this._peerMessagesStamps[targetMid].userData)return void log.warn([targetMid,null,message.type,"Dropping outdated status ->"],message);this._peerMessagesStamps[targetMid].userData=message.stamp}this._peerInformations[targetMid].userData=message.userData||{},this._trigger("peerUpdated",targetMid,this.getPeerInfo(targetMid),!1)}else log.log([targetMid,null,message.type,"Peer does not have any user information"])},Skylink.prototype._roomLockEventHandler=function(message){var targetMid=message.mid;log.log([targetMid,message.type,"Room lock status:"],message.lock),this._trigger("roomLock",message.lock,targetMid,this.getPeerInfo(targetMid),!1)},Skylink.prototype._muteAudioEventHandler=function(message){var targetMid=message.mid;if(log.log([targetMid,null,message.type,"Peer's audio muted:"],message.muted),this._peerInformations[targetMid]){if(this._peerMessagesStamps[targetMid]&&"number"==typeof message.stamp){if(message.stamp<this._peerMessagesStamps[targetMid].audioMuted)return void log.warn([targetMid,null,message.type,"Dropping outdated status ->"],message);this._peerMessagesStamps[targetMid].audioMuted=message.stamp}this._peerInformations[targetMid].mediaStatus.audioMuted=message.muted,this._trigger("streamMuted",targetMid,this.getPeerInfo(targetMid),!1,this._peerInformations[targetMid].settings.video&&this._peerInformations[targetMid].settings.video.screenshare),this._trigger("peerUpdated",targetMid,this.getPeerInfo(targetMid),!1)}else log.log([targetMid,message.type,"Peer does not have any user information"])},Skylink.prototype._muteVideoEventHandler=function(message){var targetMid=message.mid;if(log.log([targetMid,null,message.type,"Peer's video muted:"],message.muted),this._peerInformations[targetMid]){if(this._peerMessagesStamps[targetMid]&&"number"==typeof message.stamp){if(message.stamp<this._peerMessagesStamps[targetMid].videoMuted)return void log.warn([targetMid,null,message.type,"Dropping outdated status ->"],message);this._peerMessagesStamps[targetMid].videoMuted=message.stamp}this._peerInformations[targetMid].mediaStatus.videoMuted=message.muted,this._trigger("streamMuted",targetMid,this.getPeerInfo(targetMid),!1,this._peerInformations[targetMid].settings.video&&this._peerInformations[targetMid].settings.video.screenshare),this._trigger("peerUpdated",targetMid,this.getPeerInfo(targetMid),!1)}else log.log([targetMid,null,message.type,"Peer does not have any user information"])},Skylink.prototype._streamEventHandler=function(message){var targetMid=message.mid;log.log([targetMid,null,message.type,"Peer's stream status:"],message.status),this._peerInformations[targetMid]&&message.streamId?(this._streamsSession[targetMid]=this._streamsSession[targetMid]||{},"ended"===message.status&&(message.settings&&"object"==typeof message.settings&&void 0===this._streamsSession[targetMid][message.streamId]&&(this._streamsSession[targetMid][message.streamId]={audio:message.settings.audio,video:message.settings.video}),this._handleEndedStreams(targetMid,message.streamId))):log.log([targetMid,null,message.type,"Peer does not have any user information"])},Skylink.prototype._byeHandler=function(message){var targetMid=message.mid;(this._user||{}).sid!==targetMid?(log.log([targetMid,null,message.type,"Peer has left the room"]),this._removePeer(targetMid)):log.log([targetMid,null,message.type,"Self has left the room"])},Skylink.prototype._privateMessageHandler=function(message){var targetMid=message.mid;log.log([targetMid,null,message.type,"Received private message from peer:"],message.data),this._trigger("incomingMessage",{content:message.data,isPrivate:!0,targetPeerId:message.target,isDataChannel:!1,senderPeerId:targetMid},targetMid,this.getPeerInfo(targetMid),!1)},Skylink.prototype._publicMessageHandler=function(message){var targetMid=message.mid;log.log([targetMid,null,message.type,"Received public message from peer:"],message.data),this._trigger("incomingMessage",{content:message.data,isPrivate:!1,targetPeerId:null,isDataChannel:!1,senderPeerId:targetMid},targetMid,this.getPeerInfo(targetMid),!1)},Skylink.prototype._recordingEventHandler=function(message){var self=this;if(log.debug(["MCU","Recording",null,"Received recording message ->"],message),"on"===message.action)self._recordings[message.recordingId]||(log.debug(["MCU","Recording",message.recordingId,"Started recording"]),self._currentRecordingId=message.recordingId,self._recordings[message.recordingId]={active:!0,state:self.RECORDING_STATE.START,startedDateTime:(new Date).toISOString(),endedDateTime:null,mixingDateTime:null,links:null,error:null},self._recordingStartInterval=setTimeout(function(){log.log(["MCU","Recording",message.recordingId,"4 seconds has been recorded. Recording can be stopped now"]),self._recordingStartInterval=null},4e3),self._trigger("recordingState",self.RECORDING_STATE.START,message.recordingId,null,null));else if("off"===message.action){if(!self._recordings[message.recordingId])return void log.error(["MCU","Recording",message.recordingId,'Received request of "off" but the session is empty']);self._currentRecordingId=null,self._recordingStartInterval&&(clearTimeout(self._recordingStartInterval),log.warn(["MCU","Recording",message.recordingId,"Recording stopped abruptly before 4 seconds"]),self._recordingStartInterval=null),log.debug(["MCU","Recording",message.recordingId,"Stopped recording"]),self._recordings[message.recordingId].active=!1,self._recordings[message.recordingId].state=self.RECORDING_STATE.STOP,self._recordings[message.recordingId].endedDateTime=(new Date).toISOString(),self._trigger("recordingState",self.RECORDING_STATE.STOP,message.recordingId,null,null)}else if("url"===message.action){if(!self._recordings[message.recordingId])return void log.error(["MCU","Recording",message.recordingId,"Received URL but the session is empty"]);var links={};if(Array.isArray(message.urls))for(var i=0;i<message.urls.length;i++)links[messages.urls[i].id||""]=messages.urls[i].url||"";else"string"==typeof message.url&&(links.mixin=message.url);self._recordings[message.recordingId].links=links,self._recordings[message.recordingId].state=self.RECORDING_STATE.LINK,self._recordings[message.recordingId].mixingDateTime=(new Date).toISOString(),self._trigger("recordingState",self.RECORDING_STATE.LINK,message.recordingId,links,null)}else{var recordingError=new Error(message.error||"Unknown error");if(!self._recordings[message.recordingId])return void log.error(["MCU","Recording",message.recordingId,"Received error but the session is empty ->"],recordingError);log.error(["MCU","Recording",message.recordingId,"Recording failure ->"],recordingError),self._recordings[message.recordingId].state=self.RECORDING_STATE.ERROR,self._recordings[message.recordingId].error=recordingError,self._recordings[message.recordingId].active&&(log.debug(["MCU","Recording",message.recordingId,"Stopped recording abruptly"]),self._recordings[message.recordingId].active=!1),self._trigger("recordingState",self.RECORDING_STATE.ERROR,message.recordingId,null,recordingError)}},Skylink.prototype._inRoomHandler=function(message){var self=this;log.log(["Server",null,message.type,"User is now in the room and functionalities are now available. Config received:"],message.pc_config),self._room.connection.peerConfig=self._setIceServers(message.pc_config),self._inRoom=!0,self._user.sid=message.sid,self._peerPriorityWeight=message.tieBreaker+(self._priorityWeightScheme===self.PRIORITY_WEIGHT_SCHEME.AUTO?0:self._priorityWeightScheme===self.PRIORITY_WEIGHT_SCHEME.ENFORCE_OFFERER?2e15:-2e15),self._trigger("peerJoined",self._user.sid,self.getPeerInfo(),!0),self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ENTER,self._user.sid);var streamId=null;self._streams.screenshare&&self._streams.screenshare.stream?(streamId=self._streams.screenshare.stream.id||self._streams.screenshare.stream.label,self._trigger("incomingStream",self._user.sid,self._streams.screenshare.stream,!0,self.getPeerInfo(),!0,streamId)):self._streams.userMedia&&self._streams.userMedia.stream&&(streamId=self._streams.userMedia.stream.id||self._streams.userMedia.stream.label,self._trigger("incomingStream",self._user.sid,self._streams.userMedia.stream,!0,self.getPeerInfo(),!1,streamId));var enterMsg={type:self._SIG_MESSAGE_TYPE.ENTER,mid:self._user.sid,rid:self._room.id,agent:window.webrtcDetectedBrowser,version:(window.webrtcDetectedVersion||0).toString(),os:window.navigator.platform,userInfo:self._getUserInfo(),receiveOnly:self.getPeerInfo().config.receiveOnly,weight:self._peerPriorityWeight,temasysPluginVersion:AdapterJS.WebRTCPlugin.plugin?AdapterJS.WebRTCPlugin.plugin.VERSION:null,enableIceTrickle:self._enableIceTrickle,enableDataChannel:self._enableDataChannel,enableIceRestart:self._enableIceRestart,SMProtocolVersion:self.SM_PROTOCOL_VERSION,DTProtocolVersion:self.DT_PROTOCOL_VERSION};self._publishOnly&&(enterMsg.publishOnly={type:self._streams.screenshare&&self._streams.screenshare.stream?"screenshare":"video"}),self._parentId&&(enterMsg.parentId=self._parentId),self._sendChannelMessage(enterMsg)},Skylink.prototype._enterHandler=function(message){var self=this,targetMid=message.mid,isNewPeer=!1,userInfo=message.userInfo||{};if(userInfo.settings=userInfo.settings||{},userInfo.mediaStatus=userInfo.mediaStatus||{},userInfo.config={enableIceTrickle:"boolean"!=typeof message.enableIceTrickle||message.enableIceTrickle,enableIceRestart:"boolean"==typeof message.enableIceRestart&&message.enableIceRestart,enableDataChannel:"boolean"!=typeof message.enableDataChannel||message.enableDataChannel,priorityWeight:"number"==typeof message.weight?message.weight:0,receiveOnly:!0===message.receiveOnly,publishOnly:!!message.publishOnly},userInfo.parentId=message.parentId||null,userInfo.agent={name:"string"==typeof message.agent&&message.agent?message.agent:"other",version:function(){if(!message.version||"string"!=typeof message.version)return 0;if(message.version.indexOf(".")>-1){var parts=message.version.split(".");if(parts.length>2){var majorVer=parts[0]||"0";return parts.splice(0,1),parseFloat(majorVer+"."+parts.join("0"),10)}return parseFloat(message.version||"0",10)}return parseInt(message.version||"0",10)}(),os:"string"==typeof message.os&&message.os?message.os:"",pluginVersion:"string"==typeof message.temasysPluginVersion&&message.temasysPluginVersion?message.temasysPluginVersion:null,SMProtocolVersion:message.SMProtocolVersion&&"string"==typeof message.SMProtocolVersion?message.SMProtocolVersion:"0.1.1",DTProtocolVersion:message.DTProtocolVersion&&"string"==typeof message.DTProtocolVersion?message.DTProtocolVersion:self._hasMCU||"MCU"===targetMid?"0.1.2":"0.1.0"},log.log([targetMid,"RTCPeerConnection",null,'Peer "enter" received ->'],message),"MCU"!==targetMid&&(self._parentId&&self._parentId===targetMid||self._hasMCU&&self._publishOnly||message.parentId&&self._user&&self._user.sid&&message.parentId===self._user.sid))return void log.warn([targetMid,"RTCPeerConnection",null,'Discarding "enter" for parentId or publishOnly case ->'],message);var processPeerFn=function(cert){if(!self._peerInformations[targetMid]){isNewPeer=!0,self._peerInformations[targetMid]=userInfo;var hasScreenshare=userInfo.settings.video&&"object"==typeof userInfo.settings.video&&!!userInfo.settings.video.screenshare;self._addPeer(targetMid,cert||null,{agent:userInfo.agent.name,version:userInfo.agent.version,os:userInfo.agent.os},message.receiveOnly,hasScreenshare),"MCU"===targetMid?(log.info([targetMid,"RTCPeerConnection",null,"MCU feature has been enabled"]),self._hasMCU=!0,self._trigger("serverPeerJoined",targetMid,self.SERVER_PEER_TYPE.MCU)):self._trigger("peerJoined",targetMid,self.getPeerInfo(targetMid),!1),self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ENTER,targetMid)}self._peerMessagesStamps[targetMid]=self._peerMessagesStamps[targetMid]||{userData:0,audioMuted:0,videoMuted:0};var welcomeMsg={type:self._SIG_MESSAGE_TYPE.WELCOME,mid:self._user.sid,rid:self._room.id,enableIceTrickle:self._enableIceTrickle,enableDataChannel:self._enableDataChannel,enableIceRestart:self._enableIceRestart,agent:window.webrtcDetectedBrowser,version:(window.webrtcDetectedVersion||0).toString(),receiveOnly:self.getPeerInfo().config.receiveOnly,os:window.navigator.platform,userInfo:self._getUserInfo(targetMid),target:targetMid,weight:self._peerPriorityWeight,temasysPluginVersion:AdapterJS.WebRTCPlugin.plugin?AdapterJS.WebRTCPlugin.plugin.VERSION:null,SMProtocolVersion:self.SM_PROTOCOL_VERSION,DTProtocolVersion:self.DT_PROTOCOL_VERSION};self._publishOnly&&(welcomeMsg.publishOnly={type:self._streams.screenshare&&self._streams.screenshare.stream?"screenshare":"video"}),self._parentId&&(welcomeMsg.parentId=self._parentId),self._sendChannelMessage(welcomeMsg),isNewPeer&&self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.WELCOME,targetMid)};if(self._peerConnectionConfig.certificate!==self.PEER_CERTIFICATE.AUTO&&"function"==typeof RTCPeerConnection.generateCertificate){var certOptions={};certOptions=self._peerConnectionConfig.certificate===self.PEER_CERTIFICATE.ECDSA?{name:"ECDSA",namedCurve:"P-256"}:{name:"RSASSA-PKCS1-v1_5",modulusLength:2048,publicExponent:new Uint8Array([1,0,1]),hash:"SHA-256"},RTCPeerConnection.generateCertificate(certOptions).then(function(cert){processPeerFn(cert)},function(){processPeerFn()})}else processPeerFn()},Skylink.prototype._restartHandler=function(message){var self=this,targetMid=message.mid,userInfo=message.userInfo||{};if(userInfo.settings=userInfo.settings||{},userInfo.mediaStatus=userInfo.mediaStatus||{},userInfo.config={enableIceTrickle:"boolean"!=typeof message.enableIceTrickle||message.enableIceTrickle,enableIceRestart:"boolean"==typeof message.enableIceRestart&&message.enableIceRestart,enableDataChannel:"boolean"!=typeof message.enableDataChannel||message.enableDataChannel,priorityWeight:"number"==typeof message.weight?message.weight:0,receiveOnly:!0===message.receiveOnly,publishOnly:!!message.publishOnly},userInfo.parentId=message.parentId||null,userInfo.agent={name:"string"==typeof message.agent&&message.agent?message.agent:"other",version:function(){if(!message.version||"string"!=typeof message.version)return 0;if(message.version.indexOf(".")>-1){var parts=message.version.split(".");if(parts.length>2){var majorVer=parts[0]||"0";return parts.splice(0,1),parseFloat(majorVer+"."+parts.join("0"),10)}return parseFloat(message.version||"0",10)}return parseInt(message.version||"0",10)}(),os:"string"==typeof message.os&&message.os?message.os:"",pluginVersion:"string"==typeof message.temasysPluginVersion&&message.temasysPluginVersion?message.temasysPluginVersion:null,SMProtocolVersion:message.SMProtocolVersion&&"string"==typeof message.SMProtocolVersion?message.SMProtocolVersion:"0.1.1",DTProtocolVersion:message.DTProtocolVersion&&"string"==typeof message.DTProtocolVersion?message.DTProtocolVersion:self._hasMCU||"MCU"===targetMid?"0.1.2":"0.1.0"},log.log([targetMid,"RTCPeerConnection",null,'Peer "restart" received ->'],message),!self._peerInformations[targetMid])return void log.error([targetMid,"RTCPeerConnection",null,"Peer does not have an existing session. Ignoring restart process."]);if("MCU"!==targetMid&&(self._parentId&&self._parentId===targetMid||self._hasMCU&&self._publishOnly||message.parentId&&self._user&&self._user.sid&&message.parentId===self._user.sid))return void log.warn([targetMid,"RTCPeerConnection",null,'Discarding "restart" for parentId or publishOnly case ->'],message);if(self._hasMCU&&!self._mcuUseRenegoRestart)return log.warn([targetMid,"RTCPeerConnection",null,"Dropping restart request as MCU does not support re-negotiation. Restart workaround is to re-join Room for Peer."]),void self._trigger("peerRestart",targetMid,self.getPeerInfo(targetMid),!1,!1);if(self._peerInformations[targetMid]=userInfo,self._peerMessagesStamps[targetMid]=self._peerMessagesStamps[targetMid]||{userData:0,audioMuted:0,videoMuted:0},self._peerEndOfCandidatesCounter[targetMid]=self._peerEndOfCandidatesCounter[targetMid]||{},self._peerEndOfCandidatesCounter[targetMid].len=0,self._peerPriorityWeight>message.weight){if(log.debug([targetMid,"RTCPeerConnection",null,"Re-negotiating new offer/answer."]),self._peerMessagesStamps[targetMid].hasRestart)return void log.warn([targetMid,"RTCPeerConnection",null,'Discarding extra "restart" received.']);self._peerMessagesStamps[targetMid].hasRestart=!0,self._doOffer(targetMid,!0===message.doIceRestart,{agent:userInfo.agent.name,version:userInfo.agent.version,os:userInfo.agent.os},!0)}else{
log.debug([targetMid,"RTCPeerConnection",null,"Waiting for peer to start re-negotiation."]);var restartMsg={type:self._SIG_MESSAGE_TYPE.RESTART,mid:self._user.sid,rid:self._room.id,agent:window.webrtcDetectedBrowser,version:(window.webrtcDetectedVersion||0).toString(),os:window.navigator.platform,userInfo:self._getUserInfo(targetMid),target:targetMid,weight:self._peerPriorityWeight,enableIceTrickle:self._enableIceTrickle,enableDataChannel:self._enableDataChannel,enableIceRestart:self._enableIceRestart,doIceRestart:!0===message.doIceRestart,receiveOnly:self.getPeerInfo().config.receiveOnly,isRestartResend:!0,temasysPluginVersion:AdapterJS.WebRTCPlugin.plugin?AdapterJS.WebRTCPlugin.plugin.VERSION:null,SMProtocolVersion:self.SM_PROTOCOL_VERSION,DTProtocolVersion:self.DT_PROTOCOL_VERSION};self._publishOnly&&(restartMsg.publishOnly={type:self._streams.screenshare&&self._streams.screenshare.stream?"screenshare":"video"}),self._parentId&&(restartMsg.parentId=self._parentId),self._sendChannelMessage(restartMsg)}self._trigger("peerRestart",targetMid,self.getPeerInfo(targetMid),!1,!0===message.doIceRestart)},Skylink.prototype._welcomeHandler=function(message){var self=this,targetMid=message.mid,isNewPeer=!1,userInfo=message.userInfo||{};if(userInfo.settings=userInfo.settings||{},userInfo.mediaStatus=userInfo.mediaStatus||{},userInfo.config={enableIceTrickle:"boolean"!=typeof message.enableIceTrickle||message.enableIceTrickle,enableIceRestart:"boolean"==typeof message.enableIceRestart&&message.enableIceRestart,enableDataChannel:"boolean"!=typeof message.enableDataChannel||message.enableDataChannel,priorityWeight:"number"==typeof message.weight?message.weight:0,receiveOnly:!0===message.receiveOnly,publishOnly:!!message.publishOnly},userInfo.parentId=message.parentId||null,userInfo.agent={name:"string"==typeof message.agent&&message.agent?message.agent:"other",version:function(){if(!message.version||"string"!=typeof message.version)return 0;if(message.version.indexOf(".")>-1){var parts=message.version.split(".");if(parts.length>2){var majorVer=parts[0]||"0";return parts.splice(0,1),parseFloat(majorVer+"."+parts.join("0"),10)}return parseFloat(message.version||"0",10)}return parseInt(message.version||"0",10)}(),os:"string"==typeof message.os&&message.os?message.os:"",pluginVersion:"string"==typeof message.temasysPluginVersion&&message.temasysPluginVersion?message.temasysPluginVersion:null,SMProtocolVersion:message.SMProtocolVersion&&"string"==typeof message.SMProtocolVersion?message.SMProtocolVersion:"0.1.1",DTProtocolVersion:message.DTProtocolVersion&&"string"==typeof message.DTProtocolVersion?message.DTProtocolVersion:self._hasMCU||"MCU"===targetMid?"0.1.2":"0.1.0"},log.log([targetMid,"RTCPeerConnection",null,'Peer "welcome" received ->'],message),"MCU"!==targetMid&&(self._parentId&&self._parentId===targetMid||self._hasMCU&&self._publishOnly||message.parentId&&self._user&&self._user.sid&&message.parentId===self._user.sid))return void log.warn([targetMid,"RTCPeerConnection",null,'Discarding "welcome" for parentId or publishOnly case ->'],message);var processPeerFn=function(cert){if(!self._peerInformations[targetMid]){isNewPeer=!0,self._peerInformations[targetMid]=userInfo;var hasScreenshare=userInfo.settings.video&&"object"==typeof userInfo.settings.video&&!!userInfo.settings.video.screenshare;self._addPeer(targetMid,cert||null,{agent:userInfo.agent.name,version:userInfo.agent.version,os:userInfo.agent.os},message.receiveOnly,hasScreenshare),"MCU"===targetMid?(log.info([targetMid,"RTCPeerConnection",null,"MCU feature has been enabled"]),self._hasMCU=!0,self._trigger("serverPeerJoined",targetMid,self.SERVER_PEER_TYPE.MCU)):self._trigger("peerJoined",targetMid,self.getPeerInfo(targetMid),!1),self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ENTER,targetMid),self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.WELCOME,targetMid)}if(self._peerMessagesStamps[targetMid]=self._peerMessagesStamps[targetMid]||{userData:0,audioMuted:0,videoMuted:0,hasWelcome:!1},self._hasMCU||self._peerPriorityWeight>message.weight){if(self._peerMessagesStamps[targetMid].hasWelcome)return void log.warn([targetMid,"RTCPeerConnection",null,'Discarding extra "welcome" received.']);log.debug([targetMid,"RTCPeerConnection",null,"Starting negotiation"]),self._peerMessagesStamps[targetMid].hasWelcome=!0,self._doOffer(targetMid,!1,{agent:userInfo.agent.name,version:userInfo.agent.version,os:userInfo.agent.os},!0)}else{log.debug([targetMid,"RTCPeerConnection",null,"Waiting for peer to start negotiation."]);var welcomeMsg={type:self._SIG_MESSAGE_TYPE.WELCOME,mid:self._user.sid,rid:self._room.id,enableIceTrickle:self._enableIceTrickle,enableDataChannel:self._enableDataChannel,enableIceRestart:self._enableIceRestart,receiveOnly:self.getPeerInfo().config.receiveOnly,agent:window.webrtcDetectedBrowser,version:(window.webrtcDetectedVersion||0).toString(),os:window.navigator.platform,userInfo:self._getUserInfo(targetMid),target:targetMid,weight:self._peerPriorityWeight,temasysPluginVersion:AdapterJS.WebRTCPlugin.plugin?AdapterJS.WebRTCPlugin.plugin.VERSION:null,SMProtocolVersion:self.SM_PROTOCOL_VERSION,DTProtocolVersion:self.DT_PROTOCOL_VERSION};self._publishOnly&&(welcomeMsg.publishOnly={type:self._streams.screenshare&&self._streams.screenshare.stream?"screenshare":"video"}),self._parentId&&(welcomeMsg.parentId=self._parentId),self._sendChannelMessage(welcomeMsg)}};if(self._peerConnectionConfig.certificate!==self.PEER_CERTIFICATE.AUTO&&"function"==typeof RTCPeerConnection.generateCertificate){var certOptions={};certOptions=self._peerConnectionConfig.certificate===self.PEER_CERTIFICATE.ECDSA?{name:"ECDSA",namedCurve:"P-256"}:{name:"RSASSA-PKCS1-v1_5",modulusLength:2048,publicExponent:new Uint8Array([1,0,1]),hash:"SHA-256"},RTCPeerConnection.generateCertificate(certOptions).then(function(cert){processPeerFn(cert)},function(){processPeerFn()})}else processPeerFn()},Skylink.prototype._offerHandler=function(message){var self=this,targetMid=message.mid,pc=self._peerConnections[targetMid];if(!pc)return void log.error([targetMid,null,message.type,"Peer connection object not found. Unable to setRemoteDescription for offer"]);if(message.userInfo&&"object"==typeof message.userInfo){var userInfo=message.userInfo||{};self._peerInformations[targetMid].settings=userInfo.settings||{},self._peerInformations[targetMid].mediaStatus=userInfo.mediaStatus||{},self._peerInformations[targetMid].userData=userInfo.userData}log.log([targetMid,null,message.type,"Received offer from peer. Session description:"],clone(message));var offer={type:"offer",sdp:self._hasMCU?message.sdp.replace(/\r\n/g,"\n").split("\n").join("\r\n"):message.sdp};if(log.log([targetMid,"RTCSessionDescription",message.type,"Session description object created"],offer),offer.sdp=self._removeSDPFilteredCandidates(targetMid,offer),offer.sdp=self._setSDPCodec(targetMid,offer),offer.sdp=self._setSDPBitrate(targetMid,offer),offer.sdp=self._setSDPCodecParams(targetMid,offer),offer.sdp=self._removeSDPCodecs(targetMid,offer),offer.sdp=self._removeSDPREMBPackets(targetMid,offer),offer.sdp=self._handleSDPConnectionSettings(targetMid,offer,"remote"),log.log([targetMid,"RTCSessionDescription",message.type,"Updated remote offer ->"],offer.sdp),pc.signalingState!==self.PEER_CONNECTION_STATE.STABLE)return void log.warn([targetMid,null,message.type,'Peer connection state is not in "stable" state for re-negotiation. Dropping message.'],{signalingState:pc.signalingState,isRestart:!!message.resend});if(pc.processingRemoteSDP)return void log.warn([targetMid,"RTCSessionDescription","offer","Dropping of setting local offer as there is another sessionDescription being processed ->"],offer);pc.processingRemoteSDP=!0,"edge"!==window.webrtcDetectedBrowser||self._hasMCU&&"MCU"!==targetMid||self._addLocalMediaStreams(targetMid),message.userInfo&&self._trigger("peerUpdated",targetMid,self.getPeerInfo(targetMid),!1);var successCbFn=function(){log.debug([targetMid,"RTCSessionDescription",message.type,"Remote description set"]),pc.setOffer="remote",pc.processingRemoteSDP=!1,self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.OFFER,targetMid),self._useSafariWebRTC&&pc.remoteStreamTrigger&&(self._onRemoteStreamAdded(targetMid,pc.remoteStream,!!pc.hasScreen),pc.remoteStreamTrigger=!1),self._addIceCandidateFromQueue(targetMid),self._doAnswer(targetMid)},errorCbFn=function(error){self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ERROR,targetMid,error),pc.processingRemoteSDP=!1,log.error([targetMid,null,message.type,"Failed setting remote description:"],{error:error,state:pc.signalingState,offer:offer})};self._useSafariWebRTC?(self._parseSDPMediaStreamIDs(targetMid,offer),pc.setRemoteDescription(new RTCSessionDescription(offer)).then(successCbFn).catch(errorCbFn)):pc.setRemoteDescription(new RTCSessionDescription(offer),successCbFn,errorCbFn)},Skylink.prototype._candidateHandler=function(message){var targetMid=message.mid;if(!message.candidate&&!message.id)return void log.warn([targetMid,"RTCIceCandidate",null,"Received invalid ICE candidate message ->"],message);var canId="can-"+(new Date).getTime(),candidateType=message.candidate.split(" ")[7]||"",candidate=new RTCIceCandidate({sdpMLineIndex:message.label,candidate:message.candidate,sdpMid:message.id});if(log.debug([targetMid,"RTCIceCandidate",canId+":"+candidateType,"Received ICE candidate ->"],candidate),this._peerEndOfCandidatesCounter[targetMid]=this._peerEndOfCandidatesCounter[targetMid]||{},this._peerEndOfCandidatesCounter[targetMid].len=this._peerEndOfCandidatesCounter[targetMid].len||0,this._peerEndOfCandidatesCounter[targetMid].hasSet=!1,this._peerEndOfCandidatesCounter[targetMid].len++,this._trigger("candidateProcessingState",this.CANDIDATE_PROCESSING_STATE.RECEIVED,targetMid,canId,candidateType,{candidate:candidate.candidate,sdpMid:candidate.sdpMid,sdpMLineIndex:candidate.sdpMLineIndex},null),!this._peerConnections[targetMid]||this._peerConnections[targetMid].signalingState===this.PEER_CONNECTION_STATE.CLOSED)return log.warn([targetMid,"RTCIceCandidate",canId+":"+candidateType,"Dropping ICE candidate as Peer connection does not exists or is closed"]),this._trigger("candidateProcessingState",this.CANDIDATE_PROCESSING_STATE.DROPPED,targetMid,canId,candidateType,{candidate:candidate.candidate,sdpMid:candidate.sdpMid,sdpMLineIndex:candidate.sdpMLineIndex},new Error("Failed processing ICE candidate as Peer connection does not exists or is closed.")),void this._signalingEndOfCandidates(targetMid);if(this._filterCandidatesType[candidateType]){if(!this._hasMCU||!this._forceTURN)return log.warn([targetMid,"RTCIceCandidate",canId+":"+candidateType,"Dropping received ICE candidate as it matches ICE candidate filtering flag ->"],candidate),this._trigger("candidateProcessingState",this.CANDIDATE_PROCESSING_STATE.DROPPED,targetMid,canId,candidateType,{candidate:candidate.candidate,sdpMid:candidate.sdpMid,sdpMLineIndex:candidate.sdpMLineIndex},new Error("Dropping of processing ICE candidate as it matches ICE candidate filtering flag.")),void this._signalingEndOfCandidates(targetMid);log.warn([targetMid,"RTCIceCandidate",canId+":"+candidateType,"Not dropping received ICE candidate as TURN connections are enforced as MCU is present (and act as a TURN itself) so filtering of ICE candidate flags are not honoured ->"],candidate)}this._peerConnections[targetMid].remoteDescription&&this._peerConnections[targetMid].remoteDescription.sdp&&this._peerConnections[targetMid].localDescription&&this._peerConnections[targetMid].localDescription.sdp?this._addIceCandidate(targetMid,canId,candidate):this._addIceCandidateToQueue(targetMid,canId,candidate),this._signalingEndOfCandidates(targetMid),this._gatheredCandidates[targetMid]||(this._gatheredCandidates[targetMid]={sending:{host:[],srflx:[],relay:[]},receiving:{host:[],srflx:[],relay:[]}}),this._gatheredCandidates[targetMid].receiving[candidateType].push({sdpMid:candidate.sdpMid,sdpMLineIndex:candidate.sdpMLineIndex,candidate:candidate.candidate})},Skylink.prototype._answerHandler=function(message){var self=this,targetMid=message.mid;log.log([targetMid,null,message.type,"Received answer from peer. Session description:"],clone(message));var pc=self._peerConnections[targetMid];if(!pc)return void log.error([targetMid,null,message.type,"Peer connection object not found. Unable to setRemoteDescription for answer"]);if(message.userInfo&&"object"==typeof message.userInfo){var userInfo=message.userInfo||{};self._peerInformations[targetMid].settings=userInfo.settings||{},self._peerInformations[targetMid].mediaStatus=userInfo.mediaStatus||{},self._peerInformations[targetMid].userData=userInfo.userData}var answer={type:"answer",sdp:self._hasMCU?message.sdp.replace(/\r\n/g,"\n").split("\n").join("\r\n"):message.sdp};if(log.log([targetMid,"RTCSessionDescription",message.type,"Session description object created"],answer),answer.sdp=self._removeSDPFilteredCandidates(targetMid,answer),answer.sdp=self._setSDPCodec(targetMid,answer),answer.sdp=self._setSDPBitrate(targetMid,answer),answer.sdp=self._setSDPCodecParams(targetMid,answer),answer.sdp=self._removeSDPCodecs(targetMid,answer),answer.sdp=self._removeSDPREMBPackets(targetMid,answer),answer.sdp=self._handleSDPConnectionSettings(targetMid,answer,"remote"),log.log([targetMid,"RTCSessionDescription",message.type,"Updated remote answer ->"],answer.sdp),pc.signalingState!==self.PEER_CONNECTION_STATE.HAVE_LOCAL_OFFER)return void log.warn([targetMid,null,message.type,'Peer connection state is not in "have-local-offer" state for re-negotiation. Dropping message.'],{signalingState:pc.signalingState,isRestart:!!message.restart});if(pc.processingRemoteSDP)return void log.warn([targetMid,"RTCSessionDescription","answer","Dropping of setting local answer as there is another sessionDescription being processed ->"],answer);pc.processingRemoteSDP=!0,message.userInfo&&self._trigger("peerUpdated",targetMid,self.getPeerInfo(targetMid),!1);var successCbFn=function(){log.debug([targetMid,null,message.type,"Remote description set"]),pc.setAnswer="remote",pc.processingRemoteSDP=!1,self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ANSWER,targetMid),self._addIceCandidateFromQueue(targetMid),self._peerMessagesStamps[targetMid]&&(self._peerMessagesStamps[targetMid].hasRestart=!1),self._dataChannels[targetMid]&&(-1===pc.remoteDescription.sdp.indexOf("m=application")||pc.remoteDescription.sdp.indexOf("m=application 0")>0)&&(log.warn([targetMid,"RTCPeerConnection",null,"Closing all datachannels as they were rejected."]),self._closeDataChannel(targetMid)),self._useSafariWebRTC&&pc.remoteStreamTrigger&&(self._onRemoteStreamAdded(targetMid,pc.remoteStream,!!pc.hasScreen),pc.remoteStreamTrigger=!1)},errorCbFn=function(error){self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ERROR,targetMid,error),pc.processingRemoteSDP=!1,log.error([targetMid,null,message.type,"Failed setting remote description:"],{error:error,state:pc.signalingState,answer:answer})};self._useSafariWebRTC?(self._parseSDPMediaStreamIDs(targetMid,answer),pc.setRemoteDescription(new RTCSessionDescription(answer)).then(successCbFn).catch(errorCbFn)):pc.setRemoteDescription(new RTCSessionDescription(answer),successCbFn,errorCbFn)},Skylink.prototype._isLowerThanVersion=function(agentVer,requiredVer){for(var partsA=(agentVer||"").split("."),partsB=(requiredVer||"").split("."),i=0;i<partsB.length;i++)if(parseInt(partsA[i]||"0",10)<parseInt(partsB[i]||"0",10))return!0;return!1},Skylink.prototype.VIDEO_CODEC={AUTO:"auto",VP8:"VP8",H264:"H264",VP9:"VP9"},Skylink.prototype.AUDIO_CODEC={AUTO:"auto",ISAC:"ISAC",OPUS:"opus",ILBC:"ILBC",G722:"G722",PCMU:"PCMU",PCMA:"PCMA"},Skylink.prototype.MEDIA_SOURCE={SCREEN:"screen",WINDOW:"window",TAB:"tab",TAB_AUDIO:"audio",APPLICATION:"application",BROWSER:"browser",CAMERA:"camera"},Skylink.prototype.VIDEO_RESOLUTION={QQVGA:{width:160,height:120},HQVGA:{width:240,height:160},QVGA:{width:320,height:240},WQVGA:{width:384,height:240},HVGA:{width:480,height:320},VGA:{width:640,height:480},WVGA:{width:768,height:480},FWVGA:{width:854,height:480},SVGA:{width:800,height:600},DVGA:{width:960,height:640},WSVGA:{width:1024,height:576},HD:{width:1280,height:720},HDPLUS:{width:1600,height:900},FHD:{width:1920,height:1080},QHD:{width:2560,height:1440},WQXGAPLUS:{width:3200,height:1800},UHD:{width:3840,height:2160},UHDPLUS:{width:5120,height:2880},FUHD:{width:7680,height:4320},QUHD:{width:15360,height:8640}},Skylink.prototype.MEDIA_ACCESS_FALLBACK_STATE={FALLBACKING:0,FALLBACKED:1,ERROR:-1},Skylink.prototype.RECORDING_STATE={START:0,STOP:1,LINK:2,ERROR:-1},Skylink.prototype.getUserMedia=function(options,callback){var self=this;if("function"==typeof options)callback=options,options={audio:!0,video:!0};else if("object"!=typeof options||null===options){if(void 0!==options){var invalidOptionsError="Please provide a valid options";return log.error(invalidOptionsError,options),void("function"==typeof callback&&callback(new Error(invalidOptionsError),null))}options={audio:!0,video:!0}}else if(!options.audio&&!options.video){var noConstraintOptionsSelectedError="Please select audio or video";return log.error(noConstraintOptionsSelectedError,options),void("function"==typeof callback&&callback(new Error(noConstraintOptionsSelectedError),null))}self._throttle(function(runFn){if(runFn){if("function"==typeof callback){var mediaAccessSuccessFn=function(stream){self.off("mediaAccessError",mediaAccessErrorFn),callback(null,stream)},mediaAccessErrorFn=function(error){self.off("mediaAccessSuccess",mediaAccessSuccessFn),callback(error,null)};self.once("mediaAccessSuccess",mediaAccessSuccessFn,function(stream,isScreensharing){return!isScreensharing}),self.once("mediaAccessError",mediaAccessErrorFn,function(error,isScreensharing){return!isScreensharing})}var settings=self._parseStreamSettings(options),successCbFn=function(stream){settings.mutedSettings.shouldAudioMuted&&(self._streamsMutedSettings.audioMuted=!0),settings.mutedSettings.shouldVideoMuted&&(self._streamsMutedSettings.videoMuted=!0),self._onStreamAccessSuccess(stream,settings,!1,!1)},errorCbFn=function(error){self._onStreamAccessError(error,settings,!1,!1)};self._useSafariWebRTC?navigator.mediaDevices.getUserMedia(settings.getUserMediaSettings).then(successCbFn).catch(errorCbFn):navigator.getUserMedia(settings.getUserMediaSettings,successCbFn,errorCbFn)}else if(self._throttlingShouldThrowError){var throttleLimitError="Unable to run as throttle interval has not reached ("+self._throttlingTimeouts.getUserMedia+"ms).";log.error(throttleLimitError),"function"==typeof callback&&callback(new Error(throttleLimitError),null)}},"getUserMedia",self._throttlingTimeouts.getUserMedia)},Skylink.prototype.sendStream=function(options,callback){var self=this,restartFn=function(stream){if(self._inRoom)self._streams.screenshare||(self._trigger("incomingStream",self._user.sid,stream,!0,self.getPeerInfo(),!1,stream.id||stream.label),self._trigger("peerUpdated",self._user.sid,self.getPeerInfo(),!0)),Object.keys(self._peerConnections).length>0||self._hasMCU?self._refreshPeerConnection(Object.keys(self._peerConnections),!1,{},function(err,success){if(err)return log.error("Failed refreshing connections for sendStream() ->",err),void("function"==typeof callback&&callback(new Error("Failed refreshing connections."),null));"function"==typeof callback&&callback(null,stream)}):"function"==typeof callback&&callback(null,stream);else{var notInRoomAgainError="Unable to send stream as user is not in the Room.";log.error(notInRoomAgainError,stream),"function"==typeof callback&&callback(new Error(notInRoomAgainError),null)}};if(!("object"==typeof options&&null!==options||AdapterJS&&AdapterJS.WebRTCPlugin&&AdapterJS.WebRTCPlugin.plugin&&["function","object"].indexOf(typeof options)>-1)){var invalidOptionsError="Provided stream settings is invalid";return log.error(invalidOptionsError,options),void("function"==typeof callback&&callback(new Error(invalidOptionsError),null))}if(!self._inRoom){var notInRoomError="Unable to send stream as user is not in the Room.";return log.error(notInRoomError,options),void("function"==typeof callback&&callback(new Error(notInRoomError),null))}if("edge"===window.webrtcDetectedBrowser){var edgeNotSupportError="Edge browser currently does not support renegotiation.";return log.error(edgeNotSupportError,options),void("function"==typeof callback&&callback(new Error(edgeNotSupportError),null))}if("function"==typeof options.getAudioTracks||"function"==typeof options.getVideoTracks){var checkActiveTracksFn=function(tracks){for(var t=0;t<tracks.length;t++)if(!(tracks[t].ended||"string"==typeof tracks[t].readyState&&"live"!==tracks[t].readyState))return!0;return!1};if(!checkActiveTracksFn(options.getAudioTracks())&&!checkActiveTracksFn(options.getVideoTracks())){var invalidStreamError="Provided stream object does not have audio or video tracks.";return log.error(invalidStreamError,options),void("function"==typeof callback&&callback(new Error(invalidStreamError),null))}self._onStreamAccessSuccess(options,{settings:{audio:!0,video:!0},getUserMediaSettings:{audio:!0,video:!0}},!1,!1),restartFn(options)}else self.getUserMedia(options,function(err,stream){if(err)return void("function"==typeof callback&&callback(err,null));restartFn(stream)})},Skylink.prototype.stopStream=function(){this._streams.userMedia&&this._stopStreams({userMedia:!0})},Skylink.prototype.muteStream=function(options){var self=this;if("object"!=typeof options)return void log.error("Provided settings is not an object");if(!(self._streams.userMedia&&self._streams.userMedia.stream||self._streams.screenshare&&self._streams.screenshare.stream))return void log.warn("No streams are available to mute / unmute!");var audioMuted="boolean"!=typeof options.audioMuted||options.audioMuted,videoMuted="boolean"!=typeof options.videoMuted||options.videoMuted,hasToggledAudio=!1,hasToggledVideo=!1;if(self._streamsMutedSettings.audioMuted!==audioMuted&&(self._streamsMutedSettings.audioMuted=audioMuted,hasToggledAudio=!0),self._streamsMutedSettings.videoMuted!==videoMuted&&(self._streamsMutedSettings.videoMuted=videoMuted,hasToggledVideo=!0),hasToggledVideo||hasToggledAudio){var streamTracksAvailability=self._muteStreams();hasToggledVideo&&self._inRoom&&self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.MUTE_VIDEO,mid:self._user.sid,rid:self._room.id,muted:self._streamsMutedSettings.videoMuted,stamp:(new Date).getTime()}),hasToggledAudio&&self._inRoom&&setTimeout(function(){self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.MUTE_AUDIO,mid:self._user.sid,rid:self._room.id,muted:self._streamsMutedSettings.audioMuted,stamp:(new Date).getTime()})},hasToggledVideo?1050:0),(streamTracksAvailability.hasVideo&&hasToggledVideo||streamTracksAvailability.hasAudio&&hasToggledAudio)&&(self._trigger("localMediaMuted",{audioMuted:!streamTracksAvailability.hasAudio||self._streamsMutedSettings.audioMuted,videoMuted:!streamTracksAvailability.hasVideo||self._streamsMutedSettings.videoMuted}),self._inRoom&&(self._trigger("streamMuted",self._user.sid,self.getPeerInfo(),!0,self._streams.screenshare&&self._streams.screenshare.stream),self._trigger("peerUpdated",self._user.sid,self.getPeerInfo(),!0)))}},Skylink.prototype.enableAudio=function(){this.muteStream({audioMuted:!1,videoMuted:this._streamsMutedSettings.videoMuted})},Skylink.prototype.disableAudio=function(){this.muteStream({audioMuted:!0,videoMuted:this._streamsMutedSettings.videoMuted})},Skylink.prototype.enableVideo=function(){this.muteStream({videoMuted:!1,audioMuted:this._streamsMutedSettings.audioMuted})},Skylink.prototype.disableVideo=function(){this.muteStream({videoMuted:!0,audioMuted:this._streamsMutedSettings.audioMuted})},Skylink.prototype.shareScreen=function(enableAudio,mediaSource,callback){var self=this,enableAudioSettings=!1,useMediaSource=[self.MEDIA_SOURCE.SCREEN],checkIfSourceExistsFn=function(val){for(var prop in self.MEDIA_SOURCE)if(self.MEDIA_SOURCE.hasOwnProperty(prop)&&self.MEDIA_SOURCE[prop]===val)return!0;return!1};if(enableAudio&&"string"==typeof enableAudio)checkIfSourceExistsFn(enableAudio)&&(useMediaSource=[enableAudio]);else if(Array.isArray(enableAudio)){for(var enableAudioArr=[],i=0;i<enableAudio.length;i++)checkIfSourceExistsFn(enableAudio[i])&&enableAudioArr.push(enableAudio[i]);enableAudioArr.length>0&&(useMediaSource=enableAudioArr)}else enableAudio&&"object"==typeof enableAudio?enableAudioSettings={usedtx:"boolean"==typeof enableAudio.usedtx?enableAudio.usedtx:null,useinbandfec:"boolean"==typeof enableAudio.useinbandfec?enableAudio.useinbandfec:null,stereo:!0===enableAudio.stereo,echoCancellation:!1!==enableAudio.echoCancellation,deviceId:enableAudio.deviceId}:!0===enableAudio?enableAudioSettings=!0===enableAudio&&{usedtx:null,useinbandfec:null,stereo:!1,echoCancellation:!0,deviceId:null}:"function"==typeof enableAudio&&(callback=enableAudio,enableAudio=!1);if(mediaSource&&"string"==typeof mediaSource)checkIfSourceExistsFn(mediaSource)&&(useMediaSource=[mediaSource]);else if(Array.isArray(mediaSource)){for(var mediaSourceArr=[],i=0;i<mediaSource.length;i++)checkIfSourceExistsFn(mediaSource[i])&&mediaSourceArr.push(mediaSource[i]);mediaSourceArr.length>0&&(useMediaSource=mediaSourceArr)}else"function"==typeof mediaSource&&(callback=mediaSource);useMediaSource.indexOf("audio")>-1&&-1===useMediaSource.indexOf("tab")&&(useMediaSource.splice(useMediaSource.indexOf("audio"),1),0===useMediaSource.length&&(useMediaSource=[self.MEDIA_SOURCE.SCREEN])),self._throttle(function(runFn){if(runFn){var settings={settings:{audio:enableAudioSettings,video:{screenshare:!0,exactConstraints:!1}},getUserMediaSettings:{audio:!1,video:{mediaSource:useMediaSource}}},mediaAccessSuccessFn=function(stream){self.off("mediaAccessError",mediaAccessErrorFn),self._inRoom?(self._trigger("incomingStream",self._user.sid,stream,!0,self.getPeerInfo(),!0,stream.id||stream.label),self._trigger("peerUpdated",self._user.sid,self.getPeerInfo(),!0),Object.keys(self._peerConnections).length>0||self._hasMCU?self._refreshPeerConnection(Object.keys(self._peerConnections),!1,{},function(err,success){if(err)return log.error("Failed refreshing connections for shareScreen() ->",err),void("function"==typeof callback&&callback(new Error("Failed refreshing connections."),null));"function"==typeof callback&&callback(null,stream)}):"function"==typeof callback&&callback(null,stream)):"function"==typeof callback&&callback(null,stream)},mediaAccessErrorFn=function(error){self.off("mediaAccessSuccess",mediaAccessSuccessFn),"function"==typeof callback&&callback(error,null)};self.once("mediaAccessSuccess",mediaAccessSuccessFn,function(stream,isScreensharing){return isScreensharing}),self.once("mediaAccessError",mediaAccessErrorFn,function(error,isScreensharing){return isScreensharing});var getUserMediaAudioSettings=!!enableAudioSettings&&{echoCancellation:enableAudioSettings.echoCancellation};try{var hasDefaultAudioTrack=!1;enableAudioSettings&&("firefox"===window.webrtcDetectedBrowser?(hasDefaultAudioTrack=!0,settings.getUserMediaSettings.audio=getUserMediaAudioSettings):useMediaSource.indexOf("audio")>-1&&useMediaSource.indexOf("tab")>-1&&(hasDefaultAudioTrack=!0,settings.getUserMediaSettings.audio={}));var successCbFn=function(stream){if(hasDefaultAudioTrack||!enableAudioSettings)return void self._onStreamAccessSuccess(stream,settings,!0,!1);settings.getUserMediaSettings.audio=getUserMediaAudioSettings;self._useSafariWebRTC?navigator.mediaDevices.getUserMedia({audio:getUserMediaAudioSettings}).then(successCbFn).catch(errorCbFn):navigator.getUserMedia({audio:getUserMediaAudioSettings},successCbFn,errorCbFn)},errorCbFn=function(error){self._onStreamAccessError(error,settings,!0,!1)};self._useSafariWebRTC?navigator.mediaDevices.getUserMedia(settings.getUserMediaSettings).catch(successCbFn).then(errorCbFn):navigator.getUserMedia(settings.getUserMediaSettings,successCbFn,errorCbFn)}catch(error){self._onStreamAccessError(error,settings,!0,!1)}}else if(self._throttlingShouldThrowError){var throttleLimitError="Unable to run as throttle interval has not reached ("+self._throttlingTimeouts.shareScreen+"ms).";log.error(throttleLimitError),"function"==typeof callback&&callback(new Error(throttleLimitError),null)}},"shareScreen",self._throttlingTimeouts.shareScreen)},Skylink.prototype.stopScreen=function(){this._streams.screenshare&&(this._stopStreams({screenshare:!0}),this._inRoom&&(this._streams.userMedia&&this._streams.userMedia.stream&&(this._trigger("incomingStream",this._user.sid,this._streams.userMedia.stream,!0,this.getPeerInfo(),!1,this._streams.userMedia.stream.id||this._streams.userMedia.stream.label),this._trigger("peerUpdated",this._user.sid,this.getPeerInfo(),!0)),this._refreshPeerConnection(Object.keys(this._peerConnections),{},!1)))},Skylink.prototype._muteStreams=function(){var self=this,hasVideo=!1,hasAudio=!1,muteFn=function(stream){for(var audioTracks=stream.getAudioTracks(),videoTracks=stream.getVideoTracks(),a=0;a<audioTracks.length;a++)audioTracks[a].enabled=!self._streamsMutedSettings.audioMuted,hasAudio=!0;for(var v=0;v<videoTracks.length;v++)videoTracks[v].enabled=!self._streamsMutedSettings.videoMuted,hasVideo=!0};if(self._streams.userMedia&&self._streams.userMedia.stream&&muteFn(self._streams.userMedia.stream),self._streams.screenshare&&self._streams.screenshare.stream&&muteFn(self._streams.screenshare.stream),self._streams.screenshare&&self._streams.screenshare.streamClone&&muteFn(self._streams.screenshare.streamClone),"edge"===window.webrtcDetectedBrowser)for(var peerId in self._peerConnections)if(self._peerConnections.hasOwnProperty(peerId)&&self._peerConnections[peerId])for(var localStreams=self._peerConnections[peerId].getLocalStreams(),s=0;s<localStreams.length;s++)muteFn(localStreams[s]);return log.debug("Updated Streams muted status ->",self._streamsMutedSettings),{hasVideo:hasVideo,hasAudio:hasAudio}},Skylink.prototype._stopStreams=function(options){var self=this,stopFn=function(stream){var streamId=stream.id||stream.label;log.debug([null,"MediaStream",streamId,"Stopping Stream ->"],stream);try{for(var audioTracks=stream.getAudioTracks(),videoTracks=stream.getVideoTracks(),a=0;a<audioTracks.length;a++)audioTracks[a].stop();for(var v=0;v<videoTracks.length;v++)videoTracks[v].stop()}catch(error){stream.stop()}self._streamsStoppedCbs[streamId]&&(self._streamsStoppedCbs[streamId](),delete self._streamsStoppedCbs[streamId])},stopUserMedia=!1,stopScreenshare=!1,hasStoppedMedia=!1;"object"==typeof options&&(stopUserMedia=!0===options.userMedia,stopScreenshare=!0===options.screenshare),stopUserMedia&&self._streams.userMedia&&(self._streams.userMedia.stream&&stopFn(self._streams.userMedia.stream),self._streams.userMedia=null,hasStoppedMedia=!0),stopScreenshare&&self._streams.screenshare&&(self._streams.screenshare.streamClone&&stopFn(self._streams.screenshare.streamClone),self._streams.screenshare.stream&&stopFn(self._streams.screenshare.stream),self._streams.screenshare=null,hasStoppedMedia=!0),self._inRoom&&hasStoppedMedia&&self._trigger("peerUpdated",self._user.sid,self.getPeerInfo(),!0),log.log("Stopping Streams with settings ->",options)},Skylink.prototype._parseStreamSettings=function(options){var settings={settings:{audio:!1,video:!1},mutedSettings:{shouldAudioMuted:!1,shouldVideoMuted:!1},getUserMediaSettings:{audio:!1,video:!1}};return options.audio&&(settings.settings.audio={stereo:!1,exactConstraints:!!options.useExactConstraints,echoCancellation:!0},settings.getUserMediaSettings.audio={echoCancellation:!0},"object"==typeof options.audio&&("boolean"==typeof options.audio.stereo&&(settings.settings.audio.stereo=options.audio.stereo),"boolean"==typeof options.audio.useinbandfec&&(settings.settings.audio.useinbandfec=options.audio.useinbandfec),"boolean"==typeof options.audio.usedtx&&(settings.settings.audio.usedtx=options.audio.usedtx),
"number"==typeof options.audio.maxplaybackrate&&options.audio.maxplaybackrate>=8e3&&options.audio.maxplaybackrate<=48e3&&(settings.settings.audio.maxplaybackrate=options.audio.maxplaybackrate),"boolean"==typeof options.audio.mute&&(settings.mutedSettings.shouldAudioMuted=options.audio.mute),"edge"!==window.webrtcDetectedBrowser&&("boolean"==typeof options.audio.echoCancellation&&(settings.settings.audio.echoCancellation=options.audio.echoCancellation,settings.getUserMediaSettings.audio.echoCancellation=options.audio.echoCancellation),Array.isArray(options.audio.optional)&&(settings.settings.audio.optional=clone(options.audio.optional),settings.getUserMediaSettings.audio.optional=clone(options.audio.optional)),options.audio.deviceId&&"string"==typeof options.audio.deviceId&&"firefox"!==window.webrtcDetectedBrowser&&(settings.settings.audio.deviceId=options.audio.deviceId,settings.getUserMediaSettings.audio.deviceId=options.useExactConstraints?{exact:options.audio.deviceId}:{ideal:options.audio.deviceId}))),"edge"===window.webrtcDetectedBrowser&&(settings.getUserMediaSettings.audio=!0)),options.video&&(settings.settings.video={resolution:clone(this.VIDEO_RESOLUTION.VGA),screenshare:!1,exactConstraints:!!options.useExactConstraints},settings.getUserMediaSettings.video={},"object"==typeof options.video?("boolean"==typeof options.video.mute&&(settings.mutedSettings.shouldVideoMuted=options.video.mute),Array.isArray(options.video.optional)&&(settings.settings.video.optional=clone(options.video.optional),settings.getUserMediaSettings.video.optional=clone(options.video.optional)),options.video.deviceId&&"string"==typeof options.video.deviceId&&"firefox"!==window.webrtcDetectedBrowser&&(settings.settings.video.deviceId=options.video.deviceId,settings.getUserMediaSettings.video.deviceId=options.useExactConstraints?{exact:options.video.deviceId}:{ideal:options.video.deviceId}),options.video.resolution&&"object"==typeof options.video.resolution&&((options.video.resolution.width&&"object"==typeof options.video.resolution.width||"number"==typeof options.video.resolution.width)&&(settings.settings.video.resolution.width=options.video.resolution.width),(options.video.resolution.height&&"object"==typeof options.video.resolution.height||"number"==typeof options.video.resolution.height)&&(settings.settings.video.resolution.height=options.video.resolution.height)),settings.getUserMediaSettings.video.width="object"==typeof settings.settings.video.resolution.width?settings.settings.video.resolution.width:options.useExactConstraints?{exact:settings.settings.video.resolution.width}:{max:settings.settings.video.resolution.width},settings.getUserMediaSettings.video.height="object"==typeof settings.settings.video.resolution.height?settings.settings.video.resolution.height:options.useExactConstraints?{exact:settings.settings.video.resolution.height}:{max:settings.settings.video.resolution.height},(options.video.frameRate&&"object"==typeof options.video.frameRate||"number"==typeof options.video.frameRate&&!self._isUsingPlugin)&&(settings.settings.video.frameRate=options.video.frameRate,settings.getUserMediaSettings.video.frameRate="object"==typeof settings.settings.video.frameRate?settings.settings.video.frameRate:options.useExactConstraints?{exact:settings.settings.video.frameRate}:{max:settings.settings.video.frameRate}),options.video.facingMode&&["string","object"].indexOf(typeof options.video.facingMode)>-1&&self._isUsingPlugin&&(settings.settings.video.facingMode=options.video.facingMode,settings.getUserMediaSettings.video.facingMode="object"==typeof settings.settings.video.facingMode?settings.settings.video.facingMode:options.useExactConstraints?{exact:settings.settings.video.facingMode}:{max:settings.settings.video.facingMode})):settings.getUserMediaSettings.video={width:options.useExactConstraints?{exact:settings.settings.video.resolution.width}:{max:settings.settings.video.resolution.width},height:options.useExactConstraints?{exact:settings.settings.video.resolution.height}:{max:settings.settings.video.resolution.height}},"edge"===window.webrtcDetectedBrowser&&(settings.settings.video={screenshare:!1,exactConstraints:!!options.useExactConstraints},settings.getUserMediaSettings.video=!0)),settings},Skylink.prototype._onStreamAccessSuccess=function(stream,settings,isScreenSharing,isAudioFallback){var self=this,streamId=stream.id||stream.label,streamHasEnded=!1;if(log.log([null,"MediaStream",streamId,"Has access to stream ->"],stream),!isScreenSharing&&self._streams.userMedia?self._stopStreams({userMedia:!0,screenshare:!1}):isScreenSharing&&self._streams.screenshare&&self._stopStreams({userMedia:!1,screenshare:!0}),self._streamsStoppedCbs[streamId]=function(){log.log([null,"MediaStream",streamId,"Stream has ended"]),streamHasEnded=!0,self._trigger("mediaAccessStopped",!!isScreenSharing,!!isAudioFallback,streamId),self._inRoom&&(log.debug([null,"MediaStream",streamId,"Sending Stream ended status to Peers"]),self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.STREAM,mid:self._user.sid,rid:self._room.id,cid:self._key,streamId:streamId,settings:settings.settings,status:"ended"}),self._trigger("streamEnded",self._user.sid,self.getPeerInfo(),!0,!!isScreenSharing,streamId),isScreenSharing&&self._streams.screenshare&&self._streams.screenshare.stream&&(self._streams.screenshare.stream.id||self._streams.screenshare.stream.label)===streamId?self._streams.screenshare=null:!isScreenSharing&&self._streams.userMedia&&self._streams.userMedia.stream&&(self._streams.userMedia.stream.id||self._streams.userMedia.stream.label)===streamId&&(self._streams.userMedia=null))},["chrome","opera"].indexOf(window.webrtcDetectedBrowser)>-1?(stream.oninactive=function(){self._streamsStoppedCbs[streamId]&&(self._streamsStoppedCbs[streamId](),delete self._streamsStoppedCbs[streamId])},isScreenSharing&&stream.getVideoTracks().length>0&&(stream.getVideoTracks()[0].onended=function(){setTimeout(function(){!streamHasEnded&&self._inRoom&&self.stopScreen()},350)})):"firefox"===window.webrtcDetectedBrowser?stream.endedInterval=setInterval(function(){void 0===stream.recordedTime&&(stream.recordedTime=0),stream.recordedTime===stream.currentTime?(clearInterval(stream.endedInterval),self._streamsStoppedCbs[streamId]&&(self._streamsStoppedCbs[streamId](),delete self._streamsStoppedCbs[streamId])):stream.recordedTime=stream.currentTime},1e3):stream.onended=function(){self._streamsStoppedCbs[streamId]&&(self._streamsStoppedCbs[streamId](),delete self._streamsStoppedCbs[streamId])},settings.settings.audio&&0===stream.getAudioTracks().length||settings.settings.video&&0===stream.getVideoTracks().length){var tracksNotSameError="Expected audio tracks length with "+(settings.settings.audio?"1":"0")+" and video tracks length with "+(settings.settings.video?"1":"0")+" but received audio tracks length with "+stream.getAudioTracks().length+" and video tracks length with "+stream.getVideoTracks().length;log.warn([null,"MediaStream",streamId,tracksNotSameError]);var requireAudio=!!settings.settings.audio,requireVideo=!!settings.settings.video;settings.settings.audio&&0===stream.getAudioTracks().length&&(settings.settings.audio=!1),settings.settings.video&&0===stream.getVideoTracks().length&&(settings.settings.video=!1),self._trigger("mediaAccessFallback",{error:new Error(tracksNotSameError),diff:{video:{expected:requireVideo?1:0,received:stream.getVideoTracks().length},audio:{expected:requireAudio?1:0,received:stream.getAudioTracks().length}}},self.MEDIA_ACCESS_FALLBACK_STATE.FALLBACKED,!!isScreenSharing,!!isAudioFallback,streamId)}self._streams[isScreenSharing?"screenshare":"userMedia"]={stream:stream,settings:settings.settings,constraints:settings.getUserMediaSettings},self._muteStreams(),self._trigger("mediaAccessSuccess",stream,!!isScreenSharing,!!isAudioFallback,streamId)},Skylink.prototype._onStreamAccessError=function(error,settings,isScreenSharing){var self=this;if(!isScreenSharing&&settings.settings.audio&&settings.settings.video&&self._audioFallback){log.debug("Fallbacking to retrieve audio only Stream"),self._trigger("mediaAccessFallback",{error:error,diff:null},self.MEDIA_ACCESS_FALLBACK_STATE.FALLBACKING,!1,!0);var successCbFn=function(stream){self._onStreamAccessSuccess(stream,settings,!1,!0)},errorCbFn=function(error){log.error("Failed fallbacking to retrieve audio only Stream ->",error),self._trigger("mediaAccessError",error,!1,!0),self._trigger("mediaAccessFallback",{error:error,diff:null},self.MEDIA_ACCESS_FALLBACK_STATE.ERROR,!1,!0)};return void(self._useSafariWebRTC?navigator.mediaDevices.getUserMedia({audio:!0}).then(successCbFn).catch(errorCbFn):navigator.getUserMedia({audio:!0},successCbFn,errorCbFn))}log.error("Failed retrieving "+(isScreenSharing?"screensharing":"camera")+" Stream ->",error),self._trigger("mediaAccessError",error,!!isScreenSharing,!1)},Skylink.prototype._onRemoteStreamAdded=function(targetMid,stream,isScreenSharing){var self=this,streamId=self._useSafariWebRTC?self._peerConnections[targetMid]&&self._peerConnections[targetMid].remoteStreamId:stream.id||stream.label;if(!self._peerInformations[targetMid])return void log.warn([targetMid,"MediaStream",streamId,"Received remote stream when peer is not connected. Ignoring stream ->"],stream);log.log([targetMid,"MediaStream",streamId,"Received remote stream ->"],stream),isScreenSharing&&log.log([targetMid,"MediaStream",streamId,"Peer is having a screensharing session with user"]),self._trigger("incomingStream",targetMid,stream,!1,self.getPeerInfo(targetMid),isScreenSharing,streamId),self._trigger("peerUpdated",targetMid,self.getPeerInfo(targetMid),!1)},Skylink.prototype._addLocalMediaStreams=function(peerId){var self=this;try{log.log([peerId,null,null,"Adding local stream"]);var pc=self._peerConnections[peerId],offerToReceiveAudio=(self._peerInformations[peerId],self._peerInformations[peerId],!(!self._sdpSettings.connection.audio&&"MCU"!==peerId)),offerToReceiveVideo=!(!self._sdpSettings.connection.video&&"MCU"!==peerId)&&self._getSDPEdgeVideoSupports(peerId);if(pc)if(pc.signalingState!==self.PEER_CONNECTION_STATE.CLOSED){var updateStreamFn=function(updatedStream){if(self._useSafariWebRTC){var tracks=updatedStream?updatedStream.getTracks():[];pc.getSenders().forEach(function(sender){if(updatedStream){for(var hasTrack=!1,i=0;i<tracks.length;i++)tracks[i]===sender.track&&(tracks.splice(i,-1),hasTrack=!0,i--);hasTrack||pc.removeTrack(sender)}else pc.removeTrack(sender)}),tracks.forEach(function(track){pc.addTrack(track)}),pc.localStreamId=updatedStream?updatedStream.id:null,pc.localStream=updatedStream||null}else{for(var hasStream=!1,streams=pc.getLocalStreams(),i=0;i<streams.length;i++)null===updatedStream||streams[i].id!==updatedStream.id?pc.removeStream(streams[i]):hasStream=!0;if(null!==updatedStream&&!hasStream){if("edge"!==window.webrtcDetectedBrowser||offerToReceiveVideo&&offerToReceiveAudio)pc.addStream(updatedStream);else try{for(var cloneStream=updatedStream.clone(),tracks=cloneStream.getTracks(),t=0;t<tracks.length;t++)("video"===tracks[t].kind?offerToReceiveVideo:offerToReceiveAudio)?tracks[t].enabled="audio"===tracks[t].kind?!self._streamsMutedSettings.audioMuted:!self._streamsMutedSettings.videoMuted:cloneStream.removeTrack(tracks[t]);pc.addStream(cloneStream)}catch(e){pc.addStream(updatedStream)}pc.addStream("edge"===window.webrtcDetectedBrowser?updatedStream.clone():updatedStream)}}};self._streams.screenshare&&self._streams.screenshare.stream?(log.debug([peerId,"MediaStream",null,"Sending screen"],self._streams.screenshare.stream),updateStreamFn(self._streams.screenshare.stream)):self._streams.userMedia&&self._streams.userMedia.stream?(log.debug([peerId,"MediaStream",null,"Sending stream"],self._streams.userMedia.stream),updateStreamFn(self._streams.userMedia.stream)):(log.warn([peerId,"MediaStream",null,"No media to send. Will be only receiving"]),updateStreamFn(null))}else log.warn([peerId,"MediaStream",null,"Not adding any stream as signalingState is closed"]);else log.warn([peerId,"MediaStream",self._mediaStream,"Not adding stream as peerconnection object does not exists"])}catch(error){(error.message||"").indexOf("already added")>-1?log.warn([peerId,null,null,"Not re-adding stream as LocalMediaStream is already added"],error):log.error([peerId,null,null,"Failed adding local stream"],error)}},Skylink.prototype._handleEndedStreams=function(peerId,checkStreamId){var self=this;self._streamsSession[peerId]=self._streamsSession[peerId]||{};var renderEndedFn=function(streamId){var shouldTrigger=!!self._streamsSession[peerId][streamId];if(!checkStreamId&&self._peerConnections[peerId]&&self._peerConnections[peerId].signalingState!==self.PEER_CONNECTION_STATE.CLOSED)if(self._useSafariWebRTC)streamId===self._peerConnections[peerId].remoteStreamId&&(shouldTrigger=!1);else for(var streams=self._peerConnections[peerId].getRemoteStreams(),i=0;i<streams.length;i++)if(streamId===(streams[i].id||streams[i].label)){shouldTrigger=!1;break}if(shouldTrigger){var peerInfo=clone(self.getPeerInfo(peerId));peerInfo.settings.audio=clone(self._streamsSession[peerId][streamId].audio),peerInfo.settings.video=clone(self._streamsSession[peerId][streamId].video);var hasScreenshare=peerInfo.settings.video&&"object"==typeof peerInfo.settings.video&&!!peerInfo.settings.video.screenshare;self._streamsSession[peerId][streamId]=!1,self._trigger("streamEnded",peerId,peerInfo,!1,hasScreenshare,streamId)}};if(checkStreamId)renderEndedFn(checkStreamId);else for(var prop in self._streamsSession[peerId])self._streamsSession[peerId].hasOwnProperty(prop)&&self._streamsSession[peerId][prop]&&renderEndedFn(prop)},Skylink.prototype._setSDPCodecParams=function(targetMid,sessionDescription){var self=this,parseFn=function(type,codecName,samplingRate,settings){var mLine=sessionDescription.sdp.match(new RegExp("m="+type+" .*\r\n","gi"));if(Array.isArray(mLine)&&mLine.length>0){var codecsList=sessionDescription.sdp.match(new RegExp("a=rtpmap:.* "+codecName+"/"+(samplingRate?samplingRate+("audio"===type?"[/]*.*":".*"):".*")+"\r\n","gi"));if(Array.isArray(codecsList)&&codecsList.length>0)for(var i=0;i<codecsList.length;i++){var payload=(codecsList[i].split("a=rtpmap:")[1]||"").split(" ")[0];if(payload){var fmtpLine=sessionDescription.sdp.match(new RegExp("a=fmtp:"+payload+" .*\r\n","gi")),updatedFmtpLine="a=fmtp:"+payload+" ",addedKeys=[];if(Array.isArray(fmtpLine)&&fmtpLine.length>0){for(var fmtpParts=(fmtpLine[0].split("a=fmtp:"+payload+" ")[1]||"").replace(/ /g,"").replace(/\r\n/g,"").split(";"),j=0;j<fmtpParts.length;j++)if(fmtpParts[j]){var keyAndValue=fmtpParts[j].split("=");settings.hasOwnProperty(keyAndValue[0])?updatedFmtpLine+="boolean"==typeof settings[keyAndValue[0]]?settings[keyAndValue[0]]?keyAndValue[0]+"=1;":"":keyAndValue[0]+"="+settings[keyAndValue[0]]+";":updatedFmtpLine+=fmtpParts[j]+";",addedKeys.push(keyAndValue[0])}sessionDescription.sdp=sessionDescription.sdp.replace(fmtpLine[0],"")}for(var key in settings)settings.hasOwnProperty(key)&&-1===addedKeys.indexOf(key)&&(updatedFmtpLine+="boolean"==typeof settings[key]?settings[key]?key+"=1;":"":key+"="+settings[key]+";",addedKeys.push(key));updatedFmtpLine!=="a=fmtp:"+payload+" "&&(sessionDescription.sdp=sessionDescription.sdp.replace(codecsList[i],codecsList[i]+updatedFmtpLine+"\r\n"))}}}};return parseFn("audio",self.AUDIO_CODEC.OPUS,48e3,function(){var opusOptions={},audioSettings=self._streams.screenshare?self._streams.screenshare.settings.audio:self._streams.userMedia?self._streams.userMedia.settings.audio:{};return audioSettings=audioSettings&&"object"==typeof audioSettings?audioSettings:{},"boolean"==typeof self._codecParams.audio.opus.stereo?opusOptions.stereo=self._codecParams.audio.opus.stereo:"boolean"==typeof audioSettings.stereo&&(opusOptions.stereo=audioSettings.stereo),"boolean"==typeof self._codecParams.audio.opus["sprop-stereo"]?opusOptions["sprop-stereo"]=self._codecParams.audio.opus["sprop-stereo"]:"boolean"==typeof audioSettings.stereo&&(opusOptions["sprop-stereo"]=audioSettings.stereo),"boolean"==typeof self._codecParams.audio.opus.usedtx?opusOptions.usedtx=self._codecParams.audio.opus.usedtx:"boolean"==typeof audioSettings.usedtx&&(opusOptions.usedtx=audioSettings.usedtx),"boolean"==typeof self._codecParams.audio.opus.useinbandfec?opusOptions.useinbandfec=self._codecParams.audio.opus.useinbandfec:"boolean"==typeof audioSettings.useinbandfec&&(opusOptions.useinbandfec=audioSettings.useinbandfec),"number"==typeof self._codecParams.audio.opus.maxplaybackrate?opusOptions.maxplaybackrate=self._codecParams.audio.opus.maxplaybackrate:"number"==typeof audioSettings.maxplaybackrate&&(opusOptions.maxplaybackrate=audioSettings.maxplaybackrate),"number"==typeof self._codecParams.audio.opus.minptime?opusOptions.minptime=self._codecParams.audio.opus.minptime:"number"==typeof audioSettings.minptime&&(opusOptions.minptime=audioSettings.minptime),opusOptions}()),parseFn("video",self.VIDEO_CODEC.VP8,null,function(){var vp8Options={};return"number"==typeof self._codecParams.video.vp8.maxFr&&(vp8Options["max-fr"]=self._codecParams.video.vp8.maxFr),"number"==typeof self._codecParams.video.vp8.maxFs&&(vp8Options["max-fs"]=self._codecParams.video.vp8.maxFs),vp8Options}()),parseFn("video",self.VIDEO_CODEC.VP9,null,function(){var vp9Options={};return"number"==typeof self._codecParams.video.vp9.maxFr&&(vp9Options["max-fr"]=self._codecParams.video.vp9.maxFr),"number"==typeof self._codecParams.video.vp9.maxFs&&(vp9Options["max-fs"]=self._codecParams.video.vp9.maxFs),vp9Options}()),parseFn("video",self.VIDEO_CODEC.H264,null,function(){var h264Options={};return"string"==typeof self._codecParams.video.h264.levelAsymmetryAllowed&&(h264Options["profile-level-id"]=self._codecParams.video.h264.profileLevelId),"boolean"==typeof self._codecParams.video.h264.levelAsymmetryAllowed&&(h264Options["level-asymmetry-allowed"]=self._codecParams.video.h264.levelAsymmetryAllowed),"boolean"==typeof self._codecParams.video.h264.packetizationMode&&(h264Options["packetization-mode"]=self._codecParams.video.h264.packetizationMode),h264Options}()),sessionDescription.sdp},Skylink.prototype._setSDPBitrate=function(targetMid,sessionDescription){var sdpLines=sessionDescription.sdp.split("\r\n"),parseFn=function(type,bw){var mLineType=type,mLineIndex=-1,cLineIndex=-1;"data"===type&&(mLineType="application");for(var i=0;i<sdpLines.length;i++)if(0===sdpLines[i].indexOf("m="+mLineType))mLineIndex=i;else if(mLineIndex>0){if(0===sdpLines[i].indexOf("m="))break;0===sdpLines[i].indexOf("c=")?cLineIndex=i:0!==sdpLines[i].indexOf("b=AS:")&&0!==sdpLines[i].indexOf("b:TIAS:")||(sdpLines.splice(i,1),i--)}return"number"==typeof bw&&bw>0?-1===cLineIndex?void log.error([targetMid,"RTCSessionDesription",sessionDescription.type,'Failed setting "'+type+'" bandwidth as c-line is missing.']):(log.info([targetMid,"RTCSessionDesription",sessionDescription.type,'Limiting maximum sending "'+type+'" bandwidth ->'],bw),void sdpLines.splice(cLineIndex+1,0,"firefox"===window.webrtcDetectedBrowser?"b=TIAS:"+(1e3*bw*(window.webrtcDetectedVersion>52&&window.webrtcDetectedVersion<55?1e3:1)).toFixed(0):"b=AS:"+bw)):void log.warn([targetMid,"RTCSessionDesription",sessionDescription.type,'Not limiting "'+type+'" bandwidth'])},bASAudioBw=this._streamsBandwidthSettings.bAS.audio,bASVideoBw=this._streamsBandwidthSettings.bAS.video,bASDataBw=this._streamsBandwidthSettings.bAS.data,googleXMinBw=this._streamsBandwidthSettings.googleX.min,googleXMaxBw=this._streamsBandwidthSettings.googleX.max;if(this._peerCustomConfigs[targetMid]&&(this._peerCustomConfigs[targetMid].bandwidth&&"object"==typeof this._peerCustomConfigs[targetMid].bandwidth&&("number"==typeof this._peerCustomConfigs[targetMid].bandwidth.audio&&(bASAudioBw=this._peerCustomConfigs[targetMid].bandwidth.audio),"number"==typeof this._peerCustomConfigs[targetMid].bandwidth.video&&(bASVideoBw=this._peerCustomConfigs[targetMid].bandwidth.video),"number"==typeof this._peerCustomConfigs[targetMid].bandwidth.data&&(bASDataBw=this._peerCustomConfigs[targetMid].bandwidth.data)),this._peerCustomConfigs[targetMid].googleXBandwidth&&"object"==typeof this._peerCustomConfigs[targetMid].googleXBandwidth&&("number"==typeof this._peerCustomConfigs[targetMid].googleXBandwidth.min&&(googleXMinBw=this._peerCustomConfigs[targetMid].googleXBandwidth.min),"number"==typeof this._peerCustomConfigs[targetMid].googleXBandwidth.max&&(googleXMaxBw=this._peerCustomConfigs[targetMid].googleXBandwidth.max))),parseFn("audio",bASAudioBw),parseFn("video",bASVideoBw),parseFn("data",bASDataBw),"number"==typeof googleXMinBw||"number"==typeof googleXMaxBw){for(var codec=null,codecRtpMapLineIndex=-1,codecFmtpLineIndex=-1,j=0;j<sdpLines.length;j++)if(0===sdpLines[j].indexOf("m=video"))codec=sdpLines[j].split(" ")[3];else if(codec){if(0===sdpLines[j].indexOf("m="))break;if(0===sdpLines[j].indexOf("a=rtpmap:"+codec+" "))codecRtpMapLineIndex=j;else if(0===sdpLines[j].indexOf("a=fmtp:"+codec+" ")){sdpLines[j]=sdpLines[j].replace(/x-google-(min|max)-bitrate=[0-9]*[;]*/gi,""),codecFmtpLineIndex=j;break}}if(codecRtpMapLineIndex>-1){var xGoogleParams="";"number"==typeof googleXMinBw&&(xGoogleParams+="x-google-min-bitrate="+googleXMinBw+";"),"number"==typeof googleXMaxBw&&(xGoogleParams+="x-google-max-bitrate="+googleXMaxBw+";"),log.info([targetMid,"RTCSessionDesription",sessionDescription.type,"Limiting x-google-bitrate ->"],xGoogleParams),codecFmtpLineIndex>-1?sdpLines[codecFmtpLineIndex]+=(sdpLines[codecFmtpLineIndex].split(" ")[1]?";":"")+xGoogleParams:sdpLines.splice(codecRtpMapLineIndex+1,0,"a=fmtp:"+codec+" "+xGoogleParams)}}return sdpLines.join("\r\n")},Skylink.prototype._setSDPCodec=function(targetMid,sessionDescription,overrideSettings){var self=this,parseFn=function(type,codecSettings){var codec="object"==typeof codecSettings?codecSettings.codec:codecSettings,samplingRate="object"==typeof codecSettings?codecSettings.samplingRate:null,channels="object"==typeof codecSettings?codecSettings.channels:null;if(codec===self["audio"===type?"AUDIO_CODEC":"VIDEO_CODEC"].AUTO)return void log.warn([targetMid,"RTCSessionDesription",sessionDescription.type,'Not preferring any codec for "'+type+'" streaming. Using browser selection.']);var mLine=sessionDescription.sdp.match(new RegExp("m="+type+" .*\r\n","gi"));if(!(Array.isArray(mLine)&&mLine.length>0))return void log.error([targetMid,"RTCSessionDesription",sessionDescription.type,'Not preferring any codec for "'+type+'" streaming as m= line is not found.']);var setLineFn=function(codecsList,isSROk,isChnlsOk){if(Array.isArray(codecsList)&&codecsList.length>0){isSROk||(samplingRate=null),isChnlsOk||(channels=null),log.info([targetMid,"RTCSessionDesription",sessionDescription.type,'Preferring "'+codec+'" (samplingRate: '+(samplingRate||"n/a")+", channels: "+(channels||"n/a")+') for "'+type+'" streaming.']);var line=mLine[0],lineParts=line.replace("\r\n","").split(" ");line=lineParts[0]+" "+lineParts[1]+" "+lineParts[2]+" ",lineParts.splice(0,3);for(var i=0;i<codecsList.length;i++){var parts=(codecsList[i].split("a=rtpmap:")[1]||"").split(" ");parts.length<2||(line+=parts[0]+" ")}for(var j=0;j<lineParts.length;j++)line.indexOf(" "+lineParts[j])>0?(lineParts.splice(j,1),j--):sessionDescription.sdp.match(new RegExp("a=rtpmap:"+lineParts[j]+" "+codec+"/.*\r\n","gi"))&&(line+=lineParts[j]+" ",lineParts.splice(j,1),j--);return line+=lineParts.join(" ")+"\r\n",sessionDescription.sdp=sessionDescription.sdp.replace(mLine[0],line),!0}};if(samplingRate){if("audio"===type&&channels&&setLineFn(sessionDescription.sdp.match(new RegExp("a=rtpmap:.* "+codec+"/"+samplingRate+(1===channels?"[/1]*":"/"+channels)+"\r\n","gi")),!0,!0))return;if(setLineFn(sessionDescription.sdp.match(new RegExp("a=rtpmap:.* "+codec+"/"+samplingRate+"[/]*.*\r\n","gi")),!0))return}"audio"===type&&channels&&setLineFn(sessionDescription.sdp.match(new RegExp("a=rtpmap:.* "+codec+"/.*/"+channels+"\r\n","gi")),!1,!0)||setLineFn(sessionDescription.sdp.match(new RegExp("a=rtpmap:.* "+codec+"/.*\r\n","gi")))};return parseFn("audio",overrideSettings?overrideSettings.audio:self._selectedAudioCodec),parseFn("video",overrideSettings?overrideSettings.video:self._selectedVideoCodec),sessionDescription.sdp},Skylink.prototype._removeSDPFirefoxH264Pref=function(targetMid,sessionDescription){return log.info([targetMid,"RTCSessionDesription",sessionDescription.type,"Removing Firefox experimental H264 flag to ensure interopability reliability"]),sessionDescription.sdp.replace(/a=fmtp:0 profile-level-id=0x42e00c;packetization-mode=1\r\n/g,"")},Skylink.prototype._addSDPMediaStreamTrackIDs=function(targetMid,sessionDescription){var localStream=null,localStreamId=null;if(this._useSafariWebRTC){if(!this._peerConnections[targetMid]||!this._peerConnections[targetMid].localStream)return log.log([targetMid,"RTCSessionDesription",sessionDescription.type,"Not enforcing MediaStream IDs as no Streams is sent."]),sessionDescription.sdp;localStream=this._peerConnections[targetMid].localStream,localStreamId=this._peerConnections[targetMid].localStreamId||this._peerConnections[targetMid].localStream.id}else{if(!(this._peerConnections[targetMid]&&this._peerConnections[targetMid].getLocalStreams().length>0))return log.log([targetMid,"RTCSessionDesription",sessionDescription.type,"Not enforcing MediaStream IDs as no Streams is sent."]),sessionDescription.sdp;localStream=this._peerConnections[targetMid].getLocalStreams()[0],localStreamId=localStream.id||localStream.label}var sessionDescriptionStr=sessionDescription.sdp;this._enableIceTrickle||(sessionDescriptionStr=sessionDescriptionStr.replace(/a=end-of-candidates\r\n/g,""));var sdpLines=sessionDescriptionStr.split("\r\n"),parseFn=(this._peerInformations[targetMid],function(type,tracks){if(0===tracks.length)return void log.log([targetMid,"RTCSessionDesription",sessionDescription.type,'Not enforcing "'+type+'" MediaStreamTrack IDs as no Stream "'+type+'" tracks is sent.']);for(var trackId=tracks[0].id||tracks[0].label,trackLabel=tracks[0].label||"Default",ssrcId=null,hasReachedType=!1,i=0;i<sdpLines.length;i++)if(0!==sdpLines[i].indexOf("m="+type)){if(hasReachedType&&0===sdpLines[i].indexOf("a=ssrc:")){ssrcId||(ssrcId=(sdpLines[i].split(":")[1]||"").split(" ")[0]||null),ssrcId&&0===sdpLines[i].indexOf("a=ssrc:"+ssrcId+" ")&&(sdpLines[i].indexOf(" cname:")>0?(log.info([targetMid,"RTCSessionDesription",sessionDescription.type,"Updating MediaStreamTrack ssrc ("+ssrcId+') for "'+localStreamId+'" stream and "'+trackId+'" (label:"'+trackLabel+'")']),sdpLines.splice(i+1,0,"a=ssrc:"+ssrcId+" msid:"+localStreamId+" "+trackId,"a=ssrc:"+ssrcId+" mslabel:"+trackId,"a=ssrc:"+ssrcId+" label:"+trackId),i+=3):(sdpLines.splice(i,1),i--));break}}else{if(hasReachedType)break;hasReachedType=!0}});if(parseFn("audio",localStream.getAudioTracks()),parseFn("video",localStream.getVideoTracks()),!this._enableIceTrickle){log.info([targetMid,"RTCSessionDesription",sessionDescription.type,"Appending end-of-candidates signal for non-trickle ICE connection."]);for(var i=0;i<sdpLines.length;i++)0===sdpLines[i].indexOf("a=candidate:")&&(sdpLines[i+1]&&(0===sdpLines[i+1].indexOf("a=candidate:")||0===sdpLines[i+1].indexOf("a=end-of-candidates"))||(sdpLines.splice(i+1,0,"a=end-of-candidates"),i++))}if(sessionDescription.type===this.HANDSHAKE_PROGRESS.ANSWER&&this._sdpSessions[targetMid]){for(var mLineIndex=-1,j=0;j<sdpLines.length;j++)if(0===sdpLines[j].indexOf("a=group:BUNDLE")&&this._sdpSessions[targetMid].remote.bundleLine&&this._peerConnectionConfig.bundlePolicy===this.BUNDLE_POLICY.MAX_BUNDLE)sdpLines[j]=this._sdpSessions[targetMid].remote.bundleLine;else if(0===sdpLines[j].indexOf("m=")){mLineIndex++;var compareA=sdpLines[j].split(" "),compareB=(this._sdpSessions[targetMid].remote.mLines[mLineIndex]||"").split(" ");compareA[0]&&compareB[0]&&compareA[0]!==compareB[0]&&(compareB[1]=0,log.info([targetMid,"RTCSessionDesription",sessionDescription.type,"Appending middle rejected m= line ->"],compareB.join(" ")),sdpLines.splice(j,0,compareB.join(" ")),j++,mLineIndex++)}for(;this._sdpSessions[targetMid].remote.mLines[mLineIndex+1];){mLineIndex++;var appendIndex=sdpLines.length;sdpLines[appendIndex-1].replace(/\s/gi,"")||(appendIndex-=1);var parts=(this._sdpSessions[targetMid].remote.mLines[mLineIndex]||"").split(" ");parts[1]=0,log.info([targetMid,"RTCSessionDesription",sessionDescription.type,"Appending later rejected m= line ->"],parts.join(" ")),sdpLines.splice(appendIndex,0,parts.join(" "))}}return"edge"!==window.webrtcDetectedBrowser||sessionDescription.type!==this.HANDSHAKE_PROGRESS.OFFER||sdpLines[sdpLines.length-1].replace(/\s/gi,"")||(log.info([targetMid,"RTCSessionDesription",sessionDescription.type,"Removing last empty space for Edge browsers"]),sdpLines.splice(sdpLines.length-1,1)),sdpLines.join("\r\n")},Skylink.prototype._parseSDPMediaStreamIDs=function(targetMid,sessionDescription){if(this._peerConnections[targetMid]){if(!sessionDescription||!sessionDescription.sdp||!this._useSafariWebRTC)return this._peerConnections[targetMid].remoteStream=null,void(this._peerConnections[targetMid].remoteStreamId=null);for(var sdpLines=sessionDescription.sdp.split("\r\n"),currentStreamId=null,i=0;i<sdpLines.length;i++){if(0===sdpLines[i].indexOf("a=msid:")){currentStreamId=(sdpLines[i].split("a=msid:")[1]||"").split(" ")[0];break}if(0===sdpLines[i].indexOf("a=ssrc:")&&sdpLines[i].indexOf(" msid:")>0){currentStreamId=(sdpLines[i].split(" msid:")[1]||"").split(" ")[0];break}}currentStreamId?currentStreamId!==this._peerConnections[targetMid].remoteStreamId?(log.info([targetMid,"RTCSessionDesription",sessionDescription.type,"New remote stream is sent ->"],currentStreamId),this._peerConnections[targetMid].remoteStream=new MediaStream,this._peerConnections[targetMid].remoteStreamId=currentStreamId,this._peerConnections[targetMid].remoteStreamTrigger=!0):(log.info([targetMid,"RTCSessionDesription",sessionDescription.type,"Same remote stream is sent ->"],currentStreamId),this._peerConnections[targetMid].remoteStreamTrigger=!1):(log.info([targetMid,"RTCSessionDesription",sessionDescription.type,"No remote stream is sent."]),this._peerConnections[targetMid].remoteStream=null,this._peerConnections[targetMid].remoteStreamTrigger=!1)}},Skylink.prototype._removeSDPUnknownAptRtx=function(targetMid,sessionDescription){for(var codecsPayload=[],sdpLines=sessionDescription.sdp.split("\r\n"),hasVideo=!1,rtxs={},parts=[],i=0;i<sdpLines.length;i++){if(0===sdpLines[i].indexOf("m=")){if(hasVideo)for(var r in rtxs)if(rtxs.hasOwnProperty(r)&&rtxs[r]&&-1===codecsPayload.indexOf(rtxs[r].codec))for(var l=0;l<rtxs[r].lines.length;l++)sdpLines.splice(sdpLines.indexOf(rtxs[r].lines[l]),1),i--;hasVideo=0===sdpLines[i].indexOf("m=video "),codecsPayload=[],rtxs={}}0===sdpLines[i].toLowerCase().indexOf("a=rtpmap:")?(parts=(sdpLines[i].split("a=rtpmap:")[1]||"").split(" "),0===parts[1].toLowerCase().indexOf("rtx")?(rtxs[parts[0]]||(rtxs[parts[0]]={lines:[],codec:null}),rtxs[parts[0]].lines.push(sdpLines[i])):codecsPayload.push(parts[0])):0===sdpLines[i].indexOf("a=fmtp:")&&sdpLines[i].indexOf(" apt=")>0&&(parts=(sdpLines[i].split("a=fmtp:")[1]||"").split(" "),parts[0]&&!rtxs[parts[0]]&&(rtxs[parts[0]]={lines:[],codec:null}),rtxs[parts[0]].codec=parts[1].split("apt=")[1],rtxs[parts[0]].lines.push(sdpLines[i]))}return sdpLines.join("\r\n")},Skylink.prototype._removeSDPCodecs=function(targetMid,sessionDescription){var audioSettings=this.getPeerInfo().settings.audio,parseFn=function(type,codec){var payloadList=sessionDescription.sdp.match(new RegExp("a=rtpmap:(\\d*)\\ "+codec+".*","gi"));if(!(Array.isArray(payloadList)&&payloadList.length>0))return void log.warn([targetMid,"RTCSessionDesription",sessionDescription.type,'Not removing "'+codec+'" as it does not exists.']);for(var i=0;i<payloadList.length;i++){var payload=payloadList[i].split(" ")[0].split(":")[1];log.info([targetMid,"RTCSessionDesription",sessionDescription.type,'Removing "'+codec+'" payload ->'],payload),
sessionDescription.sdp=sessionDescription.sdp.replace(new RegExp("a=rtpmap:"+payload+"\\ .*\\r\\n","g"),""),sessionDescription.sdp=sessionDescription.sdp.replace(new RegExp("a=fmtp:"+payload+"\\ .*\\r\\n","g"),""),sessionDescription.sdp=sessionDescription.sdp.replace(new RegExp("a=rtpmap:\\d+ rtx\\/\\d+\\r\\na=fmtp:\\d+ apt="+payload+"\\r\\n","g"),"");for(var sdpLines=sessionDescription.sdp.split("\r\n"),j=0;j<sdpLines.length;j++)if(0===sdpLines[j].indexOf("m="+type)){var parts=sdpLines[j].split(" ");parts.indexOf(payload)>=3&&parts.splice(parts.indexOf(payload),1),sdpLines[j]=parts.join(" ");break}sessionDescription.sdp=sdpLines.join("\r\n")}};return this._disableVideoFecCodecs&&(this._hasMCU?log.warn([targetMid,"RTCSessionDesription",sessionDescription.type,'Not removing "ulpfec" or "red" codecs as connected to MCU to prevent connectivity issues.']):(parseFn("video","red"),parseFn("video","ulpfec"))),this._disableComfortNoiseCodec&&audioSettings&&"object"==typeof audioSettings&&audioSettings.stereo&&parseFn("audio","CN"),"edge"===window.webrtcDetectedBrowser&&"edge"!==(((this._peerInformations[targetMid]||{}).agent||{}).name||"unknown").name&&(sessionDescription.sdp=sessionDescription.sdp.replace(/a=rtcp-fb:.*\ x-message\ .*\r\n/gi,"")),sessionDescription.sdp},Skylink.prototype._removeSDPREMBPackets=function(targetMid,sessionDescription){return this._disableREMB?(log.info([targetMid,"RTCSessionDesription",sessionDescription.type,"Removing REMB packets."]),sessionDescription.sdp.replace(/a=rtcp-fb:\d+ goog-remb\r\n/g,"")):sessionDescription.sdp},Skylink.prototype._getSDPSelectedCodec=function(targetMid,sessionDescription,type,beSilentOnLogs){if(!sessionDescription||!sessionDescription.sdp)return null;for(var sdpLines=sessionDescription.sdp.split("\r\n"),selectedCodecInfo={name:null,implementation:null,clockRate:null,channels:null,payloadType:null,params:null},i=0;i<sdpLines.length;i++)if(0===sdpLines[i].indexOf("m="+type)){var parts=sdpLines[i].split(" ");if(parts.length<4)break;selectedCodecInfo.payloadType=parseInt(parts[3],10)}else if(null!==selectedCodecInfo.payloadType){if(0===sdpLines[i].indexOf("m="))break;if(0===sdpLines[i].indexOf("a=rtpmap:"+selectedCodecInfo.payloadType+" ")){var params=(sdpLines[i].split(" ")[1]||"").split("/");selectedCodecInfo.name=params[0]||"",selectedCodecInfo.clockRate=params[1]?parseInt(params[1],10):null,selectedCodecInfo.channels=params[2]?parseInt(params[2],10):null}else 0===sdpLines[i].indexOf("a=fmtp:"+selectedCodecInfo.payloadType+" ")&&(selectedCodecInfo.params=sdpLines[i].split("a=fmtp:"+selectedCodecInfo.payloadType+" ")[1]||null)}return beSilentOnLogs||log.debug([targetMid,"RTCSessionDesription",sessionDescription.type,'Parsing session description "'+type+'" codecs ->'],selectedCodecInfo),selectedCodecInfo},Skylink.prototype._removeSDPFilteredCandidates=function(targetMid,sessionDescription){return"MCU"===targetMid&&sessionDescription.type===this.HANDSHAKE_PROGRESS.ANSWER&&"firefox"===window.webrtcDetectedBrowser&&(sessionDescription.sdp=sessionDescription.sdp.replace(/ generation 0/g,""),sessionDescription.sdp=sessionDescription.sdp.replace(/ udp /g," UDP ")),this._forceTURN&&this._hasMCU?(log.warn([targetMid,"RTCSessionDesription",sessionDescription.type,"Not filtering ICE candidates as TURN connections are enforced as MCU is present (and act as a TURN itself) so filtering of ICE candidate flags are not honoured"]),sessionDescription.sdp):(this._filterCandidatesType.host&&(log.info([targetMid,"RTCSessionDesription",sessionDescription.type,'Removing "host" ICE candidates.']),sessionDescription.sdp=sessionDescription.sdp.replace(/a=candidate:.*host.*\r\n/g,"")),this._filterCandidatesType.srflx&&(log.info([targetMid,"RTCSessionDesription",sessionDescription.type,'Removing "srflx" ICE candidates.']),sessionDescription.sdp=sessionDescription.sdp.replace(/a=candidate:.*srflx.*\r\n/g,"")),this._filterCandidatesType.relay&&(log.info([targetMid,"RTCSessionDesription",sessionDescription.type,'Removing "relay" ICE candidates.']),sessionDescription.sdp=sessionDescription.sdp.replace(/a=candidate:.*relay.*\r\n/g,"")),sessionDescription.sdp)},Skylink.prototype._getCodecsSupport=function(callback){var self=this;if(self._currentCodecSupport)return void callback(null);if(self._currentCodecSupport={audio:{},video:{}},window.RTCPeerConnection&&"safari"===window.webrtcDetectedBrowser&&window.webrtcDetectedVersion>=11&&!self._isUsingPlugin)return self._currentCodecSupport.audio={opus:["48000/2"]},self._currentCodecSupport.video={h264:["48000"]},callback(null);try{if("edge"===window.webrtcDetectedBrowser){for(var codecs=RTCRtpSender.getCapabilities().codecs,i=0;i<codecs.length;i++)if(["audio","video"].indexOf(codecs[i].kind)>-1&&codecs[i].name){var codec=codecs[i].name.toLowerCase();self._currentCodecSupport[codecs[i].kind][codec]=codecs[i].clockRate+(codecs[i].numChannels>1?"/"+codecs[i].numChannels:"")}callback(null)}else{var pc=new RTCPeerConnection(null),offerConstraints={offerToReceiveAudio:!0,offerToReceiveVideo:!0};try{var channel=pc.createDataChannel("test");self._binaryChunkType=channel.binaryType||self._binaryChunkType,self._binaryChunkType=self._binaryChunkType.toLowerCase().indexOf("array")>-1?self.DATA_TRANSFER_DATA_TYPE.ARRAY_BUFFER:self._binaryChunkType;for(var prop in self.DATA_TRANSFER_DATA_TYPE)if(self.DATA_TRANSFER_DATA_TYPE.hasOwnProperty(prop)&&self._binaryChunkType.toLowerCase()===self.DATA_TRANSFER_DATA_TYPE[prop].toLowerCase()){self._binaryChunkType=self.DATA_TRANSFER_DATA_TYPE[prop];break}}catch(e){}var successCbFn=function(offer){for(var sdpLines=offer.sdp.split("\r\n"),mediaType="",i=0;i<sdpLines.length;i++)if(0===sdpLines[i].indexOf("m="))mediaType=(sdpLines[i].split("m=")[1]||"").split(" ")[0];else if(0===sdpLines[i].indexOf("a=rtpmap:")){if(-1===["audio","video"].indexOf(mediaType))continue;var parts=(sdpLines[i].split(" ")[1]||"").split("/"),codec=(parts[0]||"").toLowerCase(),info=parts[1]+(parts[2]?"/"+parts[2]:"");self._currentCodecSupport[mediaType][codec]=info}callback(null)},errorCbFn=function(error){callback(error)};self._useSafariWebRTC?pc.createOffer(offerConstraints).then(successCbFn).catch(errorCbFn):pc.createOffer(successCbFn,errorCbFn,self._isUsingPlugin?{mandatory:{OfferToReceiveVideo:offerConstraints.offerToReceiveAudio,OfferToReceiveAudio:offerConstraints.offerToReceiveVideo}}:offerConstraints)}}catch(error){callback(error)}},Skylink.prototype._handleSDPConnectionSettings=function(targetMid,sessionDescription,direction){var self=this;if(!self._sdpSessions[targetMid])return sessionDescription.sdp;var sessionDescriptionStr=sessionDescription.sdp;"remote"!==direction||self.getPeerInfo(targetMid).config.enableIceTrickle||(sessionDescriptionStr=sessionDescriptionStr.replace(/a=end-of-candidates\r\n/g,""));var sdpLines=sessionDescriptionStr.split("\r\n"),peerAgent=((self._peerInformations[targetMid]||{}).agent||{}).name||"",mediaType=(self._peerInformations[targetMid],""),bundleLineIndex=-1,bundleLineMids=[],mLineIndex=-1,settings=clone(self._sdpSettings);if("MCU"===targetMid&&(settings.connection.audio=!0,settings.connection.video=!0,settings.connection.data=!0),settings.connection.video&&(settings.connection.video=self._getSDPEdgeVideoSupports(targetMid)),self._hasMCU){var peerStreamSettings=clone(self.getPeerInfo(targetMid)).settings||{};settings.direction.audio.receive="MCU"!==targetMid&&!!peerStreamSettings.audio,settings.direction.audio.send="MCU"===targetMid,settings.direction.video.receive="MCU"!==targetMid&&!!peerStreamSettings.video,settings.direction.video.send="MCU"===targetMid}self._sdpSessions[targetMid][direction].mLines=[],self._sdpSessions[targetMid][direction].bundleLine="",self._sdpSessions[targetMid][direction].connection={audio:null,video:null,data:null};for(var i=0;i<sdpLines.length;i++){if(0===sdpLines[i].indexOf("a=group:BUNDLE"))self._sdpSessions[targetMid][direction].bundleLine=sdpLines[i],bundleLineIndex=i;else if(0===sdpLines[i].indexOf("m=")&&(mediaType=(sdpLines[i].split("m=")[1]||"").split(" ")[0]||"",mediaType="application"===mediaType?"data":mediaType,mLineIndex++,self._sdpSessions[targetMid][direction].mLines[mLineIndex]=sdpLines[i],!settings.connection[mediaType])){if(log.log([targetMid,"RTCSessionDesription",sessionDescription.type,"Removing rejected m="+mediaType+" line ->"],sdpLines[i]),self._peerConnectionConfig.bundlePolicy===self.BUNDLE_POLICY.MAX_BUNDLE&&bundleLineIndex>-1&&0===mLineIndex&&("remote"===direction?sessionDescription.type===this.HANDSHAKE_PROGRESS.OFFER:sessionDescription.type===this.HANDSHAKE_PROGRESS.ANSWER)){log.warn([targetMid,"RTCSessionDesription",sessionDescription.type,"Not removing rejected m="+mediaType+" line ->"],sdpLines[i]),settings.connection[mediaType]=!0,["audio","video"].indexOf(mediaType)>-1&&(settings.direction[mediaType].send=!1,settings.direction[mediaType].receive=!1);continue}if("edge"===window.webrtcDetectedBrowser){sdpLines.splice(i,1),i--;continue}if("remote"===direction||sessionDescription.type===this.HANDSHAKE_PROGRESS.ANSWER){var parts=sdpLines[i].split(" ");parts[1]=0,sdpLines[i]=parts.join(" ");continue}}if("remote"!==direction||0!==sdpLines[i].indexOf("a=candidate:")||self.getPeerInfo(targetMid).config.enableIceTrickle||sdpLines[i+1]&&(0===sdpLines[i+1].indexOf("a=candidate:")||0===sdpLines[i+1].indexOf("a=end-of-candidates"))||(log.info([targetMid,"RTCSessionDesription",sessionDescription.type,"Appending end-of-candidates signal for non-trickle ICE connection."]),sdpLines.splice(i+1,0,"a=end-of-candidates"),i++),mediaType)if(settings.connection[mediaType]){if(0===sdpLines[i].indexOf("a=mid:"))bundleLineMids.push(sdpLines[i].split("a=mid:")[1]||"");else if(mediaType&&["a=sendrecv","a=sendonly","a=recvonly"].indexOf(sdpLines[i])>-1){if(-1===["audio","video"].indexOf(mediaType)){self._sdpSessions[targetMid][direction].connection.data=sdpLines[i];continue}if("local"===direction)settings.direction[mediaType].send&&!settings.direction[mediaType].receive?sdpLines[i]=sdpLines[i].indexOf("send")>-1?"a=sendonly":"a=inactive":!settings.direction[mediaType].send&&settings.direction[mediaType].receive?sdpLines[i]=sdpLines[i].indexOf("recv")>-1?"a=recvonly":"a=inactive":settings.direction[mediaType].send||settings.direction[mediaType].receive||(sdpLines[i]="a=inactive"),self._hasMCU||"firefox"===window.webrtcDetectedBrowser||"firefox"!==peerAgent||sessionDescription.type!==self.HANDSHAKE_PROGRESS.OFFER||"a=recvonly"!==sdpLines[i]||(log.warn([targetMid,"RTCSessionDesription",sessionDescription.type,"Overriding any original settings to receive only to send and receive to resolve chrome BUNDLE errors."]),sdpLines[i]="a=sendrecv",settings.direction[mediaType].send=!0,settings.direction[mediaType].receive=!0);else if(sessionDescription.type===self.HANDSHAKE_PROGRESS.ANSWER){var localOfferRes=self._sdpSessions[targetMid].local.connection[mediaType];"a=sendonly"===localOfferRes?sdpLines[i]=-1===["a=inactive","a=recvonly"].indexOf(sdpLines[i])?"a=sendonly"===sdpLines[i]?"a=inactive":"a=recvonly":sdpLines[i]:"a=recvonly"===localOfferRes?sdpLines[i]=-1===["a=inactive","a=sendonly"].indexOf(sdpLines[i])?"a=recvonly"===sdpLines[i]?"a=inactive":"a=sendonly":sdpLines[i]:"a=inactive"===localOfferRes&&(sdpLines[i]="a=inactive")}self._sdpSessions[targetMid][direction].connection[mediaType]=sdpLines[i]}}else sdpLines.splice(i,1),i--;(sdpLines[i]||"").replace(/\n|\r|\s|\ /gi,"")||(sdpLines.splice(i,1),i--)}return bundleLineIndex>-1&&(self._peerConnectionConfig.bundlePolicy===self.BUNDLE_POLICY.MAX_BUNDLE?sdpLines[bundleLineIndex]="a=group:BUNDLE "+bundleLineMids.join(" "):self._peerConnectionConfig.bundlePolicy===self.BUNDLE_POLICY.NONE&&sdpLines.splice(bundleLineIndex,1)),"edge"!==window.webrtcDetectedBrowser&&(sdpLines[sdpLines.length-1].replace(/\n|\r|\s/gi,"")?sdpLines.push(""):sdpLines[sdpLines.length-1]=""),log.info([targetMid,"RTCSessionDesription",sessionDescription.type,"Handling connection lines and direction ->"],settings),sdpLines.join("\r\n")},Skylink.prototype._getSDPFingerprint=function(targetMid,sessionDescription,beSilentOnLogs){var fingerprint={fingerprint:null,fingerprintAlgorithm:null,derBase64:null};if(!sessionDescription||!sessionDescription.sdp)return fingerprint;for(var sdpLines=sessionDescription.sdp.split("\r\n"),i=0;i<sdpLines.length;i++)if(0===sdpLines[i].indexOf("a=fingerprint")){var parts=sdpLines[i].replace("a=fingerprint:","").split(" ");fingerprint.fingerprint=parts[1],fingerprint.fingerprintAlgorithm=parts[0];break}return beSilentOnLogs||log.debug([targetMid,"RTCSessionDesription",sessionDescription.type,"Parsing session description fingerprint ->"],fingerprint),fingerprint},Skylink.prototype._getSDPEdgeVideoSupports=function(peerId){var self=this;if(peerId){var peerAgent=((self._peerInformations[peerId]||{}).agent||{}).name||"",peerVersion=((self._peerInformations[peerId]||{}).agent||{}).version||0;return"edge"===window.webrtcDetectedBrowser&&window.webrtcDetectedVersion<15.15019&&"edge"!==peerAgent?!!self._currentCodecSupport.video.h264:!("edge"!==window.webrtcDetectedBrowser&&"edge"===peerAgent&&peerVersion<15.15019)||!!self._currentCodecSupport.video.h264}return!("edge"===window.webrtcDetectedBrowser&&window.webrtcDetectedVersion<15.15019)||!!self._currentCodecSupport.video.h264},"undefined"!=typeof exports?module.exports={Skylink:Skylink,SkylinkLogs:SkylinkLogs}:globals?(globals.Skylink=Skylink,globals.SkylinkLogs=SkylinkLogs):window&&(window.Skylink=Skylink,window.SkylinkLogs=SkylinkLogs)}(this);