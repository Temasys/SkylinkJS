/*! skylinkjs - v0.9.0 - 2019-04-05 */
!function(globals){"use strict";function Skylink(){this._dataChannels={},this._dataTransfers={},this._dataStreams={},this._peerCandidatesQueue={},this._peerEndOfCandidatesCounter={},this._gatheredCandidates={},this._retryCounters={},this._peerConnections={},this._peerStats={},this._peerBandwidth={},this._peerCustomConfigs={},this._peerInformations={},this._user=null,this._userData="",this._peerPriorityWeight=0,this._autoIntroduce=!0,this._isPrivileged=!1,this._peerList=null,this._selectedRoom=null,this._roomLocked=!1,this._inRoom=!1,this._EVENTS={},this._onceEvents={},this._timestamp={socketMessage:null,shareScreen:null,refreshConnection:null,getUserMedia:null,lastRestart:null},this._socketSession={},this._socketMessageQueue=[],this._socketMessageTimeout=null,this._socketPorts={"http:":[80,3e3],"https:":[443,3443]},this._channelOpen=!1,this._signalingServer=null,this._signalingServerProtocol=window.location.protocol,this._signalingServerPort=null,this._socket=null,this._socketUseXDR=!1,this._enableIceRestart=!1,this._hasMCU=!1,this._path=null,this._readyState=null,this._key=null,this._appKeyOwner=null,this._room=null,this._peerMessagesStamps={},this._streams={userMedia:null,screenshare:null},this._streamsDefaultSettings={userMedia:{audio:{stereo:!1},video:{resolution:{width:640,height:480},frameRate:50}},screenshare:{video:!0}},this._streamsMutedSettings={audioMuted:!1,videoMuted:!1},this._streamsBandwidthSettings={googleX:{},bAS:{}},this._streamsStoppedCbs={},this._streamsSession={},this._sdpSettings={connection:{audio:!0,video:!0,data:!0},direction:{audio:{send:!0,receive:!0},video:{send:!0,receive:!0}}},this._publishOnly=!1,this._parentId=null,this._recordings={},this._rtmpSessions={},this._currentRecordingId=!1,this._recordingStartInterval=null,this._currentCodecSupport=null,this._sdpSessions={},this._voiceActivityDetection=!0,this._binaryChunkType=this.DATA_TRANSFER_DATA_TYPE.ARRAY_BUFFER,this._peerConnectionConfig={},this._bandwidthAdjuster=null,this._peerConnStatus={},this._joinRoomManager={timestamp:0,socketsFn:[]},this._initOptions={},this._statIdRandom=Date.now()+Math.floor(1e8*Math.random()),this._transceiverIdPeerIdMap={},this._currentRequestedTracks={audio:0,video:0},this._originalDTLSRole=null}!function(){Object.keys||(Object.keys=function(){var t=Object.prototype.hasOwnProperty,r=!{toString:null}.propertyIsEnumerable("toString"),e=["toString","toLocaleString","valueOf","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"],o=e.length;return function(n){if("object"!=typeof n&&"function"!=typeof n||null===n)throw new TypeError("Object.keys called on non-object");var c=[];for(var l in n)t.call(n,l)&&c.push(l);if(r)for(var p=0;o>p;p++)t.call(n,e[p])&&c.push(e[p]);return c}}())}(),function(){function t(t){return 10>t?"0"+t:t}Date.prototype.toISOString=function(){return this.getUTCFullYear()+"-"+t(this.getUTCMonth()+1)+"-"+t(this.getUTCDate())+"T"+t(this.getUTCHours())+":"+t(this.getUTCMinutes())+":"+t(this.getUTCSeconds())+"."+(this.getUTCMilliseconds()/1e3).toFixed(3).slice(2,5)+"Z"}}(),function(){"function"!=typeof Date.now&&(Date.now=function(){return(new Date).getTime()})}(),function(e,t){function n(e){var n=t[e];t[e]=function(e){return o(n(e))}}function a(t,n,a){return(a=this).attachEvent("on"+t,function(t){var t=t||e.event;t.preventDefault=t.preventDefault||function(){t.returnValue=!1},t.stopPropagation=t.stopPropagation||function(){t.cancelBubble=!0},n.call(a,t)})}function o(e,t){if(t=e.length)for(;t--;)e[t].addEventListener=a;else e.addEventListener=a;return e}e.addEventListener||(o([t,e]),"Element"in e?e.Element.prototype.addEventListener=a:(t.attachEvent("onreadystatechange",function(){o(t.all)}),n("getElementsByTagName"),n("getElementById"),n("createElement"),o(t.all)))}(window,document),function(){if("performance"in window==0&&(window.performance={}),Date.now=Date.now||function(){return(new Date).getTime()},"now"in window.performance==0){var a=Date.now();performance.timing&&performance.timing.navigationStart&&(a=performance.timing.navigationStart),window.performance.now=function(){return Date.now()-a}}}(),window.BlobBuilder=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,Array.prototype.forEach||(Array.prototype.forEach=function(callback){var T,k;if(null==this)throw new TypeError("this is null or not defined");var O=Object(this),len=O.length>>>0;if("function"!=typeof callback)throw new TypeError(callback+" is not a function");for(arguments.length>1&&(T=arguments[1]),k=0;k<len;){var kValue;k in O&&(kValue=O[k],callback.call(T,kValue,k,O)),k++}});var clone=function(obj){if(null===obj||"object"!=typeof obj)return obj;var copy=function(data){var copy=data.constructor();for(var attr in data)data.hasOwnProperty(attr)&&(copy[attr]=data[attr]);return copy};if("object"==typeof obj&&!Array.isArray(obj))try{return JSON.parse(JSON.stringify(obj))}catch(err){return copy(obj)}return copy(obj)};Skylink.prototype.DATA_CHANNEL_STATE={CONNECTING:"connecting",OPEN:"open",CLOSING:"closing",CLOSED:"closed",ERROR:"error",CREATE_ERROR:"createError",BUFFERED_AMOUNT_LOW:"bufferedAmountLow",SEND_MESSAGE_ERROR:"sendMessageError"},Skylink.prototype.DATA_CHANNEL_TYPE={MESSAGING:"messaging",DATA:"data"},Skylink.prototype.DATA_CHANNEL_MESSAGE_ERROR={MESSAGE:"message",TRANSFER:"transfer"},Skylink.prototype.DATA_TRANSFER_DATA_TYPE={BINARY_STRING:"binaryString",ARRAY_BUFFER:"arrayBuffer",BLOB:"blob",STRING:"string"},Skylink.prototype.DT_PROTOCOL_VERSION="0.1.3",Skylink.prototype.DATA_TRANSFER_TYPE={UPLOAD:"upload",DOWNLOAD:"download"},Skylink.prototype.DATA_TRANSFER_SESSION_TYPE={BLOB:"blob",DATA_URL:"dataURL"},Skylink.prototype.DATA_TRANSFER_STATE={UPLOAD_REQUEST:"request",UPLOAD_STARTED:"uploadStarted",DOWNLOAD_STARTED:"downloadStarted",REJECTED:"rejected",CANCEL:"cancel",ERROR:"error",UPLOADING:"uploading",DOWNLOADING:"downloading",UPLOAD_COMPLETED:"uploadCompleted",DOWNLOAD_COMPLETED:"downloadCompleted",USER_REJECTED:"userRejected",USER_UPLOAD_REQUEST:"userRequest",START_ERROR:"startError"},Skylink.prototype.DATA_STREAM_STATE={SENDING_STARTED:"sendStart",SENDING_STOPPED:"sendStop",RECEIVING_STARTED:"receiveStart",RECEIVING_STOPPED:"receiveStop",RECEIVED:"received",SENT:"sent",ERROR:"error",START_ERROR:"startError"},Skylink.prototype.CANDIDATE_GENERATION_STATE={NEW:"new",GATHERING:"gathering",COMPLETED:"completed"},Skylink.prototype.CANDIDATE_PROCESSING_STATE={RECEIVED:"received",DROPPED:"dropped",BUFFERED:"buffered",PROCESSING:"processing",PROCESS_SUCCESS:"processSuccess",PROCESS_ERROR:"processError"},Skylink.prototype.ICE_CONNECTION_STATE={STARTING:"starting",CHECKING:"checking",CONNECTED:"connected",COMPLETED:"completed",CLOSED:"closed",FAILED:"failed",TRICKLE_FAILED:"trickleFailed",DISCONNECTED:"disconnected"},Skylink.prototype.TURN_TRANSPORT={UDP:"udp",TCP:"tcp",ANY:"any",NONE:"none",ALL:"all"},Skylink.prototype.PEER_CONNECTION_STATE={STABLE:"stable",HAVE_LOCAL_OFFER:"have-local-offer",HAVE_REMOTE_OFFER:"have-remote-offer",CLOSED:"closed"},Skylink.prototype.GET_CONNECTION_STATUS_STATE={RETRIEVING:0,RETRIEVE_SUCCESS:1,RETRIEVE_ERROR:-1},Skylink.prototype.SERVER_PEER_TYPE={MCU:"mcu"},Skylink.prototype.BUNDLE_POLICY={MAX_COMPAT:"max-compat",BALANCED:"balanced",MAX_BUNDLE:"max-bundle",NONE:"none"},Skylink.prototype.RTCP_MUX_POLICY={REQUIRE:"require",NEGOTIATE:"negotiate"},Skylink.prototype.PEER_CERTIFICATE={RSA:"RSA",ECDSA:"ECDSA",AUTO:"AUTO"},Skylink.prototype.HANDSHAKE_PROGRESS={ENTER:"enter",WELCOME:"welcome",OFFER:"offer",ANSWER:"answer",ERROR:"error"},Skylink.prototype.GET_PEERS_STATE={ENQUIRED:"enquired",RECEIVED:"received"},Skylink.prototype.INTRODUCE_STATE={INTRODUCING:"introducing",ERROR:"error"},Skylink.prototype.SYSTEM_ACTION={WARNING:"warning",REJECT:"reject"},Skylink.prototype.SYSTEM_ACTION_REASON={CREDENTIALS_EXPIRED:"oldTimeStamp",CREDENTIALS_ERROR:"credentialError",DUPLICATED_LOGIN:"duplicatedLogin",ROOM_NOT_STARTED:"notStart",EXPIRED:"expired",ROOM_LOCKED:"locked",FAST_MESSAGE:"fastmsg",ROOM_CLOSING:"toclose",ROOM_CLOSED:"roomclose",SERVER_ERROR:"serverError",KEY_ERROR:"keyFailed"},Skylink.prototype.VERSION="0.9.0",Skylink.prototype.READY_STATE_CHANGE={INIT:0,LOADING:1,COMPLETED:2,ERROR:-1},Skylink.prototype.READY_STATE_CHANGE_ERROR={API_INVALID:4001,API_DOMAIN_NOT_MATCH:4002,API_CORS_DOMAIN_NOT_MATCH:4003,API_CREDENTIALS_INVALID:4004,API_CREDENTIALS_NOT_MATCH:4005,API_INVALID_PARENT_KEY:4006,API_NO_MEETING_RECORD_FOUND:4010,API_OVER_SEAT_LIMIT:4020,API_RETRIEVAL_FAILED:4021,API_WRONG_ACCESS_DOMAIN:5005,XML_HTTP_REQUEST_ERROR:-1,XML_HTTP_NO_REPONSE_ERROR:-2,NO_SOCKET_IO:1,NO_XMLHTTPREQUEST_SUPPORT:2,NO_WEBRTC_SUPPORT:3,NO_PATH:4,ADAPTER_NO_LOADED:7,PARSE_CODECS:8},Skylink.prototype.REGIONAL_SERVER={APAC1:"",US1:""},Skylink.prototype.PRIORITY_WEIGHT_SCHEME={ENFORCE_OFFERER:"enforceOfferer",ENFORCE_ANSWERER:"enforceAnswerer",AUTO:"auto"},Skylink.prototype.LOG_LEVEL={DEBUG:4,LOG:3,INFO:2,WARN:1,ERROR:0,NONE:-1},Skylink.prototype.SOCKET_ERROR={CONNECTION_FAILED:0,RECONNECTION_FAILED:-1,CONNECTION_ABORTED:-2,RECONNECTION_ABORTED:-3,RECONNECTION_ATTEMPT:-4},Skylink.prototype.SOCKET_FALLBACK={NON_FALLBACK:"nonfallback",FALLBACK_PORT:"fallbackPortNonSSL",FALLBACK_SSL_PORT:"fallbackPortSSL",LONG_POLLING:"fallbackLongPollingNonSSL",LONG_POLLING_SSL:"fallbackLongPollingSSL"},Skylink.prototype.SM_PROTOCOL_VERSION="0.1.2.4",Skylink.prototype.VIDEO_CODEC={AUTO:"auto",VP8:"VP8",H264:"H264",VP9:"VP9"},Skylink.prototype.AUDIO_CODEC={AUTO:"auto",ISAC:"ISAC",OPUS:"opus",ILBC:"ILBC",G722:"G722",PCMU:"PCMU",PCMA:"PCMA"},Skylink.prototype.MEDIA_SOURCE={SCREEN:"screen",WINDOW:"window",TAB:"tab",TAB_AUDIO:"audio",APPLICATION:"application",BROWSER:"browser",CAMERA:"camera"},Skylink.prototype.VIDEO_RESOLUTION={QQVGA:{width:160,height:120},HQVGA:{width:240,height:160},QVGA:{width:320,height:240},WQVGA:{width:384,height:240},HVGA:{width:480,height:320},VGA:{width:640,height:480},WVGA:{width:768,height:480},FWVGA:{width:854,height:480},SVGA:{width:800,height:600},DVGA:{width:960,height:640},WSVGA:{width:1024,height:576},HD:{width:1280,height:720},HDPLUS:{width:1600,height:900},FHD:{width:1920,height:1080},QHD:{width:2560,height:1440},WQXGAPLUS:{width:3200,height:1800},UHD:{width:3840,height:2160},UHDPLUS:{width:5120,height:2880},FUHD:{width:7680,height:4320},QUHD:{width:15360,height:8640}},Skylink.prototype.MEDIA_ACCESS_FALLBACK_STATE={FALLBACKING:0,FALLBACKED:1,ERROR:-1},Skylink.prototype.RECORDING_STATE={START:0,STOP:1,LINK:2,ERROR:-1},Skylink.prototype._CHUNK_FILE_SIZE=49152,Skylink.prototype._MOZ_CHUNK_FILE_SIZE=12288,Skylink.prototype._BINARY_FILE_SIZE=65456,Skylink.prototype._MOZ_BINARY_FILE_SIZE=16384,Skylink.prototype._CHUNK_DATAURL_SIZE=1212,Skylink.prototype._DC_PROTOCOL_TYPE={WRQ:"WRQ",ACK:"ACK",ERROR:"ERROR",CANCEL:"CANCEL",MESSAGE:"MESSAGE"},Skylink.prototype._SIG_MESSAGE_TYPE={JOIN_ROOM:"joinRoom",IN_ROOM:"inRoom",ENTER:"enter",WELCOME:"welcome",RESTART:"restart",OFFER:"offer",ANSWER:"answer",ANSWER_ACK:"answerAck",CANDIDATE:"candidate",BYE:"bye",REDIRECT:"redirect",UPDATE_USER:"updateUserEvent",ROOM_LOCK:"roomLockEvent",MUTE_VIDEO:"muteVideoEvent",MUTE_AUDIO:"muteAudioEvent",PUBLIC_MESSAGE:"public",PRIVATE_MESSAGE:"private",STREAM:"stream",GROUP:"group",GET_PEERS:"getPeers",PEER_LIST:"peerList",INTRODUCE:"introduce",INTRODUCE_ERROR:"introduceError",APPROACH:"approach",START_RECORDING:"startRecordingRoom",STOP_RECORDING:"stopRecordingRoom",START_RTMP:"startRTMP",STOP_RTMP:"stopRTMP",RTMP:"rtmpEvent",RECORDING:"recordingEvent",END_OF_CANDIDATES:"endOfCandidates"},Skylink.prototype._GROUP_MESSAGE_LIST=[Skylink.prototype._SIG_MESSAGE_TYPE.STREAM,Skylink.prototype._SIG_MESSAGE_TYPE.UPDATE_USER,Skylink.prototype._SIG_MESSAGE_TYPE.MUTE_AUDIO,Skylink.prototype._SIG_MESSAGE_TYPE.MUTE_VIDEO,Skylink.prototype._SIG_MESSAGE_TYPE.PUBLIC_MESSAGE],Skylink.prototype.STATS_API_VERSION="1.1",Skylink.prototype.VIDEO_QUALITY={HD:{video:3200,audio:150},HQ:{video:1200,audio:80},SQ:{video:800,audio:30},LQ:{video:400,audio:20}},Skylink.prototype.RTMP_STATE={START:0,STOP:1,ERROR:-1},Skylink.prototype._createDataChannel=function(peerId,dataChannel,bufferThreshold,createAsMessagingChannel){var self=this,channelName=(self._user&&self._user.sid?self._user.sid:"-")+"_"+peerId,channelType=createAsMessagingChannel?self.DATA_CHANNEL_TYPE.MESSAGING:self.DATA_CHANNEL_TYPE.DATA,channelProp=channelType===self.DATA_CHANNEL_TYPE.MESSAGING?"main":channelName;if(!self._user)return void log.error([peerId,"RTCDataChannel",channelProp,"Aborting of creating or initializing Datachannel as User does not have Room session"]);if(!self._peerConnections[peerId]||self._peerConnections[peerId].signalingState===self.PEER_CONNECTION_STATE.CLOSED)return void log.error([peerId,"RTCDataChannel",channelProp,"Aborting of creating or initializing Datachannel as Peer connection does not exists"]);if(dataChannel&&"object"==typeof dataChannel?channelName=dataChannel.label:"string"==typeof dataChannel&&(channelName=dataChannel,dataChannel=null),self._dataChannels[peerId]?self._dataChannels[peerId].main&&self._dataChannels[peerId].main.channel.label===channelName&&(channelProp="main",channelType=self.DATA_CHANNEL_TYPE.MESSAGING):(channelProp="main",channelType=self.DATA_CHANNEL_TYPE.MESSAGING,self._dataChannels[peerId]={},log.debug([peerId,"RTCDataChannel",channelProp,"initializing main DataChannel"])),!dataChannel)try{dataChannel=self._peerConnections[peerId].createDataChannel(channelName,{reliable:!0,ordered:!0})}catch(error){return log.error([peerId,"RTCDataChannel",channelProp,"Failed creating Datachannel ->"],error),self._handleDatachannelStats("error",peerId,{label:channelName},channelProp,error),void self._trigger("dataChannelState",self.DATA_CHANNEL_STATE.CREATE_ERROR,peerId,error,channelName,channelType,null,self._getDataChannelBuffer(dataChannel))}dataChannel.onerror=function(evt){var channelError=evt.error||evt;log.error([peerId,"RTCDataChannel",channelProp,"Datachannel has an exception ->"],channelError),self._handleDatachannelStats("error",peerId,dataChannel,channelProp,channelError),self._trigger("dataChannelState",self.DATA_CHANNEL_STATE.ERROR,peerId,channelError,channelName,channelType,null,self._getDataChannelBuffer(dataChannel))},dataChannel.onbufferedamountlow=function(){log.debug([peerId,"RTCDataChannel",channelProp,"Datachannel buffering data transfer low"]),self._trigger("dataChannelState",self.DATA_CHANNEL_STATE.BUFFERED_AMOUNT_LOW,peerId,null,channelName,channelType,null,self._getDataChannelBuffer(dataChannel))},dataChannel.onmessage=function(event){self._processDataChannelData(event.data,peerId,channelName,channelType)};var onOpenHandlerFn=function(){log.debug([peerId,"RTCDataChannel",channelProp,"Datachannel has opened"]),dataChannel.bufferedAmountLowThreshold=bufferThreshold||0,self._handleDatachannelStats("open",peerId,dataChannel,channelProp),self._trigger("dataChannelState",self.DATA_CHANNEL_STATE.OPEN,peerId,null,channelName,channelType,null,self._getDataChannelBuffer(dataChannel))};dataChannel.readyState===self.DATA_CHANNEL_STATE.OPEN?setTimeout(onOpenHandlerFn,1):(self._handleDatachannelStats("connecting",peerId,dataChannel,channelProp),self._trigger("dataChannelState",dataChannel.readyState,peerId,null,channelName,channelType,null,self._getDataChannelBuffer(dataChannel)),dataChannel.onopen=onOpenHandlerFn);var getTransferIDByPeerId=function(pid){for(var transferId in self._dataTransfers)if(-1!==transferId.indexOf(pid))return transferId;return null},onCloseHandlerFn=function(){var dcMessageStr="Datachannel has closed",transferId=getTransferIDByPeerId(peerId);log.debug([peerId,"RTCDataChannel",channelProp,dcMessageStr]),self._handleDatachannelStats("closed",peerId,dataChannel,channelProp),self._trigger("dataChannelState",self.DATA_CHANNEL_STATE.CLOSED,peerId,null,channelName,channelType,null,self._getDataChannelBuffer(dataChannel)),transferId&&self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.ERROR,transferId,peerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),new Error(dcMessageStr)),self._peerConnections[peerId]&&self._peerConnections[peerId].remoteDescription&&self._peerConnections[peerId].remoteDescription.sdp&&(-1===self._peerConnections[peerId].remoteDescription.sdp.indexOf("m=application")||self._peerConnections[peerId].remoteDescription.sdp.indexOf("m=application 0")>0)||channelType===self.DATA_CHANNEL_TYPE.MESSAGING&&setTimeout(function(){self._peerConnections[peerId]&&self._peerConnections[peerId].signalingState!==self.PEER_CONNECTION_STATE.CLOSED&&self._peerConnections[peerId].localDescription&&self._peerConnections[peerId].localDescription.type===self.HANDSHAKE_PROGRESS.OFFER&&(log.debug([peerId,"RTCDataChannel",channelProp,"Reviving Datachannel connection"]),self._handleDatachannelStats("reconnecting",peerId,{label:channelName},"main"),self._createDataChannel(peerId,channelName,bufferThreshold,!0))},100)};if("firefox"===AdapterJS.webrtcDetectedBrowser){var hasTriggeredClose=!1,timeBlockAfterClosing=0;dataChannel.onclose=function(){hasTriggeredClose||(hasTriggeredClose=!0,onCloseHandlerFn())};var onFFClosed=setInterval(function(){dataChannel.readyState===self.DATA_CHANNEL_STATE.CLOSED||hasTriggeredClose||5===timeBlockAfterClosing?(clearInterval(onFFClosed),hasTriggeredClose||(hasTriggeredClose=!0,onCloseHandlerFn())):dataChannel.readyState===self.DATA_CHANNEL_STATE.CLOSING&&timeBlockAfterClosing++},1e3)}else dataChannel.onclose=onCloseHandlerFn;channelType===self.DATA_CHANNEL_TYPE.MESSAGING?self._dataChannels[peerId].main={channelName:channelName,channelType:channelType,transferId:null,streamId:null,channel:dataChannel}:self._dataChannels[peerId][channelName]={channelName:channelName,channelType:channelType,transferId:null,streamId:null,channel:dataChannel}},Skylink.prototype.refreshDatachannel=function(peerId){var self=this;if(self._dataChannels[peerId]&&self._dataChannels[peerId].main&&self._dataChannels[peerId].main.channel){var channelName=self._dataChannels[peerId].main.channelName,channelType=self._dataChannels[peerId].main.channelType,bufferThreshold=self._dataChannels[peerId].main.channel.bufferedAmountLowThreshold||0;channelType===self.DATA_CHANNEL_TYPE.MESSAGING&&setTimeout(function(){self._peerConnections[peerId]&&self._peerConnections[peerId].signalingState!==self.PEER_CONNECTION_STATE.CLOSED&&self._peerConnections[peerId].localDescription&&self._peerConnections[peerId].localDescription.type===self.HANDSHAKE_PROGRESS.OFFER&&(self._closeDataChannel(peerId,"main",!0),log.debug([peerId,"RTCDataChannel","main","Reviving Datachannel connection"]),self._createDataChannel(peerId,channelName,bufferThreshold,!0))},100)}else log.debug([peerId,"RTCDataChannel","Not a valid Datachannel connection"])},Skylink.prototype._getDataChannelBuffer=function(peerId,channelProp){if("object"==typeof peerId)return{bufferedAmountLow:"number"==typeof peerId.bufferedAmountLow?peerId.bufferedAmountLow:parseInt(peerId.bufferedAmountLow,10)||0,bufferedAmountLowThreshold:"number"==typeof peerId.bufferedAmountLowThreshold?peerId.bufferedAmountLowThreshold:parseInt(peerId.bufferedAmountLowThreshold,10)||0};if(!(this._dataChannels[peerId]&&this._dataChannels[peerId][channelProp]&&this._dataChannels[peerId][channelProp].channel))return{bufferedAmountLow:0,bufferedAmountLowThreshold:0};var channel=this._dataChannels[peerId][channelProp].channel;return{bufferedAmountLow:"number"==typeof channel.bufferedAmountLow?channel.bufferedAmountLow:parseInt(channel.bufferedAmountLow,10)||0,bufferedAmountLowThreshold:"number"==typeof channel.bufferedAmountLowThreshold?channel.bufferedAmountLowThreshold:parseInt(channel.bufferedAmountLowThreshold,10)||0}},Skylink.prototype._sendMessageToDataChannel=function(peerId,data,channelProp,doNotConvert){var self=this;if(channelProp&&channelProp!==peerId||(channelProp="main"),!("object"==typeof data&&data||data&&"string"==typeof data))return void log.warn([peerId,"RTCDataChannel",channelProp,"Dropping invalid data ->"],data);if(!self._peerConnections[peerId]||self._peerConnections[peerId].signalingState===self.PEER_CONNECTION_STATE.CLOSED)return void log.warn([peerId,"RTCDataChannel",channelProp,"Dropping for sending message as Peer connection does not exists or is closed ->"],data);if(!self._dataChannels[peerId]||!self._dataChannels[peerId][channelProp])return void log.warn([peerId,"RTCDataChannel",channelProp,"Dropping for sending message as Datachannel connection does not exists ->"],data);var channelName=self._dataChannels[peerId][channelProp].channelName,channelType=self._dataChannels[peerId][channelProp].channelType,readyState=self._dataChannels[peerId][channelProp].channel.readyState,messageType="object"==typeof data&&data.type===self._DC_PROTOCOL_TYPE.MESSAGE?self.DATA_CHANNEL_MESSAGE_ERROR.MESSAGE:self.DATA_CHANNEL_MESSAGE_ERROR.TRANSFER;if(readyState!==self.DATA_CHANNEL_STATE.OPEN){var notOpenError='Failed sending message as Datachannel connection state is not opened. Current readyState is "'+readyState+'"';throw log.error([peerId,"RTCDataChannel",channelProp,notOpenError+" ->"],data),self._trigger("dataChannelState",self.DATA_CHANNEL_STATE.SEND_MESSAGE_ERROR,peerId,new Error(notOpenError),channelName,channelType,messageType,self._getDataChannelBuffer(peerId,channelProp)),new Error(notOpenError)}try{doNotConvert||"object"!=typeof data?(log.debug([peerId,"RTCDataChannel",channelProp,"Sending data with size ->"],data.size||data.length||data.byteLength),self._dataChannels[peerId][channelProp].channel.send(data)):(log.debug([peerId,"RTCDataChannel",channelProp,'Sending "'+data.type+'" protocol message ->'],data),self._dataChannels[peerId][channelProp].channel.send(JSON.stringify(data)))}catch(error){throw log.error([peerId,"RTCDataChannel",channelProp,"Failed sending "+(doNotConvert||"object"!=typeof data?"data":'"'+data.type+'" protocol message')+" ->"],error),self._trigger("dataChannelState",self.DATA_CHANNEL_STATE.SEND_MESSAGE_ERROR,peerId,error,channelName,channelType,messageType,self._getDataChannelBuffer(peerId,channelProp)),error}},Skylink.prototype._closeDataChannel=function(peerId,channelProp,isCloseMainChannel){var self=this;if(!self._dataChannels[peerId])return void log.warn([peerId,"RTCDataChannel",channelProp||null,"Aborting closing Datachannels as Peer connection does not have Datachannel sessions"]);var closeFn=function(rChannelProp){var channelName=self._dataChannels[peerId][rChannelProp].channelName,channelType=self._dataChannels[peerId][rChannelProp].channelType;self._dataChannels[peerId][rChannelProp].readyState!==self.DATA_CHANNEL_STATE.CLOSED&&(log.debug([peerId,"RTCDataChannel",channelProp,"Closing Datachannel"]),self._handleDatachannelStats("closing",peerId,self._dataChannels[peerId][rChannelProp].channel,rChannelProp),self._trigger("dataChannelState",self.DATA_CHANNEL_STATE.CLOSING,peerId,null,channelName,channelType,null,self._getDataChannelBuffer(peerId,rChannelProp)),self._dataChannels[peerId][rChannelProp].channel.close(),delete self._dataChannels[peerId][rChannelProp])};if(isCloseMainChannel)closeFn(channelProp);else if(channelProp&&"main"!==channelProp){if(!self._dataChannels[peerId][channelProp])return void log.warn([peerId,"RTCDataChannel",channelProp,"Aborting closing Datachannel as it does not exists"]);closeFn(channelProp)}else{for(var channelNameProp in self._dataChannels[peerId])self._dataChannels[peerId].hasOwnProperty(channelNameProp)&&self._dataChannels[peerId][channelNameProp]&&closeFn(channelNameProp);delete self._dataChannels[peerId]}},Skylink.prototype._base64ToBlob=function(dataURL){for(var byteString=atob(dataURL),ab=new ArrayBuffer(byteString.length),ia=new Uint8Array(ab),j=0;j<byteString.length;j++)ia[j]=byteString.charCodeAt(j);return new Blob([ab])},Skylink.prototype._blobToBase64=function(data,callback){var fileReader=new FileReader;fileReader.onload=function(){var base64BinaryString=fileReader.result.split(",")[1];callback(base64BinaryString)},fileReader.readAsDataURL(data)},Skylink.prototype._blobToArrayBuffer=function(data,callback){var fileReader=new FileReader;fileReader.onload=function(){callback("plugin"===AdapterJS.webrtcDetectedType?new Int8Array(fileReader.result):fileReader.result)},fileReader.readAsArrayBuffer(data)},Skylink.prototype._chunkBlobData=function(blob,chunkSize){var chunksArray=[],startCount=0,endCount=0,blobByteSize=blob.size;if(blobByteSize>chunkSize){for(;blobByteSize-1>endCount;)endCount=startCount+chunkSize,chunksArray.push(blob.slice(startCount,endCount)),startCount+=chunkSize;blobByteSize-(startCount+1)>0&&chunksArray.push(blob.slice(startCount,blobByteSize-1))}else chunksArray.push(blob);return chunksArray},Skylink.prototype._chunkDataURL=function(dataURL,chunkSize){var outputStr=dataURL,dataURLArray=[],startCount=0,endCount=0,dataByteSize=dataURL.size||dataURL.length;if(dataByteSize>chunkSize){for(;dataByteSize-1>endCount;)endCount=startCount+chunkSize,dataURLArray.push(outputStr.slice(startCount,endCount)),startCount+=chunkSize;dataByteSize-(startCount+1)>0&&chunksArray.push(outputStr.slice(startCount,dataByteSize-1))}else dataURLArray.push(outputStr);return dataURLArray},Skylink.prototype.sendBlobData=function(data,timeout,targetPeerId,sendChunksAsBinary,callback){this._startDataTransfer(data,timeout,targetPeerId,sendChunksAsBinary,callback,"blob")},Skylink.prototype.sendURLData=function(data,timeout,targetPeerId,callback){this._startDataTransfer(data,timeout,targetPeerId,callback,null,"data")},Skylink.prototype.respondBlobRequest=Skylink.prototype.acceptDataTransfer=function(peerId,transferId,accept){var self=this;if("string"!=typeof transferId&&"string"!=typeof peerId)return void log.error([peerId,"RTCDataChannel",transferId,"Aborting accept data transfer as data transfer ID or peer ID is not provided"]);if(!self._dataChannels[peerId])return void log.error([peerId,"RTCDataChannel",transferId,"Aborting accept data transfer as Peer does not have any Datachannel connections"]);if(!self._dataTransfers[transferId])return void log.error([peerId,"RTCDataChannel",transferId,"Aborting accept data transfer as invalid transfer ID is provided"]);var channelProp="main",dataChannelStateCbFn=null;self._dataChannels[peerId][transferId]&&(channelProp=transferId),self.once("dataTransferState",function(){dataChannelStateCbFn&&self.off("dataChannelState",dataChannelStateCbFn),delete self._dataTransfers[transferId],self._dataChannels[peerId]&&("main"===channelProp&&self._dataChannels[peerId].main&&(self._dataChannels[peerId].main.transferId=null),channelProp===transferId&&self._closeDataChannel(peerId,transferId))},function(state,evtTransferId,evtPeerId){return evtTransferId===transferId&&evtPeerId===peerId&&[self.DATA_TRANSFER_STATE.ERROR,self.DATA_TRANSFER_STATE.CANCEL,self.DATA_TRANSFER_STATE.DOWNLOAD_COMPLETED,self.DATA_TRANSFER_STATE.USER_REJECTED].indexOf(state)>-1}),accept?(log.debug([peerId,"RTCDataChannel",transferId,"Accepted data transfer and starting ..."]),dataChannelStateCbFn=function(state,evtPeerId,error,cN,cT){log.error([peerId,"RTCDataChannel",channelProp,'Data transfer "'+transferId+'" has been terminated due to connection.']),self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.ERROR,transferId,peerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),{transferType:self.DATA_TRANSFER_TYPE.DOWNLOAD,message:new Error("Data transfer terminated as Peer Datachannel connection closed abruptly.")})},self.once("dataChannelState",dataChannelStateCbFn,function(state,evtPeerId,error,channelName,channelType){return self._dataTransfers[transferId]&&self._dataTransfers[transferId].sessions[peerId]?evtPeerId===peerId&&("main"===channelProp?channelType===self.DATA_CHANNEL_STATE.MESSAGING:channelName===transferId)&&[self.DATA_CHANNEL_STATE.CLOSING,self.DATA_CHANNEL_STATE.CLOSED,self.DATA_CHANNEL_STATE.ERROR].indexOf(state)>-1:void self.off("dataChannelState",dataChannelStateCbFn)}),self._sendMessageToDataChannel(peerId,{type:self._DC_PROTOCOL_TYPE.ACK,sender:self._user.sid,ackN:0},channelProp),self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.DOWNLOAD_STARTED,transferId,peerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),null)):(log.warn([peerId,"RTCDataChannel",transferId,"Rejected data transfer and data transfer request has been aborted"]),self._sendMessageToDataChannel(peerId,{type:self._DC_PROTOCOL_TYPE.ACK,sender:self._user.sid,ackN:-1},channelProp),self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.USER_REJECTED,transferId,peerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),{message:new Error("Data transfer terminated as User has rejected data transfer request."),transferType:self.DATA_TRANSFER_TYPE.DOWNLOAD}))},Skylink.prototype.cancelBlobTransfer=Skylink.prototype.cancelDataTransfer=function(peerId,transferId){var self=this;if(!transferId||"string"!=typeof transferId)return void log.error([peerId,"RTCDataChannel",transferId,"Aborting cancel data transfer as data transfer ID is not provided"]);if(!peerId||"string"!=typeof peerId)return void log.error([peerId,"RTCDataChannel",transferId,"Aborting cancel data transfer as peer ID is not provided"]);if(!self._dataTransfers[transferId])return void log.error([peerId,"RTCDataChannel",transferId,"Aborting cancel data transfer as data transfer session does not exists."]);log.debug([peerId,"RTCDataChannel",transferId,"Canceling data transfer ..."]);var emitEventFn=function(peers,transferInfoPeerId){for(var i=0;i<peers.length;i++)self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.CANCEL,transferId,peers[i],self._getTransferInfo(transferId,transferInfoPeerId,!1,!1,!1),{transferType:self._dataTransfers[transferId].direction,message:new Error("User cancelled download transfer")})};if(self._hasMCU&&self._dataTransfers[transferId].direction===self.DATA_TRANSFER_TYPE.UPLOAD){if(!self._dataChannels.MCU)return void log.error([peerId,"RTCDataChannel",transferId,"Aborting cancel data transfer as Peer does not have any Datachannel connections"]);log.warn([peerId,"RTCDataChannel",transferId,"Aborting all data transfers to Peers"]),Object.keys(self._dataTransfers[transferId].peers.main).length>0&&self._sendMessageToDataChannel("MCU",{type:self._DC_PROTOCOL_TYPE.CANCEL,sender:self._user.sid,content:"Peer cancelled download transfer",name:self._dataTransfers[transferId].name,ackN:0},"main"),Object.keys(self._dataTransfers[transferId].peers[transferId]).length>0&&self._sendMessageToDataChannel("MCU",{type:self._DC_PROTOCOL_TYPE.CANCEL,sender:self._user.sid,content:"Peer cancelled download transfer",name:self._dataTransfers[transferId].name,ackN:0},transferId),emitEventFn(Object.keys(self._dataTransfers[transferId].peers.main).concat(Object.keys(self._dataTransfers[transferId].peers[transferId])))}else{var channelProp="main";if(!self._dataChannels[peerId])return void log.error([peerId,"RTCDataChannel",transferId,"Aborting cancel data transfer as Peer does not have any Datachannel connections"]);self._dataChannels[peerId][transferId]&&(channelProp=transferId),self._sendMessageToDataChannel(peerId,{type:self._DC_PROTOCOL_TYPE.CANCEL,sender:self._user.sid,content:"Peer cancelled download transfer",name:self._dataTransfers[transferId].name,ackN:0},channelProp),emitEventFn([peerId],peerId)}},Skylink.prototype.sendP2PMessage=function(message,targetPeerId){var listOfPeers=Object.keys(this._dataChannels),isPrivate=!1;if(Array.isArray(targetPeerId)?(listOfPeers=targetPeerId,isPrivate=!0):targetPeerId&&"string"==typeof targetPeerId&&(listOfPeers=[targetPeerId],isPrivate=!0),!this._inRoom||!this._user||!this._user.sid)return void log.error("Unable to send message as User is not in Room. ->",message);if(!this._initOptions.enableDataChannel)return void log.error("Unable to send message as User does not have Datachannel enabled. ->",message);for(var i=0;i<listOfPeers.length;i++){var peerId=listOfPeers[i];this._hasMCU||this._dataChannels[peerId]?"MCU"===peerId?(listOfPeers.splice(i,1),i--):this._hasMCU||(log.debug([peerId,"RTCDataChannel",null,"Sending "+(isPrivate?"private":"")+" P2P message to Peer"]),
this._sendMessageToDataChannel(peerId,{type:this._DC_PROTOCOL_TYPE.MESSAGE,isPrivate:isPrivate,sender:this._user.sid,target:peerId,data:message},"main")):(log.error([peerId,"RTCDataChannel",null,"Dropping of sending message to Peer as Datachannel connection does not exists"]),listOfPeers.splice(i,1),i--)}0===listOfPeers.length&&log.warn("Currently there are no Peers to send P2P message to (unless the message is queued and there are Peer connected by then)."),this._hasMCU&&(log.debug(["MCU","RTCDataChannel",null,"Broadcasting "+(isPrivate?"private":"")+" P2P message to Peers"]),this._sendMessageToDataChannel("MCU",{type:this._DC_PROTOCOL_TYPE.MESSAGE,isPrivate:isPrivate,sender:this._user.sid,target:listOfPeers,data:message},"main")),this._trigger("incomingMessage",{content:message,isPrivate:isPrivate,targetPeerId:targetPeerId||null,listOfPeers:listOfPeers,isDataChannel:!0,senderPeerId:this._user.sid},this._user.sid,this.getPeerInfo(),!0)},Skylink.prototype.startStreamingData=function(isStringStream,targetPeerId){var self=this,listOfPeers=Object.keys(self._dataChannels),isPrivate=!1,sessionChunkType="binary";Array.isArray(targetPeerId)?(listOfPeers=targetPeerId,isPrivate=!0):targetPeerId&&"string"==typeof targetPeerId&&(listOfPeers=[targetPeerId],isPrivate=!0),Array.isArray(isStringStream)?(listOfPeers=isStringStream,targetPeerId=isStringStream,isPrivate=!0):isStringStream&&"string"==typeof isStringStream?(listOfPeers=[isStringStream],targetPeerId=isStringStream,isPrivate=!0):isStringStream&&"boolean"==typeof isStringStream&&(sessionChunkType="string");var sessionInfo={chunk:null,chunkSize:0,chunkType:"string"===sessionChunkType?self.DATA_TRANSFER_DATA_TYPE.STRING:self._binaryChunkType,isPrivate:isPrivate,isStringStream:"string"===sessionChunkType,senderPeerId:self._user&&self._user.sid?self._user.sid:null};listOfPeers.indexOf("MCU")>-1&&listOfPeers.splice(listOfPeers.indexOf("MCU"),1);var emitErrorBeforeStreamingFn=function(error){log.error(error)};if(!this._inRoom||!this._user||!this._user.sid)return emitErrorBeforeStreamingFn("Unable to start data streaming as User is not in Room.");if(!this._initOptions.enableDataChannel)return emitErrorBeforeStreamingFn("Unable to start data streaming as User does not have Datachannel enabled.");if(0===listOfPeers.length)return emitErrorBeforeStreamingFn("Unable to start data streaming as there are no Peers to start session with.");if(self._hasMCU)return emitErrorBeforeStreamingFn("Unable to start data streaming as this feature is current not supported by MCU yet.");if(!self._initOptions.enableSimultaneousTransfers)return emitErrorBeforeStreamingFn("Unable to start data streaming as this feature requires simultaneous data transfers to be enabled");for(var transferId="stream_"+(self._user&&self._user.sid?self._user.sid:"-")+"_"+(new Date).getTime(),peersInterop=[],peersNonInterop=[],sessions={},listenToPeerFn=function(peerId,channelProp){var hasStarted=!1;sessions[peerId]=channelProp,self.once("dataStreamState",function(){},function(state,evtTransferId,evtPeerId,evtSessionInfo){if(evtTransferId===transferId&&evtPeerId===peerId){evtSessionInfo.chunk;return delete clone(evtSessionInfo).chunk,state===self.DATA_STREAM_STATE.SENDING_STARTED?void(hasStarted=!0):hasStarted&&[self.DATA_STREAM_STATE.ERROR,self.DATA_STREAM_STATE.SENDING_STOPPED].indexOf(state)>-1?(channelProp===transferId&&self._closeDataChannel(peerId,transferId),self._dataStreams[transferId]&&self._dataStreams[transferId].sessions[peerId]&&(delete self._dataStreams[transferId].sessions[peerId],0===Object.keys(self._dataStreams[transferId].sessions).length&&delete self._dataStreams[transferId]),!0):void 0}})},i=0;i<listOfPeers.length;i++){var peerId=listOfPeers[i],error=null,dtProtocolVersion=((self._peerInformations[peerId]||{}).agent||{}).DTProtocolVersion||"",channelProp=self._isLowerThanVersion(dtProtocolVersion,"0.1.2")||!self._initOptions.enableSimultaneousTransfers?"main":transferId;if(self._dataChannels[peerId]&&self._dataChannels[peerId].main)if(!self._hasMCU||self._dataChannels.MCU&&self._dataChannels.MCU.main)if(self._isLowerThanVersion(dtProtocolVersion,"0.1.3"))error='Peer DTProtocolVersion does not support data streaming. (received: "'+dtProtocolVersion+'", expected: "0.1.3")';else if("main"===channelProp){var dataTransferId=self._hasMCU?self._dataChannels.MCU.main.transferId:self._dataChannels[peerId].main.transferId;self._dataChannels[peerId].main.streamId?error="Peer Datachannel currently has an active data transfer session.":self._hasMCU&&self._dataChannels.MCU.main.streamId?error="MCU Peer Datachannel currently has an active data transfer session.":self._dataTransfers[dataTransferId]&&self._dataTransfers[dataTransferId].sessionChunkType===sessionChunkType?error=(self._hasMCU?"MCU ":"")+"Peer Datachannel currently has an active "+sessionChunkType+" data transfer.":peersInterop.push(peerId)}else peersNonInterop.push(peerId);else error="MCU Datachannel connection does not exists";else error="Datachannel connection does not exists";error?(self._trigger("dataStreamState",self.DATA_STREAM_STATE.START_ERROR,transferId,peerId,sessionInfo,new Error(error)),listOfPeers.splice(i,1),i--):listenToPeerFn(peerId,channelProp)}if(0===listOfPeers.length)return void log.warn("There are no Peers to start data session with.");self._dataStreams[transferId]={sessions:sessions,chunkType:"string"===sessionChunkType?self.DATA_TRANSFER_DATA_TYPE.STRING:self._binaryChunkType,sessionChunkType:sessionChunkType,isPrivate:isPrivate,isStringStream:"string"===sessionChunkType,senderPeerId:self._user&&self._user.sid?self._user.sid:null,isUpload:!0};var startDataSessionFn=function(peerId,channelProp,targetPeers){if(self.once("dataChannelState",function(){},function(state,evtPeerId,channelName,channelType,error){if(!self._dataStreams[transferId])return!0;if(evtPeerId===peerId&&("main"===channelProp?channelType===self.DATA_CHANNEL_TYPE.MESSAGING:channelName===transferId&&channelType===self.DATA_CHANNEL_TYPE.DATA)&&[self.DATA_CHANNEL_STATE.ERROR,self.DATA_CHANNEL_STATE.CLOSED].indexOf(state)>-1){var updatedError=new Error(error&&error.message?error.message:'Failed data transfer as datachannel state is "'+state+'".');if("MCU"===peerId)for(var mp=0;mp<targetPeers.length;mp++)self._trigger("dataStreamState",self.DATA_STREAM_STATE.ERROR,transferId,targetPeers[mp],sessionInfo,updatedError);else self._trigger("dataStreamState",self.DATA_STREAM_STATE.ERROR,transferId,peerId,sessionInfo,updatedError);return!0}}),!self._dataChannels[peerId][channelProp]||self._dataChannels[peerId][channelProp].channel.readyState!==self.DATA_CHANNEL_STATE.OPEN){var notOpenError=new Error("Failed starting data streaming session as channel is not opened.");if("MCU"===peerId)for(i=0;i<targetPeers.length;i++)self._trigger("dataStreamState",self.DATA_STREAM_STATE.START_ERROR,transferId,targetPeers[i],sessionInfo,notOpenError);else self._trigger("dataStreamState",self.DATA_STREAM_STATE.START_ERROR,transferId,peerId,sessionInfo,notOpenError)}self._sendMessageToDataChannel(peerId,{type:self._DC_PROTOCOL_TYPE.WRQ,transferId:transferId,name:transferId,size:0,originalSize:0,dataType:"fastBinaryStart",mimeType:null,chunkType:sessionChunkType,chunkSize:0,timeout:0,isPrivate:isPrivate,sender:self._user.sid,agent:AdapterJS.webrtcDetectedBrowser,version:AdapterJS.webrtcDetectedVersion,target:"MCU"===peerId?targetPeers:peerId},channelProp),self._dataChannels[peerId][channelProp].streamId=transferId;var updatedSessionInfo=clone(sessionInfo);if(delete updatedSessionInfo.chunk,"MCU"===peerId)for(var tp=0;tp<targetPeers.length;tp++)self._trigger("dataStreamState",self.DATA_STREAM_STATE.SENDING_STARTED,transferId,targetPeers[tp],sessionInfo,null),self._trigger("incomingDataStreamStarted",transferId,targetPeers[tp],updatedSessionInfo,!0);else self._trigger("dataStreamState",self.DATA_STREAM_STATE.SENDING_STARTED,transferId,peerId,sessionInfo,null),self._trigger("incomingDataStreamStarted",transferId,peerId,updatedSessionInfo,!0)},waitForChannelOpenFn=function(peerId,targetPeers){self.once("dataChannelState",function(state,evtPeerId,error){if(state!==self.DATA_CHANNEL_STATE.CREATE_ERROR)startDataSessionFn(peerId,transferId,targetPeers);else if("MCU"===peerId)for(var mp=0;mp<targetPeers.length;mp++)self._trigger("dataStreamState",self.DATA_STREAM_STATE.START_ERROR,transferId,targetPeers[mp],sessionInfo,error);else self._trigger("dataStreamState",self.DATA_STREAM_STATE.START_ERROR,transferId,peerId,sessionInfo,error)},function(state,evtPeerId,error,channelName,channelType){if(evtPeerId===peerId&&channelName===transferId&&channelType===self.DATA_CHANNEL_TYPE.DATA)return[self.DATA_CHANNEL_STATE.CREATE_ERROR,self.DATA_CHANNEL_STATE.OPEN].indexOf(state)>-1}),self._createDataChannel(peerId,transferId,"string"===sessionChunkType?self._CHUNK_DATAURL_SIZE:"firefox"===AdapterJS.webrtcDetectedBrowser?self._MOZ_BINARY_FILE_SIZE:self._BINARY_FILE_SIZE)};if(peersNonInterop.length>0)if(self._hasMCU)waitForChannelOpenFn("MCU",peersNonInterop);else for(var pni=0;pni<peersNonInterop.length;pni++)waitForChannelOpenFn(peersNonInterop[pni],null);if(peersInterop.length>0)if(self._hasMCU)startDataSessionFn("MCU","main",peersInterop);else for(var pi=0;pi<peersInterop.length;pi++)startDataSessionFn(peersInterop[pi],"main",null)},Skylink.prototype.streamData=function(transferId,dataChunk){var self=this;if(!transferId||"string"!=typeof transferId)return void log.error("Failed streaming data chunk as stream session ID is not provided.");if(!dataChunk||"object"!=typeof dataChunk||!(dataChunk instanceof Blob||dataChunk instanceof ArrayBuffer))return void log.error("Failed streaming data chunk as it is not provided.");if(!(self._inRoom&&self._user&&self._user.sid))return void log.error("Failed streaming data chunk as User is not in the Room.");if(!self._dataStreams[transferId])return void log.error("Failed streaming data chunk as session does not exists.");if(!self._dataStreams[transferId].isUpload)return void log.error("Failed streaming data chunk as session is not sending.");if("string"===self._dataStreams[transferId].sessionChunkType?"string"!=typeof dataChunk:"object"!=typeof dataChunk)return void log.error("Failed streaming data chunk as data chunk does not match expected data type.");if(self._hasMCU)return void log.error("Failed streaming data chunk as MCU does not support this feature yet.");var updatedDataChunk=dataChunk instanceof ArrayBuffer?new Blob(dataChunk):dataChunk;if("string"===self._dataStreams[transferId].sessionChunkType?updatedDataChunk.length>self._CHUNK_DATAURL_SIZE:updatedDataChunk.length>self._BINARY_FILE_SIZE)return void log.error("Failed streaming data chunk as data chunk exceeds maximum chunk limit.");var sessionInfo={chunk:updatedDataChunk,chunkSize:updatedDataChunk.size||updatedDataChunk.length||updatedDataChunk.byteLength,chunkType:"string"===self._dataStreams[transferId].sessionChunkType?self.DATA_TRANSFER_DATA_TYPE.STRING:self._binaryChunkType,isPrivate:self._dataStreams[transferId].sessionChunkType.isPrivate,isStringStream:"string"===self._dataStreams[transferId].sessionChunkType,senderPeerId:self._user&&self._user.sid?self._user.sid:null},peersInterop=[],peersNonInterop=[],sendDataFn=function(peerId,channelProp,targetPeers){var onSendDataFn=function(buffer){self._sendMessageToDataChannel(peerId,buffer,channelProp,!0);var updatedSessionInfo=clone(sessionInfo);if(delete updatedSessionInfo.chunk,targetPeers)for(var i=0;i<targetPeers.length;i++)self._trigger("dataStreamState",self.DATA_STREAM_STATE.SENT,transferId,targetPeers[i],sessionInfo,null),self._trigger("incomingDataStream",dataChunk,transferId,targetPeers[i],updatedSessionInfo,!0);else self._trigger("dataStreamState",self.DATA_STREAM_STATE.SENT,transferId,peerId,sessionInfo,null),self._trigger("incomingDataStream",dataChunk,transferId,peerId,updatedSessionInfo,!0)};dataChunk instanceof Blob&&sessionInfo.chunkType===self.DATA_TRANSFER_DATA_TYPE.ARRAY_BUFFER?self._blobToArrayBuffer(dataChunk,onSendDataFn):onSendDataFn(dataChunk instanceof Blob||sessionInfo.chunkType!==self.DATA_TRANSFER_DATA_TYPE.BLOB?"plugin"===AdapterJS.webrtcDetectedType&&"string"!=typeof dataChunk?new Int8Array(dataChunk):dataChunk:new Blob([dataChunk]))};for(var peerId in self._dataStreams[transferId].sessions)if(self._dataStreams[transferId].sessions.hasOwnProperty(peerId)&&self._dataStreams[transferId].sessions[peerId]){var channelProp=self._dataStreams[transferId].sessions[peerId];if(!self._dataChannels[self._hasMCU?"MCU":peerId]||!self._dataChannels[self._hasMCU?"MCU":peerId][channelProp]||self._dataChannels[self._hasMCU?"MCU":peerId][channelProp].channel.readyState!==self.DATA_CHANNEL_STATE.OPEN||self._dataChannels[self._hasMCU?"MCU":peerId][channelProp].streamId!==transferId)return log.error([peerId,"RTCDataChannel",transferId,"Failed streaming data as it has not started or is ready."]),void self._trigger("dataStreamState",self.DATA_STREAM_STATE.ERROR,transferId,peerId,sessionInfo,new Error("Streaming as it has not started or Datachannel connection is not open."));self._hasMCU?"main"===channelProp?peersInterop.push(peerId):peersNonInterop.push(peerId):sendDataFn(peerId,channelProp)}self._hasMCU&&(peersInterop.length>0&&sendDataFn(peerId,"main",peersInterop),peersNonInterop.length>0&&sendDataFn(peerId,transferId,peersNonInterop))},Skylink.prototype.stopStreamingData=function(transferId){var self=this;if(!transferId||"string"!=typeof transferId)return void log.error("Failed streaming data chunk as stream session ID is not provided.");if(!(self._inRoom&&self._user&&self._user.sid))return void log.error("Failed streaming data chunk as User is not in the Room.");if(!self._dataStreams[transferId])return void log.error("Failed stopping data streaming session as it does not exists.");if(!self._dataStreams[transferId].isUpload)return void log.error("Failed stopping data streaming session as it is not sending.");if(self._hasMCU)return void log.error("Failed stopping data streaming session as MCU does not support this feature yet.");var sessionInfo={chunk:null,chunkSize:0,chunkType:"string"===self._dataStreams[transferId].sessionChunkType?self.DATA_TRANSFER_DATA_TYPE.STRING:self._binaryChunkType,isPrivate:self._dataStreams[transferId].sessionChunkType.isPrivate,isStringStream:"string"===self._dataStreams[transferId].sessionChunkType,senderPeerId:self._user&&self._user.sid?self._user.sid:null},peersInterop=[],peersNonInterop=[],sendDataFn=function(peerId,channelProp,targetPeers){self._sendMessageToDataChannel(peerId,{type:self._DC_PROTOCOL_TYPE.WRQ,transferId:transferId,name:transferId,size:0,originalSize:0,dataType:"fastBinaryStop",mimeType:null,chunkType:self._dataStreams[transferId].sessionChunkType,chunkSize:0,timeout:0,isPrivate:self._dataStreams[transferId].isPrivate,sender:self._user.sid,agent:AdapterJS.webrtcDetectedBrowser,version:AdapterJS.webrtcDetectedVersion,target:targetPeers||peerId},channelProp);var updatedSessionInfo=clone(sessionInfo);if(delete updatedSessionInfo.chunk,targetPeers)for(var i=0;i<targetPeers.length;i++)self._trigger("dataStreamState",self.DATA_STREAM_STATE.SENDING_STOPPED,transferId,targetPeers[i],sessionInfo,null),self._trigger("incomingDataStreamStopped",transferId,targetPeers[i],updatedSessionInfo,!0);else self._trigger("dataStreamState",self.DATA_STREAM_STATE.SENDING_STOPPED,transferId,peerId,sessionInfo,null),self._trigger("incomingDataStreamStopped",transferId,peerId,updatedSessionInfo,!0)};for(var peerId in self._dataStreams[transferId].sessions)if(self._dataStreams[transferId].sessions.hasOwnProperty(peerId)&&self._dataStreams[transferId].sessions[peerId]){var channelProp=self._dataStreams[transferId].sessions[peerId];if(!self._dataChannels[self._hasMCU?"MCU":peerId]||!self._dataChannels[self._hasMCU?"MCU":peerId][channelProp]||self._dataChannels[self._hasMCU?"MCU":peerId][channelProp].channel.readyState!==self.DATA_CHANNEL_STATE.OPEN||self._dataChannels[self._hasMCU?"MCU":peerId][channelProp].streamId!==transferId)return log.error([peerId,"RTCDataChannel",transferId,"Failed stopping data streaming session as channel is closed."]),void self._trigger("dataStreamState",self.DATA_STREAM_STATE.ERROR,transferId,peerId,sessionInfo,new Error("Failed stopping data streaming session as Datachannel connection is not open or is active."));self._hasMCU?"main"===self._dataStreams[transferId].sessions[peerId]?peersInterop.push(peerId):peersNonInterop.push(peerId):sendDataFn(peerId,channelProp)}self._hasMCU&&(peersInterop.length>0&&sendDataFn(peerId,"main",peersInterop),peersNonInterop.length>0&&sendDataFn(peerId,transferId,peersNonInterop))},Skylink.prototype._startDataTransfer=function(data,timeout,targetPeerId,sendChunksAsBinary,callback,sessionType){var self=this,transferId=(self._user?self._user.sid:"")+"_"+(new Date).getTime(),transferErrors={},transferCompleted=[],chunks=[],listOfPeers=Object.keys(self._peerConnections),sessionChunkType="string",transferInfo={name:null,size:null,chunkSize:null,chunkType:null,dataType:null,mimeType:null,direction:self.DATA_TRANSFER_TYPE.UPLOAD,timeout:60,isPrivate:!1,percentage:0};"number"==typeof timeout?transferInfo.timeout=timeout:Array.isArray(timeout)?listOfPeers=timeout:timeout&&"string"==typeof timeout?listOfPeers=[timeout]:timeout&&"boolean"==typeof timeout?sessionChunkType="binary":"function"==typeof timeout&&(callback=timeout),Array.isArray(targetPeerId)?listOfPeers=targetPeerId:targetPeerId&&"string"==typeof targetPeerId?listOfPeers=[targetPeerId]:targetPeerId&&"boolean"==typeof targetPeerId?sessionChunkType="binary":"function"==typeof targetPeerId&&(callback=targetPeerId),sendChunksAsBinary&&"boolean"==typeof sendChunksAsBinary?sessionChunkType="binary":"function"==typeof sendChunksAsBinary&&(callback=sendChunksAsBinary);var emitErrorBeforeDataTransferFn=function(error){if(log.error(error),"function"==typeof callback){var transferErrors={};if(0===listOfPeers.length)transferErrors.self=new Error(error);else for(var i=0;i<listOfPeers.length;i++)transferErrors[listOfPeers[i]]=new Error(error);callback({transferId:null,transferInfo:transferInfo,listOfPeers:listOfPeers,transferErrors:transferErrors},null)}};if("blob"===sessionType){self._hasMCU&&"binary"===sessionChunkType&&(log.warn("Binary data chunks transfer is not yet supported with MCU environment. Fallbacking to binary string data chunks transfer."),sessionChunkType="string");var chunkSize="string"===sessionChunkType?"firefox"===AdapterJS.webrtcDetectedBrowser?self._MOZ_CHUNK_FILE_SIZE:self._CHUNK_FILE_SIZE:"firefox"===AdapterJS.webrtcDetectedBrowser?self._MOZ_BINARY_FILE_SIZE:self._BINARY_FILE_SIZE;if(transferInfo.dataType=self.DATA_TRANSFER_SESSION_TYPE.BLOB,transferInfo.chunkSize="string"===sessionChunkType?4*Math.ceil(chunkSize/3):chunkSize,transferInfo.chunkType="binary"===sessionChunkType?self._binaryChunkType:self.DATA_TRANSFER_DATA_TYPE.BINARY_STRING,!(data&&"object"==typeof data&&data instanceof Blob))return void emitErrorBeforeDataTransferFn("Provided data is not a Blob data");if(transferInfo.name=data.name||transferId,transferInfo.mimeType=data.type||null,data.size<1)return void emitErrorBeforeDataTransferFn("Provided data is not a valid Blob data.");transferInfo.originalSize=data.size,transferInfo.size="string"===sessionChunkType?4*Math.ceil(data.size/3):data.size,chunks=self._chunkBlobData(data,chunkSize)}else{if(transferInfo.dataType=self.DATA_TRANSFER_SESSION_TYPE.DATA_URL,transferInfo.chunkSize=self._CHUNK_DATAURL_SIZE,transferInfo.chunkType=self.DATA_TRANSFER_DATA_TYPE.STRING,!data||"string"!=typeof data)return void emitErrorBeforeDataTransferFn("Provided data is not a dataURL");transferInfo.originalSize=transferInfo.size=data.length||data.size,chunks=self._chunkDataURL(data,transferInfo.chunkSize)}if(!self._user||!self._user.sid)return void emitErrorBeforeDataTransferFn("Unable to send any "+sessionType.replace("data","dataURL")+" data. User is not in Room.");if(!self._initOptions.enableDataChannel)return void emitErrorBeforeDataTransferFn("Unable to send any "+sessionType.replace("data","dataURL")+" data. Datachannel is disabled");if(0===listOfPeers.length)return void emitErrorBeforeDataTransferFn("Unable to send any "+sessionType.replace("data","dataURL")+" data. There are no Peers to start data transfer with");if(self._dataTransfers[transferId]=clone(transferInfo),self._dataTransfers[transferId].peers={},self._dataTransfers[transferId].peers.main={},self._dataTransfers[transferId].peers[transferId]={},self._dataTransfers[transferId].sessions={},self._dataTransfers[transferId].chunks=chunks,self._dataTransfers[transferId].enforceBSPeers=[],self._dataTransfers[transferId].enforcedBSInfo={},self._dataTransfers[transferId].sessionType=sessionType,self._dataTransfers[transferId].sessionChunkType=sessionChunkType,self._dataTransfers[transferId].senderPeerId=self._user.sid,"blob"===sessionType&&"binary"===sessionChunkType){for(var p=0;p<listOfPeers.length;p++){var protocolVer=((self._peerInformations[listOfPeers[p]]||{}).agent||{}).DTProtocolVersion||"0.1.0";self._isLowerThanVersion(protocolVer,"0.1.3")&&self._dataTransfers[transferId].enforceBSPeers.push(listOfPeers[p])}if(self._dataTransfers[transferId].enforceBSPeers.length>0){var bsChunkSize="firefox"===AdapterJS.webrtcDetectedBrowser?self._MOZ_CHUNK_FILE_SIZE:self._CHUNK_FILE_SIZE,bsChunks=self._chunkBlobData(new Blob(chunks),bsChunkSize);self._dataTransfers[transferId].enforceBSInfo={chunkSize:4*Math.ceil(bsChunkSize/3),chunkType:self.DATA_TRANSFER_DATA_TYPE.BINARY_STRING,size:4*Math.ceil(transferInfo.originalSize/3),chunks:bsChunks}}}for(var completeFn=function(peerId,error){transferCompleted.indexOf(peerId)>-1||(log.debug([peerId,"RTCDataChannel",transferId,"Data transfer result. Is errors present? ->"],error),transferCompleted.push(peerId),error&&(transferErrors[peerId]=new Error(error)),listOfPeers.length===transferCompleted.length&&(log.log([null,"RTCDataChannel",transferId,"Data transfer request completed"]),"function"==typeof callback&&(Object.keys(transferErrors).length>0?callback({transferId:transferId,transferInfo:self._getTransferInfo(transferId,peerId,!1,!0,!1),transferErrors:transferErrors,listOfPeers:listOfPeers},null):callback(null,{transferId:transferId,transferInfo:self._getTransferInfo(transferId,peerId,!1,!0,!1),listOfPeers:listOfPeers}))))},i=0;i<listOfPeers.length;i++){var MCUInteropStatus=self._startDataTransferToPeer(transferId,listOfPeers[i],completeFn,null,null);"boolean"==typeof MCUInteropStatus&&(!0===MCUInteropStatus?self._dataTransfers[transferId].peers.main[listOfPeers[i]]=!0:self._dataTransfers[transferId].peers[transferId][listOfPeers[i]]=!0)}self._hasMCU&&(Object.keys(self._dataTransfers[transferId].peers.main).length>0&&self._startDataTransferToPeer(transferId,"MCU",completeFn,"main",Object.keys(self._dataTransfers[transferId].peers.main)),Object.keys(self._dataTransfers[transferId].peers[transferId]).length>0&&self._startDataTransferToPeer(transferId,"MCU",completeFn,transferId,Object.keys(self._dataTransfers[transferId].peers[transferId])))},Skylink.prototype._startDataTransferToPeer=function(transferId,peerId,callback,channelProp,targetPeers){var self=this,peerConnectionStateCbFn=null,dataChannelStateCbFn=null,emitEventFn=function(cb){for(var peers=targetPeers||[peerId],i=0;i<peers.length;i++)cb(peers[i])},returnErrorBeforeTransferFn=function(error){var updatedError="MCU"===peerId?error.replace(/Peer/g,"MCU Peer"):error;emitEventFn(function(evtPeerId){self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.ERROR,transferId,evtPeerId,self._getTransferInfo(transferId,peerId,!0,!0,!1),{message:new Error(updatedError),transferType:self.DATA_TRANSFER_TYPE.UPLOAD})})},sendWRQFn=function(){var size=self._dataTransfers[transferId].size,chunkSize=self._dataTransfers[transferId].chunkSize,chunkType=self._dataTransfers[transferId].sessionChunkType;self._dataTransfers[transferId].enforceBSPeers.indexOf(peerId)>-1&&(log.warn([peerId,"RTCDataChannel",transferId,"Binary data chunks transfer is not yet supported with Peer connecting from Android, iOS and C++ SDK. Fallbacking to binary string data chunks transfer."]),size=self._dataTransfers[transferId].enforceBSInfo.size,chunkSize=self._dataTransfers[transferId].enforceBSInfo.chunkSize,chunkType="string"),self._sendMessageToDataChannel(peerId,{type:self._DC_PROTOCOL_TYPE.WRQ,transferId:transferId,name:self._dataTransfers[transferId].name,size:size,originalSize:self._dataTransfers[transferId].originalSize,dataType:self._dataTransfers[transferId].sessionType,mimeType:self._dataTransfers[transferId].mimeType,chunkType:chunkType,chunkSize:chunkSize,timeout:self._dataTransfers[transferId].timeout,isPrivate:self._dataTransfers[transferId].isPrivate,sender:self._user.sid,agent:AdapterJS.webrtcDetectedBrowser,version:AdapterJS.webrtcDetectedVersion,target:targetPeers||peerId},channelProp),emitEventFn(function(evtPeerId){self._trigger("incomingDataRequest",transferId,evtPeerId,self._getTransferInfo(transferId,peerId,!1,!1,!1),!0),self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.USER_UPLOAD_REQUEST,transferId,evtPeerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),null)})};if("MCU"!==peerId){var dataTransferStateCbFn=function(state,evtTransferId,evtPeerId,transferInfo,error){peerConnectionStateCbFn&&self.off("peerConnectionState",peerConnectionStateCbFn),dataChannelStateCbFn&&self.off("dataChannelState",dataChannelStateCbFn),channelProp&&delete self._dataTransfers[transferId].peers[channelProp][peerId],callback(peerId,state===self.DATA_TRANSFER_STATE.UPLOAD_COMPLETED?null:error.message.message||error.message.toString()),delete self._dataTransfers[transferId].sessions[peerId],self._hasMCU&&0===Object.keys(self._dataTransfers[transferId].peers.main).length&&self._dataChannels.MCU&&self._dataChannels.MCU.main?self._dataChannels.MCU.main.transferId=null:"main"===channelProp&&self._dataChannels[peerId]&&self._dataChannels[peerId].main&&(self._dataChannels[peerId].main.transferId=null),0===Object.keys(self._dataTransfers[transferId].sessions).length&&delete self._dataTransfers[transferId]};self.once("dataTransferState",dataTransferStateCbFn,function(state,evtTransferId,evtPeerId){return self._dataTransfers[transferId]&&(self._hasMCU?self._dataTransfers[transferId].peers.main[peerId]||self._dataTransfers[transferId].peers[transferId][peerId]:self._dataTransfers[transferId].sessions[peerId])?evtTransferId===transferId&&evtPeerId===peerId&&[self.DATA_TRANSFER_STATE.UPLOAD_COMPLETED,self.DATA_TRANSFER_STATE.ERROR,self.DATA_TRANSFER_STATE.CANCEL,self.DATA_TRANSFER_STATE.REJECTED].indexOf(state)>-1:(dataTransferStateCbFn&&self.off("dataTransferState",dataTransferStateCbFn),peerConnectionStateCbFn&&self.off("peerConnectionState",peerConnectionStateCbFn),void(dataChannelStateCbFn&&self.off("dataChannelState",dataChannelStateCbFn)))})}if(!self._peerConnections[peerId])return void returnErrorBeforeTransferFn("Unable to start data transfer as Peer connection does not exists.");if(!self._peerInformations[peerId])return void returnErrorBeforeTransferFn("Unable to start data transfer as Peer connection does not exists.");if(self._peerConnections[peerId].signalingState!==self.PEER_CONNECTION_STATE.STABLE)return void returnErrorBeforeTransferFn("Unable to start data transfer as Peer connection is not stable.");if(!self._dataTransfers[transferId])return void returnErrorBeforeTransferFn("Unable to start data transfer as data transfer session is not in order.");if(!self._dataChannels[peerId]||!self._dataChannels[peerId].main)return void returnErrorBeforeTransferFn("Unable to start data transfer as Peer Datachannel connection does not exists.");if(self._dataChannels[peerId].main.channel.readyState!==self.DATA_CHANNEL_STATE.OPEN)return void returnErrorBeforeTransferFn("Unable to start data transfer as Peer Datachannel connection is not opened.");var streamId=self._dataChannels[peerId].main.streamId;if(streamId&&"main"===channelProp&&self._dataStreams[streamId]&&("string"===self._dataStreams[streamId].sessionChunkType&&("string"===self._dataTransfers[transferId].sessionChunkType||self._dataTransfers[transferId].enforceBSPeers.indexOf(peerId)>-1)||"binary"===self._dataStreams[streamId].sessionChunkType&&"binary"===self._dataStreams[streamId].sessionChunkType&&-1===self._dataTransfers[transferId].enforceBSPeers.indexOf(peerId)))return void returnErrorBeforeTransferFn("Unable to start data transfer as Peer Datachannel currently has an active "+self._dataStreams[streamId].sessionChunkType+" data streaming session.");var protocolVer=(self._peerInformations[peerId].agent||{}).DTProtocolVersion||"0.1.0",requireInterop=self._isLowerThanVersion(protocolVer,"0.1.2")||!self._initOptions.enableSimultaneousTransfers;return self._isLowerThanVersion(protocolVer,"0.1.2")&&"data"===self._dataTransfers[transferId].sessionType&&"string"===self._dataTransfers[transferId].sessionChunkType?void returnErrorBeforeTransferFn("Unable to start data transfer as Peer do not support DATA_URL type of data transfers"):"MCU"!==peerId&&self._hasMCU?(channelProp=requireInterop?"main":transferId,peerConnectionStateCbFn=function(){returnErrorBeforeTransferFn("Data transfer terminated as Peer connection is not stable.")},self.once("peerConnectionState",peerConnectionStateCbFn,function(state,evtPeerId){return self._dataTransfers[transferId]?state!==self.PEER_CONNECTION_STATE.STABLE&&evtPeerId===peerId:void self.off("peerConnectionState",peerConnectionStateCbFn)}),requireInterop):(requireInterop||"main"===channelProp)&&self._dataChannels[peerId].main.transferId?void returnErrorBeforeTransferFn("Unable to start data transfer as Peer Datachannel has a data transfer in-progress."):(self._dataTransfers[transferId].sessions[peerId]={timer:null,ackN:0},dataChannelStateCbFn=function(state,evtPeerId,error){self._dataTransfers[transferId].sessions[peerId].ackN>=self._dataTransfers[transferId].chunks.length-1||returnErrorBeforeTransferFn(error?error.message||error.toString():"Data transfer terminated as Peer Datachannel connection closed abruptly.")},self.once("dataChannelState",dataChannelStateCbFn,function(state,evtPeerId,error,channelName,channelType){if(!self._dataTransfers[transferId]||!self._dataTransfers[transferId].sessions[peerId])return void self.off("dataChannelState",dataChannelStateCbFn);if(evtPeerId===peerId&&("main"===channelProp?channelType===self.DATA_CHANNEL_TYPE.MESSAGING:channelName===transferId))return state===self.DATA_CHANNEL_STATE.OPEN&&"main"!==channelProp&&channelName===transferId?(self._dataChannels[peerId][channelProp].transferId=transferId,sendWRQFn(),!1):[self.DATA_CHANNEL_STATE.CREATE_ERROR,self.DATA_CHANNEL_STATE.ERROR,self.DATA_CHANNEL_STATE.CLOSING,self.DATA_CHANNEL_STATE.CLOSED].indexOf(state)>-1}),void(requireInterop&&"MCU"!==peerId||"main"===channelProp?(channelProp="main",self._dataChannels[peerId].main.transferId=transferId,sendWRQFn()):(channelProp=transferId,self._createDataChannel(peerId,transferId,"data"===self._dataTransfers[transferId].sessionType?self._CHUNK_DATAURL_SIZE:"string"===self._dataTransfers[transferId].sessionChunkType?"firefox"===AdapterJS.webrtcDetectedBrowser?16384:65546:"firefox"===AdapterJS.webrtcDetectedBrowser?self._MOZ_BINARY_FILE_SIZE:self._BINARY_FILE_SIZE))))},Skylink.prototype._getTransferInfo=function(transferId,peerId,returnDataProp,hidePercentage,returnDataAtStart){if(!this._dataTransfers[transferId])return{};var transferInfo={name:this._dataTransfers[transferId].name,size:this._dataTransfers[transferId].size,dataType:this._dataTransfers[transferId].dataType||this.DATA_TRANSFER_SESSION_TYPE.BLOB,mimeType:this._dataTransfers[transferId].mimeType||null,chunkSize:this._dataTransfers[transferId].chunkSize,chunkType:this._dataTransfers[transferId].chunkType,timeout:this._dataTransfers[transferId].timeout,isPrivate:this._dataTransfers[transferId].isPrivate,direction:this._dataTransfers[transferId].direction}
;if(this._dataTransfers[transferId].originalSize?transferInfo.size=this._dataTransfers[transferId].originalSize:this._dataTransfers[transferId].chunkType===this.DATA_TRANSFER_DATA_TYPE.BINARY_STRING&&(transferInfo.size=Math.ceil(3*transferInfo.size/4)),!hidePercentage){if(transferInfo.percentage=0,!this._dataTransfers[transferId].sessions[peerId])return returnDataProp&&(transferInfo.data=null),transferInfo;if(this._dataTransfers[transferId].direction===this.DATA_TRANSFER_TYPE.DOWNLOAD)this._dataTransfers[transferId].sessions[peerId].receivedSize===this._dataTransfers[transferId].sessions[peerId].size?transferInfo.percentage=100:transferInfo.percentage=parseFloat((this._dataTransfers[transferId].sessions[peerId].receivedSize/this._dataTransfers[transferId].size*100).toFixed(2),10);else{var chunksLength=this._dataTransfers[transferId].enforceBSPeers.indexOf(peerId)>-1?this._dataTransfers[transferId].enforceBSInfo.chunks.length:this._dataTransfers[transferId].chunks.length;this._dataTransfers[transferId].sessions[peerId].ackN===chunksLength?transferInfo.percentage=100:transferInfo.percentage=parseFloat((this._dataTransfers[transferId].sessions[peerId].ackN/chunksLength*100).toFixed(2),10)}returnDataProp&&("number"!=typeof returnDataAtStart?100===transferInfo.percentage?transferInfo.data=this._getTransferData(transferId):transferInfo.data=null:(transferInfo.percentage=returnDataAtStart,0===returnDataAtStart&&(transferInfo.data=this._getTransferData(transferId))))}return transferInfo},Skylink.prototype._getTransferData=function(transferId){if(!this._dataTransfers[transferId])return null;if(this._dataTransfers[transferId].dataType===this.DATA_TRANSFER_SESSION_TYPE.BLOB){var mimeType={name:this._dataTransfers[transferId].name};return this._dataTransfers[transferId].mimeType&&(mimeType.type=this._dataTransfers[transferId].mimeType),new Blob(this._dataTransfers[transferId].chunks,mimeType)}return this._dataTransfers[transferId].chunks.join("")},Skylink.prototype._handleDataTransferTimeoutForPeer=function(transferId,peerId,setPeerTO){var self=this;if(!self._dataTransfers[transferId]||!self._dataTransfers[transferId].sessions[peerId])return void log.debug([peerId,"RTCDataChannel",transferId,"Data transfer does not exists for Peer. Ignoring timeout."]);log.debug([peerId,"RTCDataChannel",transferId,"Clearing data transfer timer for Peer."]),self._dataTransfers[transferId].sessions[peerId].timer&&clearTimeout(self._dataTransfers[transferId].sessions[peerId].timer),self._dataTransfers[transferId].sessions[peerId].timer=null,setPeerTO&&(log.debug([peerId,"RTCDataChannel",transferId,"Setting data transfer timer for Peer."]),self._dataTransfers[transferId].sessions[peerId].timer=setTimeout(function(){if(!self._dataTransfers[transferId]||!self._dataTransfers[transferId].sessions[peerId])return void log.debug([peerId,"RTCDataChannel",transferId,"Data transfer already ended for Peer. Ignoring expired timeout."]);if(!self._user||!self._user.sid)return void log.debug([peerId,"RTCDataChannel",transferId,"User is not in Room. Ignoring expired timeout."]);if(!self._dataChannels[peerId])return void log.debug([peerId,"RTCDataChannel",transferId,"Datachannel connection does not exists. Ignoring expired timeout."]);log.error([peerId,"RTCDataChannel",transferId,"Data transfer response has timed out."]);var emitEventFn=function(cb){if("MCU"===peerId){for(var broadcastedPeers=[self._dataTransfers[transferId].peers.main,self._dataTransfers[transferId].peers[transferId]],i=0;i<broadcastedPeers.length;i++)if(broadcastedPeers[i])for(var bcPeerId in broadcastedPeers[i])broadcastedPeers[i].hasOwnProperty(bcPeerId)&&broadcastedPeers[i][bcPeerId]&&cb(bcPeerId)}else cb(peerId)},errorMsg="Connection Timeout. Longer than "+self._dataTransfers[transferId].timeout+" seconds. Connection is abolished.";self._sendMessageToDataChannel(peerId,{type:self._DC_PROTOCOL_TYPE.ERROR,content:errorMsg,isUploadError:self._dataTransfers[transferId].direction===self.DATA_TRANSFER_TYPE.UPLOAD,sender:self._user.sid,name:self._dataTransfers[transferId].name},self._dataChannels[peerId][transferId]?transferId:"main"),emitEventFn(function(evtPeerId){self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.ERROR,transferId,peerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),{transferType:self.DATA_TRANSFER_TYPE.DOWNLOAD,message:new Error(errorMsg)})})},1e3*self._dataTransfers[transferId].timeout))},Skylink.prototype._processDataChannelData=function(rawData,peerId,channelName,channelType){var self=this,transferId=null,streamId=null,isStreamChunk=!1,channelProp=channelType===self.DATA_CHANNEL_TYPE.MESSAGING?"main":channelName,objPeerDataChannel=self._dataChannels[peerId]||{};if(objPeerDataChannel.hasOwnProperty(channelProp)&&"object"==typeof objPeerDataChannel[channelProp]){if(transferId=objPeerDataChannel[channelProp].transferId,streamId=objPeerDataChannel[channelProp].streamId,streamId&&self._dataStreams[streamId]&&(isStreamChunk="string"===self._dataStreams[streamId].sessionChunkType?"string"==typeof rawData:"object"==typeof rawData),!self._peerConnections[peerId])return void log.warn([peerId,"RTCDataChannel",channelProp,"Dropping data received from Peer as connection is not present ->"],rawData);if(!self._dataChannels[peerId]||!self._dataChannels[peerId][channelProp])return void log.warn([peerId,"RTCDataChannel",channelProp,"Dropping data received from Peer as Datachannel connection is not present ->"],rawData);if("string"==typeof rawData)try{var protocolData=JSON.parse(rawData);if(isStreamChunk=!1,log.debug([peerId,"RTCDataChannel",channelProp,'Received protocol "'+protocolData.type+'" message ->'],protocolData),[self._DC_PROTOCOL_TYPE.ACK,self._DC_PROTOCOL_TYPE.ERROR,self._DC_PROTOCOL_TYPE.CANCEL].indexOf(protocolData.type)>-1&&!(transferId&&self._dataTransfers[transferId]&&self._dataTransfers[transferId].sessions[peerId]))return void log.warn([peerId,"RTCDataChannel",channelProp,"Discarded protocol message as data transfer session is not present ->"],protocolData);switch(protocolData.type){case self._DC_PROTOCOL_TYPE.WRQ:if(transferId&&self._dataTransfers[transferId]&&self._dataTransfers[transferId].sessions[peerId])return log.warn([peerId,"RTCDataChannel",channelProp,"Rejecting bidirectional data transfer request as it is currently not supported in the SDK ->"],protocolData),void self._sendMessageToDataChannel(peerId,{type:self._DC_PROTOCOL_TYPE.ACK,ackN:-1,sender:self._user.sid},channelProp);self._WRQProtocolHandler(peerId,protocolData,channelProp);break;case self._DC_PROTOCOL_TYPE.ACK:self._ACKProtocolHandler(peerId,protocolData,channelProp);break;case self._DC_PROTOCOL_TYPE.ERROR:self._ERRORProtocolHandler(peerId,protocolData,channelProp);break;case self._DC_PROTOCOL_TYPE.CANCEL:self._CANCELProtocolHandler(peerId,protocolData,channelProp);break;case self._DC_PROTOCOL_TYPE.MESSAGE:self._MESSAGEProtocolHandler(peerId,protocolData,channelProp);break;default:log.warn([peerId,"RTCDataChannel",channelProp,'Discarded unknown "'+protocolData.type+'" message ->'],protocolData)}}catch(error){if(rawData.indexOf("{")>-1&&rawData.indexOf("}")>0)throw log.error([peerId,"RTCDataChannel",channelProp,"Failed parsing protocol step data error ->"],{data:rawData,error:error}),self._trigger("dataChannelState",self.DATA_CHANNEL_STATE.ERROR,peerId,error,channelName,channelType,null,self._getDataChannelBuffer(peerId,channelProp)),error;if(!(isStreamChunk||transferId&&self._dataTransfers[transferId]&&self._dataTransfers[transferId].sessions[peerId]))return void log.warn([peerId,"RTCDataChannel",channelProp,"Discarded data chunk without session ->"],rawData);if(!isStreamChunk&&transferId&&self._dataTransfers[transferId].chunks[self._dataTransfers[transferId].sessions[peerId].ackN])return void log.warn([peerId,"RTCDataChannel",transferId,"Dropping data chunk "+(isStreamChunk?"":"@"+self._dataTransfers[transferId].sessions[peerId].ackN)+" as it has already been added ->"],rawData);self.DATA_TRANSFER_DATA_TYPE.BINARY_STRING;if(isStreamChunk||self._dataTransfers[transferId].dataType===self.DATA_TRANSFER_SESSION_TYPE.DATA_URL)log.debug([peerId,"RTCDataChannel",channelProp,"Received string data chunk "+(isStreamChunk?"":"@"+self._dataTransfers[transferId].sessions[peerId].ackN)+" with size ->"],rawData.length||rawData.size),self._DATAProtocolHandler(peerId,rawData,self.DATA_TRANSFER_DATA_TYPE.STRING,rawData.length||rawData.size||0,channelProp);else{var removeSpaceData=rawData.replace(/\s|\r|\n/g,"");log.debug([peerId,"RTCDataChannel",channelProp,"Received binary string data chunk @"+self._dataTransfers[transferId].sessions[peerId].ackN+" with size ->"],removeSpaceData.length||removeSpaceData.size),self._DATAProtocolHandler(peerId,self._base64ToBlob(removeSpaceData),self.DATA_TRANSFER_DATA_TYPE.BINARY_STRING,removeSpaceData.length||removeSpaceData.size||0,channelProp)}}else{if(!(isStreamChunk||transferId&&self._dataTransfers[transferId]&&self._dataTransfers[transferId].sessions[peerId]))return void log.warn([peerId,"RTCDataChannel",channelProp,"Discarded data chunk without session ->"],rawData);if(!isStreamChunk&&transferId&&self._dataTransfers[transferId].chunks[self._dataTransfers[transferId].sessions[peerId].ackN])return void log.warn([peerId,"RTCDataChannel",transferId,"Dropping data chunk "+(isStreamChunk?"":"@"+self._dataTransfers[transferId].sessions[peerId].ackN)+" as it has already been added ->"],rawData);if(rawData instanceof Blob)log.debug([peerId,"RTCDataChannel",channelProp,"Received blob data chunk "+(isStreamChunk?"":"@"+self._dataTransfers[transferId].sessions[peerId].ackN)+" with size ->"],rawData.size),self._DATAProtocolHandler(peerId,rawData,self.DATA_TRANSFER_DATA_TYPE.BLOB,rawData.size,channelProp);else{var byteArray=rawData,blob=null;if(rawData.constructor&&"Array"===rawData.constructor.name&&(byteArray=new Int8Array(rawData)),"IE"===AdapterJS.webrtcDetectedBrowser){if(window.BlobBuilder){var bb=new BlobBuilder;bb.append(rawData.constructor&&"ArrayBuffer"===rawData.constructor.name?byteArray:new Uint8Array(byteArray).buffer),blob=bb.getBlob()}}else blob=new Blob([byteArray]);log.debug([peerId,"RTCDataChannel",channelProp,"Received arraybuffer data chunk "+(isStreamChunk?"":"@"+self._dataTransfers[transferId].sessions[peerId].ackN)+" with size ->"],blob.size),self._DATAProtocolHandler(peerId,blob,self.DATA_TRANSFER_DATA_TYPE.ARRAY_BUFFER,blob.size,channelProp)}}}},Skylink.prototype._WRQProtocolHandler=function(peerId,data,channelProp){var self=this,transferId="main"===channelProp?data.transferId||null:channelProp,senderPeerId=data.sender||peerId;if(["fastBinaryStart","fastBinaryStop"].indexOf(data.dataType)>-1)if("fastBinaryStart"===data.dataType){transferId||(transferId="stream_"+peerId+"_"+(new Date).getTime()),self._dataStreams[transferId]={chunkSize:0,chunkType:"string"===data.chunkType?self.DATA_TRANSFER_DATA_TYPE.STRING:self._binaryChunkType,sessionChunkType:data.chunkType,isPrivate:!!data.isPrivate,isStringStream:"string"===data.chunkType,senderPeerId:senderPeerId,isUpload:!1},self._dataChannels[peerId][channelProp].streamId=transferId;self.once("dataChannelState",function(){},function(state,evtPeerId,channelName,channelType,error){if(!self._dataStreams[transferId])return!0;if(evtPeerId===peerId&&("main"===channelProp?channelType===self.DATA_CHANNEL_TYPE.MESSAGING:channelName===transferId&&channelType===self.DATA_CHANNEL_TYPE.DATA)&&[self.DATA_CHANNEL_STATE.ERROR,self.DATA_CHANNEL_STATE.CLOSED].indexOf(state)>-1){var updatedError=new Error(error&&error.message?error.message:'Failed data transfer as datachannel state is "'+state+'".');return self._trigger("dataStreamState",self.DATA_STREAM_STATE.ERROR,transferId,senderPeerId,{chunk:null,chunkSize:0,chunkType:self._dataStreams[transferId].chunkType,isPrivate:self._dataStreams[transferId].isPrivate,isStringStream:"string"===self._dataStreams[transferId].sessionChunkType,senderPeerId:senderPeerId},updatedError),!0}}),self._trigger("dataStreamState",self.DATA_STREAM_STATE.RECEIVING_STARTED,transferId,senderPeerId,{chunk:null,chunkSize:0,chunkType:self._dataStreams[transferId].chunkType,isPrivate:self._dataStreams[transferId].isPrivate,isStringStream:"string"===self._dataStreams[transferId].sessionChunkType,senderPeerId:senderPeerId},null),self._trigger("incomingDataStreamStarted",transferId,senderPeerId,{chunkSize:0,chunkType:self._dataStreams[transferId].chunkType,isPrivate:self._dataStreams[transferId].isPrivate,isStringStream:"string"===self._dataStreams[transferId].sessionChunkType,senderPeerId:senderPeerId},!1)}else transferId=self._dataChannels[peerId][channelProp].streamId,self._dataStreams[transferId]&&!self._dataStreams[transferId].isUpload&&(self._trigger("dataStreamState",self.DATA_STREAM_STATE.RECEIVING_STOPPED,transferId,senderPeerId,{chunk:null,chunkSize:0,chunkType:self._dataStreams[transferId].chunkType,isPrivate:self._dataStreams[transferId].isPrivate,isStringStream:"string"===self._dataStreams[transferId].sessionChunkType,senderPeerId:senderPeerId},null),self._trigger("incomingDataStreamStopped",transferId,senderPeerId,{chunkSize:0,chunkType:self._dataStreams[transferId].chunkType,isPrivate:self._dataStreams[transferId].isPrivate,isStringStream:"string"===self._dataStreams[transferId].sessionChunkType,senderPeerId:senderPeerId},!1),self._dataChannels[peerId][channelProp].streamId=null,"main"!==channelProp&&self._closeDataChannel(peerId,channelProp),delete self._dataStreams[transferId]);else transferId||(transferId="transfer_"+peerId+"_"+(new Date).getTime()),self._dataTransfers[transferId]={name:data.name||transferId,size:data.size||0,chunkSize:data.chunkSize,originalSize:data.originalSize||0,timeout:data.timeout||60,isPrivate:!!data.isPrivate,senderPeerId:data.sender||peerId,dataType:self.DATA_TRANSFER_SESSION_TYPE.BLOB,mimeType:data.mimeType||null,chunkType:self.DATA_TRANSFER_DATA_TYPE.BINARY_STRING,direction:self.DATA_TRANSFER_TYPE.DOWNLOAD,chunks:[],sessions:{},sessionType:data.dataType||"blob",sessionChunkType:data.chunkType||"string"},"data"===self._dataTransfers[transferId].sessionType&&"string"===self._dataTransfers[transferId].sessionChunkType?(self._dataTransfers[transferId].dataType=self.DATA_TRANSFER_SESSION_TYPE.DATA_URL,self._dataTransfers[transferId].chunkType=self.DATA_TRANSFER_DATA_TYPE.STRING):"blob"===self._dataTransfers[transferId].sessionType&&"binary"===self._dataTransfers[transferId].sessionChunkType&&(self._dataTransfers[transferId].chunkType=self._binaryChunkType),self._dataChannels[peerId][channelProp].transferId=transferId,self._dataTransfers[transferId].sessions[peerId]={timer:null,ackN:0,receivedSize:0},self._trigger("incomingDataRequest",transferId,senderPeerId,self._getTransferInfo(transferId,peerId,!1,!1,!1),!1),self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.UPLOAD_REQUEST,transferId,senderPeerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),null)},Skylink.prototype._ACKProtocolHandler=function(peerId,data,channelProp){var self=this,transferId=channelProp,senderPeerId=data.sender||peerId;"main"===channelProp&&(transferId=self._dataChannels[peerId].main.transferId),self._handleDataTransferTimeoutForPeer(transferId,peerId,!1);var emitEventFn=function(cb){if("MCU"===peerId){if(!self._dataTransfers[transferId].peers[channelProp])return void log.warn([peerId,"RTCDataChannel",channelProp,"Dropping triggering of ACK event as Peers list does not exists"]);for(var evtPeerId in self._dataTransfers[transferId].peers[channelProp])self._dataTransfers[transferId].peers[channelProp].hasOwnProperty(evtPeerId)&&self._dataTransfers[transferId].peers[channelProp][evtPeerId]&&cb(evtPeerId)}else cb(senderPeerId)};if(data.ackN>-1){if(0===data.ackN)emitEventFn(function(evtPeerId){self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.UPLOAD_STARTED,transferId,evtPeerId,self._getTransferInfo(transferId,peerId,!0,!1,0),null)});else if(self._dataTransfers[transferId].enforceBSPeers.indexOf(peerId)>-1?data.ackN===self._dataTransfers[transferId].enforceBSInfo.chunks.length:data.ackN===self._dataTransfers[transferId].chunks.length)return self._dataTransfers[transferId].sessions[peerId].ackN=data.ackN,emitEventFn(function(evtPeerId){self._trigger("incomingData",self._getTransferData(transferId),transferId,evtPeerId,self._getTransferInfo(transferId,peerId,!1,!1,!1),!0),self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.UPLOAD_COMPLETED,transferId,evtPeerId,self._getTransferInfo(transferId,peerId,!0,!1,100),null)}),void(self._dataChannels[peerId][channelProp]&&(self._dataChannels[peerId][channelProp].transferId=null,"main"!==channelProp&&self._closeDataChannel(peerId,channelProp)));var uploadFn=function(chunk){self._sendMessageToDataChannel(peerId,chunk,channelProp,!0),data.ackN<self._dataTransfers[transferId].chunks.length&&emitEventFn(function(evtPeerId){self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.UPLOADING,transferId,evtPeerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),null)}),self._handleDataTransferTimeoutForPeer(transferId,peerId,!0)};self._dataTransfers[transferId].sessions[peerId].ackN=data.ackN,self._dataTransfers[transferId].enforceBSPeers.indexOf(peerId)>-1?self._blobToBase64(self._dataTransfers[transferId].enforceBSInfo.chunks[data.ackN],uploadFn):self._dataTransfers[transferId].chunkType===self.DATA_TRANSFER_DATA_TYPE.BINARY_STRING?self._blobToBase64(self._dataTransfers[transferId].chunks[data.ackN],uploadFn):self._dataTransfers[transferId].chunkType===self.DATA_TRANSFER_DATA_TYPE.ARRAY_BUFFER?self._blobToArrayBuffer(self._dataTransfers[transferId].chunks[data.ackN],uploadFn):uploadFn(self._dataTransfers[transferId].chunks[data.ackN])}else self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.REJECTED,transferId,senderPeerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),{message:new Error("Data transfer terminated as Peer has rejected data transfer request"),transferType:self.DATA_TRANSFER_TYPE.UPLOAD})},Skylink.prototype._MESSAGEProtocolHandler=function(peerId,data,channelProp){var senderPeerId=data.sender||peerId;log.log([senderPeerId,"RTCDataChannel",channelProp,"Received P2P message from peer:"],data),this._trigger("incomingMessage",{content:data.data,isPrivate:data.isPrivate,isDataChannel:!0,targetPeerId:this._user.sid,senderPeerId:senderPeerId},senderPeerId,this.getPeerInfo(senderPeerId),!1)},Skylink.prototype._ERRORProtocolHandler=function(peerId,data,channelProp){var self=this,transferId=channelProp,senderPeerId=data.sender||peerId;"main"===channelProp&&(transferId=self._dataChannels[peerId].main.transferId),self._handleDataTransferTimeoutForPeer(transferId,peerId,!1);var emitEventFn=function(cb){if("MCU"===peerId){if(!self._dataTransfers[transferId].peers[channelProp])return void log.warn([peerId,"RTCDataChannel",channelProp,"Dropping triggering of ERROR event as Peers list does not exists"]);for(var evtPeerId in self._dataTransfers[transferId].peers[channelProp])self._dataTransfers[transferId].peers[channelProp].hasOwnProperty(evtPeerId)&&self._dataTransfers[transferId].peers[channelProp][evtPeerId]&&cb(evtPeerId)}else cb(senderPeerId)};log.error([peerId,"RTCDataChannel",channelProp,"Received an error from peer ->"],data),emitEventFn(function(evtPeerId){self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.ERROR,transferId,evtPeerId,self._getTransferInfo(transferId,peerID,!0,!1,!1),{message:new Error(data.content),transferType:self._dataTransfers[transferId].direction})})},Skylink.prototype._CANCELProtocolHandler=function(peerId,data,channelProp){var self=this,transferId=channelProp;"main"===channelProp&&(transferId=self._dataChannels[peerId].main.transferId),self._handleDataTransferTimeoutForPeer(transferId,peerId,!1);var emitEventFn=function(cb){if("MCU"===peerId){if(!self._dataTransfers[transferId].peers[channelProp])return void log.warn([peerId,"RTCDataChannel",channelProp,"Dropping triggering of CANCEL event as Peers list does not exists"]);for(var evtPeerId in self._dataTransfers[transferId].peers[channelProp])self._dataTransfers[transferId].peers[channelProp].hasOwnProperty(evtPeerId)&&self._dataTransfers[transferId].peers[channelProp][evtPeerId]&&cb(evtPeerId)}else cb(peerId)};log.error([peerId,"RTCDataChannel",channelProp,"Received data transfer termination from peer ->"],data),emitEventFn(function(evtPeerId){self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.CANCEL,transferId,evtPeerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),{message:new Error(data.content||"Peer has terminated data transfer."),transferType:self._dataTransfers[transferId].direction})})},Skylink.prototype._DATAProtocolHandler=function(peerId,chunk,chunkType,chunkSize,channelProp){var self=this,transferId=channelProp,senderPeerId=peerId;if(self._dataChannels[peerId]&&self._dataChannels[peerId][channelProp]){var streamId=self._dataChannels[peerId][channelProp].streamId;if(streamId&&self._dataStreams[streamId]&&("string"==typeof chunk&&"string"===self._dataStreams[streamId].sessionChunkType||chunk instanceof Blob&&"binary"===self._dataStreams[streamId].sessionChunkType))return senderPeerId=self._dataStreams[streamId].senderPeerId||peerId,self._trigger("dataStreamState",self.DATA_STREAM_STATE.RECEIVED,streamId,senderPeerId,{chunk:chunk,chunkSize:chunkSize,chunkType:chunkType,isPrivate:self._dataStreams[streamId].sessionChunkType.isPrivate,isStringStream:"string"===self._dataStreams[streamId].sessionChunkType,senderPeerId:senderPeerId},null),void self._trigger("incomingDataStream",chunk,transferId,senderPeerId,{chunkSize:chunkSize,chunkType:chunkType,isPrivate:self._dataStreams[streamId].sessionChunkType.isPrivate,isStringStream:"string"===self._dataStreams[streamId].sessionChunkType,senderPeerId:senderPeerId},!1);if("main"===channelProp&&(transferId=self._dataChannels[peerId].main.transferId),self._dataTransfers[transferId].senderPeerId&&(senderPeerId=self._dataTransfers[transferId].senderPeerId),self._handleDataTransferTimeoutForPeer(transferId,peerId,!1),self._dataTransfers[transferId].chunkType=chunkType,self._dataTransfers[transferId].sessions[peerId].receivedSize+=chunkSize,self._dataTransfers[transferId].chunks[self._dataTransfers[transferId].sessions[peerId].ackN]=chunk,self._dataTransfers[transferId].sessions[peerId].receivedSize>=self._dataTransfers[transferId].size)return log.log([peerId,"RTCDataChannel",channelProp,"Data transfer has been completed. Computed size ->"],self._dataTransfers[transferId].sessions[peerId].receivedSize),self._sendMessageToDataChannel(peerId,{type:self._DC_PROTOCOL_TYPE.ACK,sender:self._user.sid,ackN:self._dataTransfers[transferId].sessions[peerId].ackN+1},channelProp),self._trigger("incomingData",self._getTransferData(transferId),transferId,senderPeerId,self._getTransferInfo(transferId,peerId,!1,!1,!1),null),void self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.DOWNLOAD_COMPLETED,transferId,senderPeerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),null);self._dataTransfers[transferId].sessions[peerId].ackN+=1,self._sendMessageToDataChannel(peerId,{type:self._DC_PROTOCOL_TYPE.ACK,sender:self._user.sid,ackN:self._dataTransfers[transferId].sessions[peerId].ackN},channelProp),self._handleDataTransferTimeoutForPeer(transferId,peerId,!0),self._trigger("dataTransferState",self.DATA_TRANSFER_STATE.DOWNLOADING,transferId,senderPeerId,self._getTransferInfo(transferId,peerId,!0,!1,!1),null)}},Skylink.prototype._onIceCandidate=function(targetMid,candidate){var self=this,pc=self._peerConnections[targetMid];if(!pc)return void log.warn([targetMid,"RTCIceCandidate",null,"Ignoring of ICE candidate event as Peer connection does not exists ->"],candidate);if(candidate.candidate){pc.gathering||(log.log([targetMid,"RTCIceCandidate",null,"ICE gathering has started."]),pc.gathering=!0,pc.gathered=!1,self._handleIceGatheringStats("gathering",targetMid,!1),self._trigger("candidateGenerationState",self.CANDIDATE_GENERATION_STATE.GATHERING,targetMid));var candidateType=candidate.candidate.split(" ")[7];if(log.debug([targetMid,"RTCIceCandidate",candidateType,"Generated ICE candidate ->"],candidate),"endOfCandidates"===candidateType||!(self._peerConnections[targetMid]&&self._peerConnections[targetMid].localDescription&&self._peerConnections[targetMid].localDescription.sdp&&self._peerConnections[targetMid].localDescription.sdp.indexOf("\r\na=mid:"+candidate.sdpMid+"\r\n")>-1))return log.warn([targetMid,"RTCIceCandidate",candidateType,"Dropping of sending ICE candidate end-of-candidates signal or unused ICE candidates to prevent errors ->"],candidate),void self._handleIceCandidateStats("dropped",targetMid,null,candidate);if(self._initOptions.filterCandidatesType[candidateType]){if(!self._hasMCU||!self._initOptions.forceTURN)return log.warn([targetMid,"RTCIceCandidate",candidateType,"Dropping of sending ICE candidate as it matches ICE candidate filtering flag ->"],candidate),void self._handleIceCandidateStats("dropped",targetMid,null,candidate);log.warn([targetMid,"RTCIceCandidate",candidateType,"Not dropping of sending ICE candidate as TURN connections are enforced as MCU is present (and act as a TURN itself) so filtering of ICE candidate flags are not honoured ->"],candidate)}if(self._gatheredCandidates[targetMid]||(self._gatheredCandidates[targetMid]={sending:{host:[],srflx:[],relay:[]},receiving:{host:[],srflx:[],relay:[]}}),self._gatheredCandidates[targetMid].sending[candidateType].push({sdpMid:candidate.sdpMid,sdpMLineIndex:candidate.sdpMLineIndex,candidate:candidate.candidate}),!self._initOptions.enableIceTrickle)return log.warn([targetMid,"RTCIceCandidate",candidateType,"Dropping of sending ICE candidate as trickle ICE is disabled ->"],candidate),void self._handleIceCandidateStats("non_trickle",targetMid,null,candidate);log.debug([targetMid,"RTCIceCandidate",candidateType,"Sending ICE candidate ->"],candidate),self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.CANDIDATE,label:candidate.sdpMLineIndex,id:candidate.sdpMid,candidate:candidate.candidate,mid:self._user.sid,target:targetMid,rid:self._room.id}),self._handleIceCandidateStats("received",targetMid,null,candidate)}else{if(log.log([targetMid,"RTCIceCandidate",null,"ICE gathering has completed."]),pc.gathered)return;if(pc.gathering=!1,pc.gathered=!0,self._handleIceGatheringStats("complete",targetMid,!1),self._trigger("candidateGenerationState",self.CANDIDATE_GENERATION_STATE.COMPLETED,targetMid),self._initOptions.enableIceTrickle){if(self._gatheredCandidates[targetMid]){var sendEndOfCandidates=function(){self._gatheredCandidates[targetMid]&&self._gatheredCandidates[targetMid].sending&&self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.END_OF_CANDIDATES,noOfExpectedCandidates:self._gatheredCandidates[targetMid].sending.srflx.length+self._gatheredCandidates[targetMid].sending.host.length+self._gatheredCandidates[targetMid].sending.relay.length,mid:self._user.sid,target:targetMid,rid:self._room.id})};setTimeout(sendEndOfCandidates,6e3)}}else{var sessionDescription=self._peerConnections[targetMid].localDescription;if(!(sessionDescription&&sessionDescription.type&&sessionDescription.sdp))return void log.warn([targetMid,"RTCSessionDescription",null,"Not sending any session description after ICE gathering completed as it is not present."]);self._sendChannelMessage({type:sessionDescription.type,sdp:self._renderSDPOutput(targetMid,sessionDescription),mid:self._user.sid,userInfo:self._getUserInfo(targetMid),target:targetMid,rid:self._room.id})}}},Skylink.prototype._addIceCandidateToQueue=function(targetMid,canId,candidate){var candidateType=candidate.candidate.split(" ")[7];log.debug([targetMid,"RTCIceCandidate",canId+":"+candidateType,"Buffering ICE candidate."]),this._handleIceCandidateStats("buffered",targetMid,canId,candidate),this._trigger("candidateProcessingState",this.CANDIDATE_PROCESSING_STATE.BUFFERED,targetMid,canId,candidateType,{candidate:candidate.candidate,sdpMid:candidate.sdpMid,sdpMLineIndex:candidate.sdpMLineIndex},null),this._peerCandidatesQueue[targetMid]=this._peerCandidatesQueue[targetMid]||[],this._peerCandidatesQueue[targetMid].push([canId,candidate])},Skylink.prototype._addIceCandidateFromQueue=function(targetMid){this._peerCandidatesQueue[targetMid]=this._peerCandidatesQueue[targetMid]||[];for(var i=0;i<this._peerCandidatesQueue[targetMid].length;i++){var canArray=this._peerCandidatesQueue[targetMid][i];if(canArray){var candidateType=canArray[1].candidate.split(" ")[7];log.debug([targetMid,"RTCIceCandidate",canArray[0]+":"+candidateType,"Adding buffered ICE candidate."]),this._addIceCandidate(targetMid,canArray[0],canArray[1])}else if(this._peerConnections[targetMid]&&this._peerConnections[targetMid].signalingState!==this.PEER_CONNECTION_STATE.CLOSED&&AdapterJS&&!this._isLowerThanVersion(AdapterJS.VERSION,"0.14.0"))try{this._peerConnections[targetMid].addIceCandidate(null),log.debug([targetMid,"RTCPeerConnection",null,"Signaling of end-of-candidates remote ICE gathering."])}catch(error){log.error([targetMid,"RTCPeerConnection",null,"Failed signaling of end-of-candidates remote ICE gathering."])}}delete this._peerCandidatesQueue[targetMid],this._signalingEndOfCandidates(targetMid)},Skylink.prototype._addIceCandidate=function(targetMid,canId,candidate){var self=this,candidateType=candidate.candidate.split(" ")[7],onSuccessCbFn=function(){log.log([targetMid,"RTCIceCandidate",canId+":"+candidateType,"Added ICE candidate successfully."]),self._handleIceCandidateStats("process_success",targetMid,canId,candidate),self._trigger("candidateProcessingState",self.CANDIDATE_PROCESSING_STATE.PROCESS_SUCCESS,targetMid,canId,candidateType,{candidate:candidate.candidate,sdpMid:candidate.sdpMid,sdpMLineIndex:candidate.sdpMLineIndex},null)},onErrorCbFn=function(error){log.error([targetMid,"RTCIceCandidate",canId+":"+candidateType,"Failed adding ICE candidate ->"],error),self._handleIceCandidateStats("process_failed",targetMid,canId,candidate,error),self._trigger("candidateProcessingState",self.CANDIDATE_PROCESSING_STATE.PROCESS_ERROR,targetMid,canId,candidateType,{candidate:candidate.candidate,sdpMid:candidate.sdpMid,sdpMLineIndex:candidate.sdpMLineIndex},error)};if(log.debug([targetMid,"RTCIceCandidate",canId+":"+candidateType,"Adding ICE candidate."]),self._handleIceCandidateStats("processing",targetMid,canId,candidate),self._trigger("candidateProcessingState",self.CANDIDATE_PROCESSING_STATE.PROCESSING,targetMid,canId,candidateType,{candidate:candidate.candidate,sdpMid:candidate.sdpMid,sdpMLineIndex:candidate.sdpMLineIndex},null),!(self._peerConnections[targetMid]&&self._peerConnections[targetMid].signalingState!==self.PEER_CONNECTION_STATE.CLOSED&&self._peerConnections[targetMid].remoteDescription&&self._peerConnections[targetMid].remoteDescription.sdp&&self._peerConnections[targetMid].remoteDescription.sdp.indexOf("\r\na=mid:"+candidate.sdpMid+"\r\n")>-1))return log.warn([targetMid,"RTCIceCandidate",canId+":"+candidateType,"Dropping ICE candidate as Peer connection does not exists or is closed"]),self._handleIceCandidateStats("process_failed",targetMid,canId,candidate,"Peer connection does not exist"),void self._trigger("candidateProcessingState",self.CANDIDATE_PROCESSING_STATE.DROPPED,targetMid,canId,candidateType,{candidate:candidate.candidate,sdpMid:candidate.sdpMid,sdpMLineIndex:candidate.sdpMLineIndex},new Error("Failed processing ICE candidate as Peer connection does not exists or is closed."));try{self._peerConnections[targetMid].addIceCandidate(candidate,onSuccessCbFn,onErrorCbFn)}catch(error){onErrorCbFn(error)}},Skylink.prototype._setIceServers=function(passedIceServers){var self=this,iceServerName=null,iceServerProtocol="stun",iceServerPorts={udp:[3478,19302,19303,19304],tcp:[80,443],both:[19305,19306,19307,19308]},iceServers=[{urls:[]},{urls:[]}];return passedIceServers.forEach(function(server){
if(0===server.url.indexOf("stun:"))server.url.indexOf("temasys")>0?iceServerName=(server.url.split(":")[1]||"").split("?")[0]||null:iceServers[0].urls.push(server.url);else if(0===server.url.indexOf("turn:")&&server.url.indexOf("@")>0&&server.credential&&!iceServers[1].username&&!iceServers[1].credential){var parts=server.url.split(":"),urlParts=(parts[1]||"").split("@");iceServerName=(urlParts[1]||"").split("?")[0],iceServers[1].username=urlParts[0],iceServers[1].credential=server.credential,iceServerProtocol="turn"}}),self._initOptions.iceServer?iceServers=[{urls:self._initOptions.iceServer.urls,username:iceServers[1].username||null,credential:iceServers[1].credential||null}]:(iceServerName=iceServerName||"turn.temasys.io","turn"!==iceServerProtocol||self._initOptions.enableTURNServer||self._initOptions.forceTURNSSL?"edge"===AdapterJS.webrtcDetectedBrowser?(iceServerPorts.udp=[3478],iceServerPorts.tcp=[],iceServerPorts.both=[],iceServerProtocol="turn"):self._initOptions.forceTURNSSL?"firefox"===AdapterJS.webrtcDetectedBrowser&&AdapterJS.webrtcDetectedVersion<53?(iceServerPorts.udp=[],iceServerPorts.tcp=[443],iceServerPorts.both=[],iceServerProtocol="turn"):(iceServerPorts.udp=[],iceServerProtocol="turns"):"firefox"===AdapterJS.webrtcDetectedBrowser&&(iceServerPorts.udp=[3478],iceServerPorts.tcp=[443,80]):iceServerProtocol="stun",self._initOptions.TURNServerTransport!==self.TURN_TRANSPORT.UDP||self._initOptions.forceTURNSSL?self._initOptions.TURNServerTransport===self.TURN_TRANSPORT.TCP?(iceServerPorts.tcp=iceServerPorts.tcp.concat(iceServerPorts.both),iceServerPorts.udp=[],iceServerPorts.both=[]):self._initOptions.TURNServerTransport===self.TURN_TRANSPORT.NONE&&(iceServerPorts.tcp=[],iceServerPorts.udp=[]):(iceServerPorts.udp=iceServerPorts.udp.concat(iceServerPorts.both),iceServerPorts.tcp=[],iceServerPorts.both=[]),"stun"===iceServerProtocol&&(iceServerPorts.tcp=[]),"stun"!==iceServerProtocol||self._initOptions.enableSTUNServer?(iceServerPorts.tcp.forEach(function(tcpPort){iceServers[1].urls.push(iceServerProtocol+":"+iceServerName+":"+tcpPort+"?transport=tcp")}),iceServerPorts.udp.forEach(function(udpPort){iceServers[1].urls.push(iceServerProtocol+":"+iceServerName+":"+udpPort+"?transport=udp")}),iceServerPorts.both.forEach(function(bothPort){iceServers[1].urls.push(iceServerProtocol+":"+iceServerName+":"+bothPort)}),self._initOptions.usePublicSTUN||iceServers.splice(0,1)):iceServers=[]),log.log("Output iceServers configuration:",iceServers),{iceServers:iceServers}},Skylink.prototype.refreshConnection=function(targetPeerId,iceRestart,options,callback){var self=this,listOfPeers=Object.keys(self._peerConnections),doIceRestart=!1,bwOptions={};Array.isArray(targetPeerId)?listOfPeers=targetPeerId:"string"==typeof targetPeerId?listOfPeers=[targetPeerId]:"boolean"==typeof targetPeerId?doIceRestart=targetPeerId:targetPeerId&&"object"==typeof targetPeerId?bwOptions=targetPeerId:"function"==typeof targetPeerId&&(callback=targetPeerId),"boolean"==typeof iceRestart?doIceRestart=iceRestart:iceRestart&&"object"==typeof iceRestart?bwOptions=iceRestart:"function"==typeof iceRestart&&(callback=iceRestart),options&&"object"==typeof options?bwOptions=options:"function"==typeof options&&(callback=options);var emitErrorForPeersFn=function(error){if(log.error(error),"function"==typeof callback){var listOfPeerErrors={};if(0===listOfPeers.length)listOfPeerErrors.self=new Error(error);else for(var i=0;i<listOfPeers.length;i++)listOfPeerErrors[listOfPeers[i]]=new Error(error);callback({refreshErrors:listOfPeerRestartErrors,listOfPeers:listOfPeers},null)}};return 0!==listOfPeers.length||self._hasMCU&&!self._initOptions.mcuUseRenegoRestart?"edge"===AdapterJS.webrtcDetectedBrowser?void emitErrorForPeersFn("Edge browser currently does not support renegotiation."):void self._throttle(function(runFn){if(!runFn&&self._hasMCU&&!self._initOptions.mcuUseRenegoRestart)return void(self._initOptions.throttlingShouldThrowError&&emitErrorForPeersFn("Unable to run as throttle interval has not reached ("+self._initOptions.throttleIntervals.refreshConnection+"ms)."));self._refreshPeerConnection(listOfPeers,doIceRestart,bwOptions,callback)},"refreshConnection",self._initOptions.throttleIntervals.refreshConnection):void emitErrorForPeersFn("There is currently no peer connections to restart")},Skylink.prototype._refreshPeerConnection=function(listOfPeers,doIceRestart,bwOptions,callback){var self=this,listOfPeerRestarts=[],error="",listOfPeerRestartErrors={},listOfPeersSettings={},refreshSinglePeerCallback=function(peerId){return function(error){-1===listOfPeerRestarts.indexOf(peerId)&&(error?(log.error([peerId,"RTCPeerConnection",null,"Failed restarting for peer"],error),listOfPeerRestartErrors[peerId]=error):listOfPeersSettings[peerId]={iceRestart:!self._hasMCU&&self._peerInformations[peerId]&&self._peerInformations[peerId].config&&self._peerInformations[peerId].config.enableIceRestart&&self._enableIceRestart&&doIceRestart,customSettings:self.getPeersCustomSettings()[peerId]||{}},listOfPeerRestarts.push(peerId)),listOfPeerRestarts.length===listOfPeers.length&&"function"==typeof callback&&(log.log([null,"PeerConnection",null,"Invoked all peers to restart. Firing callback"]),Object.keys(listOfPeerRestartErrors).length>0?callback({refreshErrors:listOfPeerRestartErrors,listOfPeers:listOfPeers,refreshSettings:listOfPeersSettings},null):callback(null,{listOfPeers:listOfPeers,refreshSettings:listOfPeersSettings}))}},refreshSinglePeer=function(peerId,peerCallback){if(!self._peerConnections[peerId])return error="There is currently no existing peer connection made with the peer. Unable to restart connection",log.error([peerId,null,null,error]),void peerCallback(error);log.log([peerId,"PeerConnection",null,"Restarting peer connection"]),self._restartPeerConnection(peerId,doIceRestart,bwOptions,peerCallback)};if(self._hasMCU)self._restartMCUConnection(callback,doIceRestart,bwOptions);else{var i;for(i=0;i<listOfPeers.length;i++){var peerId=listOfPeers[i];Object.keys(self._peerConnections).indexOf(peerId)>-1?refreshSinglePeer(peerId,refreshSinglePeerCallback(peerId)):(error="Peer connection with peer does not exists. Unable to restart",log.error([peerId,"PeerConnection",null,error]),refreshSinglePeerCallback(peerId)(error))}}},Skylink.prototype.getConnectionStatus=function(targetPeerId,callback){var self=this,listOfPeers=Object.keys(self._peerConnections),listOfPeerStats={},listOfPeerErrors={};if(Array.isArray(targetPeerId)?listOfPeers=targetPeerId:"string"==typeof targetPeerId&&targetPeerId?listOfPeers=[targetPeerId]:"function"==typeof targetPeerId&&(callback=targetPeerId,targetPeerId=void 0),0===listOfPeers.length)return listOfPeerErrors.self=new Error("There is currently no peer connections to retrieve connection status"),log.error([null,"RTCStatsReport",null,"Retrieving request failure ->"],listOfPeerErrors.self),void("function"==typeof callback&&callback({listOfPeers:listOfPeers,retrievalErrors:listOfPeerErrors,connectionStats:listOfPeerStats},null));"edge"===AdapterJS.webrtcDetectedBrowser&&log.warn("Edge browser does not have well support for stats.");for(var completedTaskCounter=[],checkCompletedFn=function(peerId){-1===completedTaskCounter.indexOf(peerId)&&completedTaskCounter.push(peerId),completedTaskCounter.length===listOfPeers.length&&"function"==typeof callback&&(Object.keys(listOfPeerErrors).length>0?callback({listOfPeers:listOfPeers,retrievalErrors:listOfPeerErrors,connectionStats:listOfPeerStats},null):callback(null,{listOfPeers:listOfPeers,connectionStats:listOfPeerStats}))},statsFn=function(peerId){var retrieveFn=function(firstRetrieval,nextCb){return function(err,result){if(err)return log.error([peerId,"RTCStatsReport",null,"Retrieval failure ->"],error),listOfPeerErrors[peerId]=error,self._trigger("getConnectionStatusStateChange",self.GET_CONNECTION_STATUS_STATE.RETRIEVE_ERROR,peerId,null,error),checkCompletedFn(peerId),void(firstRetrieval&&delete self._peerStats[peerId]);firstRetrieval?nextCb():(listOfPeerStats[peerId]=result,self._trigger("getConnectionStatusStateChange",self.GET_CONNECTION_STATUS_STATE.RETRIEVE_SUCCESS,peerId,listOfPeerStats[peerId],null),checkCompletedFn(peerId))}};if(!self._peerStats[peerId])return self._peerStats[peerId]={},log.debug([peerId,"RTCStatsReport",null,"Retrieving first report to tabulate results"]),void self._retrieveStats(peerId,retrieveFn(!0,function(){self._retrieveStats(peerId,retrieveFn())}),!0);self._retrieveStats(peerId,retrieveFn())},i=0;i<listOfPeers.length;i++){var peerId=listOfPeers[i];self._trigger("getConnectionStatusStateChange",self.GET_CONNECTION_STATUS_STATE.RETRIEVING,peerId,null,null),self._peerConnections.hasOwnProperty(peerId)&&self._peerConnections[peerId]?statsFn(peerId):(listOfPeerErrors[peerId]=new Error("The peer connection object does not exists"),log.error([peerId,"RTCStatsReport",null,"Retrieval failure ->"],listOfPeerErrors[peerId]),self._trigger("getConnectionStatusStateChange",self.GET_CONNECTION_STATUS_STATE.RETRIEVE_ERROR,peerId,null,listOfPeerErrors[peerId]),checkCompletedFn(peerId))}},Skylink.prototype._retrieveStats=function(peerId,callback,beSilentOnLogs,isAutoBwStats){var self=this,pc=self._peerConnections[peerId],output={raw:{},connection:{},audio:{sending:{},receiving:{}},video:{sending:{},receiving:{}},selectedCandidate:{local:{},remote:{},consentResponses:{},consentRequests:{},responses:{},requests:{}},certificate:{}};if(!self._peerStats[peerId]&&!isAutoBwStats)return callback(new Error("No stats initiated yet."));if(!pc)return callback(new Error("Peer connection is not initialised"));"edge"!==AdapterJS.webrtcDetectedBrowser&&"AppleWebKit"!==AdapterJS.webrtcDetectedType||log.warn("Current connection stats may not be complete as it is in beta"),output.connection.iceConnectionState=pc.iceConnectionState,output.connection.iceGatheringState=pc.iceGatheringState,output.connection.signalingState=pc.signalingState,output.connection.remoteDescription={type:pc.remoteDescription&&pc.remoteDescription.type||"",sdp:pc.remoteDescription&&pc.remoteDescription.sdp||""},output.connection.localDescription={type:pc.localDescription&&pc.localDescription.type||"",sdp:pc.localDescription&&pc.localDescription.sdp||""},output.connection.candidates={sending:self._getSDPICECandidates(peerId,pc.localDescription,beSilentOnLogs),receiving:self._getSDPICECandidates(peerId,pc.remoteDescription,beSilentOnLogs)},output.connection.dataChannels={},output.connection.constraints=self._peerConnStatus[peerId]?self._peerConnStatus[peerId].constraints:null,output.connection.optional=self._peerConnStatus[peerId]?self._peerConnStatus[peerId].optional:null,output.connection.sdpConstraints=self._peerConnStatus[peerId]?self._peerConnStatus[peerId].sdpConstraints:null,output.audio.sending.codec=self._getSDPSelectedCodec(peerId,pc.remoteDescription,"audio",beSilentOnLogs),output.video.sending.codec=self._getSDPSelectedCodec(peerId,pc.remoteDescription,"video",beSilentOnLogs),output.audio.receiving.codec=self._getSDPSelectedCodec(peerId,pc.localDescription,"audio",beSilentOnLogs),output.video.receiving.codec=self._getSDPSelectedCodec(peerId,pc.localDescription,"video",beSilentOnLogs),output.certificate.local=self._getSDPFingerprint(peerId,pc.localDescription,beSilentOnLogs),output.certificate.remote=self._getSDPFingerprint(peerId,pc.remoteDescription,beSilentOnLogs);var inboundSSRCs=self._getSDPMediaSSRC(peerId,pc.remoteDescription,beSilentOnLogs);output.audio.receiving.ssrc=inboundSSRCs.audio,output.video.receiving.ssrc=inboundSSRCs.video;var outboundSSRCs=self._getSDPMediaSSRC(peerId,pc.localDescription,beSilentOnLogs);output.audio.sending.ssrc=outboundSSRCs.audio,output.video.sending.ssrc=outboundSSRCs.video,Object.keys(self._dataChannels[peerId]||{}).forEach(function(prop){var channel=self._dataChannels[peerId][prop];output.connection.dataChannels[channel.channel.label]={label:channel.channel.label,readyState:channel.channel.readyState,channelType:self.DATA_CHANNEL_TYPE["main"===prop?"MESSAGING":"DATA"],currentTransferId:channel.transferId||null,currentStreamId:channel.streamId||null}});var certificateFn=function(item,prop){if(0===prop.indexOf("RTCCertificate_"))item.fingerprint===output.certificate.local.fingerprint?(output.certificate.local.derBase64=item.base64Certificate,output.certificate.local.fingerprintAlgorithm=item.fingerprintAlgorithm):item.fingerprint===output.certificate.remote.fingerprint&&(output.certificate.remote.derBase64=item.base64Certificate,output.certificate.remote.fingerprintAlgorithm=item.fingerprintAlgorithm);else if(0===prop.indexOf("ssrc_")&&item.transportId){var pairItem=output.raw[item.transportId]||{};output.certificate.srtpCipher=pairItem.srtpCipher,output.certificate.dtlsCipher=pairItem.dtlsCipher;var localCertItem=output.raw[pairItem.localCertificateId||""]||{};output.certificate.local.fingerprint=localCertItem.googFingerprint,output.certificate.local.fingerprintAlgorithm=localCertItem.googFingerprintAlgorithm,output.certificate.local.derBase64=localCertItem.googDerBase64;var remoteCertItem=output.raw[pairItem.remoteCertificateId||""]||{};output.certificate.remote.fingerprint=remoteCertItem.googFingerprint,output.certificate.remote.fingerprintAlgorithm=remoteCertItem.googFingerprintAlgorithm,output.certificate.remote.derBase64=remoteCertItem.googDerBase64}},candidatePairFn=function(item,prop){if(0===prop.indexOf("RTCIceCandidatePair_")){if("succeeded"!==item.state||output.selectedCandidate.nominated||item.prioirty<(output.selectedCandidate.priority||0))return;for(var prevStats=isAutoBwStats?self._peerBandwidth[peerId][prop]:self._peerStats[peerId][prop],sending=pc.localDescription&&pc.localDescription.sdp&&pc.localDescription.sdp.match(/a=candidate:.*\r\n/gi)||[],receiving=pc.remoteDescription&&pc.remoteDescription&&pc.remoteDescription.sdp.match(/a=candidate:.*\r\n/gi)||[],computePrioirtyFn=function(controller,controlled){return Math.pow(2,32)*Math.min(controller,controlled)+2*Math.max(controller,controlled)+(controller>controlled?1:0)},computeCanTypeFn=function(type){return"relay"===type?"relayed":"host"===type?"local":"srflx"===type?"serverreflexive":type},s=0;s<sending.length;s++)for(var sendCanParts=sending[s].split(" "),r=0;r<receiving.length;r++){var recvCanParts=receiving[r].split(" ");if((item.writable?computePrioirtyFn(parseInt(sendCanParts[3],10),parseInt(recvCanParts[3],10)):computePrioirtyFn(parseInt(recvCanParts[3],10),parseInt(sendCanParts[3],10)))===item.priority){output.selectedCandidate.local.ipAddress=sendCanParts[4],output.selectedCandidate.local.candidateType=sendCanParts[7],output.selectedCandidate.local.portNumber=parseInt(sendCanParts[5],10),output.selectedCandidate.local.transport=sendCanParts[2],output.selectedCandidate.local.priority=parseInt(sendCanParts[3],10),output.selectedCandidate.local.candidateType=computeCanTypeFn(sendCanParts[7]),output.selectedCandidate.remote.ipAddress=recvCanParts[4],output.selectedCandidate.remote.candidateType=recvCanParts[7],output.selectedCandidate.remote.portNumber=parseInt(recvCanParts[5],10),output.selectedCandidate.remote.transport=recvCanParts[2],output.selectedCandidate.remote.priority=parseInt(recvCanParts[3],10),output.selectedCandidate.remote.candidateType=computeCanTypeFn(recvCanParts[7]);break}}output.selectedCandidate.writable=item.writable,output.selectedCandidate.readable=item.readable,output.selectedCandidate.priority=item.priority,output.selectedCandidate.nominated=item.nominated;var rtt=parseInt(item.rtt||"0",10);output.selectedCandidate.totalRtt=rtt,output.selectedCandidate.rtt=self._parseConnectionStats(prevStats,item,"rtt");var consentResponsesReceived=parseInt(item.consentResponsesReceived||"0",10);output.selectedCandidate.consentResponses.totalReceived=consentResponsesReceived,output.selectedCandidate.consentResponses.received=self._parseConnectionStats(prevStats,item,"consentResponsesReceived");var consentResponsesSent=parseInt(item.consentResponsesSent||"0",10);output.selectedCandidate.consentResponses.totalSent=consentResponsesSent,output.selectedCandidate.consentResponses.sent=self._parseConnectionStats(prevStats,item,"consentResponsesSent");var responsesReceived=parseInt(item.responsesReceived||"0",10);output.selectedCandidate.responses.totalReceived=responsesReceived,output.selectedCandidate.responses.received=self._parseConnectionStats(prevStats,item,"responsesReceived");var responsesSent=parseInt(item.responsesSent||"0",10);output.selectedCandidate.responses.totalSent=responsesSent,output.selectedCandidate.responses.sent=self._parseConnectionStats(prevStats,item,"responsesSent")}else if("googCandidatePair"===item.type){var prevStats=isAutoBwStats?self._peerBandwidth[peerId][prop]:self._peerStats[peerId][prop];output.selectedCandidate.writable="true"===item.googWritable,output.selectedCandidate.readable="true"===item.googReadable;var rtt=parseInt(item.googRtt||"0",10);if(output.selectedCandidate.totalRtt=rtt,output.selectedCandidate.rtt=self._parseConnectionStats(prevStats,item,"rtt"),item.consentResponsesReceived){var consentResponsesReceived=parseInt(item.consentResponsesReceived||"0",10);output.selectedCandidate.consentResponses.totalReceived=consentResponsesReceived,output.selectedCandidate.consentResponses.received=self._parseConnectionStats(prevStats,item,"consentResponsesReceived")}if(item.consentResponsesSent){var consentResponsesSent=parseInt(item.consentResponsesSent||"0",10);output.selectedCandidate.consentResponses.totalSent=consentResponsesSent,output.selectedCandidate.consentResponses.sent=self._parseConnectionStats(prevStats,item,"consentResponsesSent")}if(item.responsesReceived){var responsesReceived=parseInt(item.responsesReceived||"0",10);output.selectedCandidate.responses.totalReceived=responsesReceived,output.selectedCandidate.responses.received=self._parseConnectionStats(prevStats,item,"responsesReceived")}if(item.responsesSent){var responsesSent=parseInt(item.responsesSent||"0",10);output.selectedCandidate.responses.totalSent=responsesSent,output.selectedCandidate.responses.sent=self._parseConnectionStats(prevStats,item,"responsesSent")}var localCanItem=output.raw[item.localCandidateId||""]||{};output.selectedCandidate.local.ipAddress=localCanItem.ipAddress,output.selectedCandidate.local.portNumber=parseInt(localCanItem.portNumber,10),output.selectedCandidate.local.priority=parseInt(localCanItem.priority,10),output.selectedCandidate.local.networkType=localCanItem.networkType,output.selectedCandidate.local.transport=localCanItem.transport,output.selectedCandidate.local.candidateType=localCanItem.candidateType;var remoteCanItem=output.raw[item.remoteCandidateId||""]||{};output.selectedCandidate.remote.ipAddress=remoteCanItem.ipAddress,output.selectedCandidate.remote.portNumber=parseInt(remoteCanItem.portNumber,10),output.selectedCandidate.remote.priority=parseInt(remoteCanItem.priority,10),output.selectedCandidate.remote.transport=remoteCanItem.transport,output.selectedCandidate.remote.candidateType=remoteCanItem.candidateType}else if("candidatepair"===item.type&&"succeeded"===item.state&&item.nominated){output.selectedCandidate.writable=item.writable,output.selectedCandidate.readable=item.readable;var localCanItem=output.raw[item.localCandidateId||""];output.selectedCandidate.local.ipAddress=localCanItem.ipAddress,output.selectedCandidate.local.portNumber=localCanItem.portNumber,output.selectedCandidate.local.transport=localCanItem.transport,output.selectedCandidate.local.candidateType=localCanItem.candidateType,output.selectedCandidate.local.turnMediaTransport=localCanItem.mozLocalTransport;var remoteCanItem=output.raw[item.remoteCandidateId||""];output.selectedCandidate.remote.ipAddress=remoteCanItem.ipAddress,output.selectedCandidate.remote.portNumber=remoteCanItem.portNumber,output.selectedCandidate.remote.transport=remoteCanItem.transport,output.selectedCandidate.remote.candidateType=remoteCanItem.candidateType}},codecsFn=function(item,prop){if(0===prop.indexOf("ssrc_")){var direction=prop.indexOf("_send")>0?"sending":"receiving";item.codecImplementationName="unknown"===item.codecImplementationName?null:item.codecImplementationName,output[item.mediaType][direction].codec.implementation=item.codecImplementationName||null,item.googCodecName="unknown"===item.googCodecName?null:item.googCodecName,output[item.mediaType][direction].codec.name=item.googCodecName||output[item.mediaType][direction].codec.name}},audioStatsFn=function(item,prop){var prevStats=isAutoBwStats?self._peerBandwidth[peerId][prop]:self._peerStats[peerId][prop];if(0===prop.indexOf("RTCInboundRTPAudioStream")){if(output.audio.receiving.fractionLost=item.fractionLost,output.audio.receiving.jitter=item.jitter,output.audio.receiving.totalBytes=item.bytesReceived,output.audio.receiving.bytes=self._parseConnectionStats(prevStats,item,"bytesReceived"),output.audio.receiving.totalPackets=item.packetsReceived,output.audio.receiving.packets=self._parseConnectionStats(prevStats,item,"packetsReceived"),output.audio.receiving.totalPacketsDiscarded=item.packetsDiscarded,output.audio.receiving.packetsDiscarded=self._parseConnectionStats(prevStats,item,"packetsDiscarded"),output.audio.receiving.totalPacketsLost=item.packetsLost,output.audio.receiving.packetsLost=self._parseConnectionStats(prevStats,item,"packetsLost"),output.audio.receiving.totalNacks=item.nackCount,output.audio.receiving.nacks=self._parseConnectionStats(prevStats,item,"nackCount"),"function"!=typeof pc.getReceivers)return}else if(0===prop.indexOf("RTCMediaStreamTrack_remote_audio_"))output.audio.receiving.audioOutputLevel=item.audioLevel;else if(0===prop.indexOf("RTCOutboundRTPAudioStream"))output.audio.sending.targetBitrate=item.targetBitrate||0,output.audio.sending.totalBytes=item.bytesSent,output.audio.sending.bytes=self._parseConnectionStats(prevStats,item,"bytesSent"),output.audio.sending.totalPackets=item.packetsSent,output.audio.sending.packets=self._parseConnectionStats(prevStats,item,"packetsSent"),output.audio.sending.totalNacks=item.nackCount,output.audio.sending.nacks=self._parseConnectionStats(prevStats,item,"nackCount");else if("edge"===AdapterJS.webrtcDetectedBrowser&&"inboundrtp"===item.type&&"audio"===item.mediaType&&item.isRemote)output.audio.receiving.fractionLost=item.fractionLost,output.audio.receiving.jitter=item.jitter,output.audio.receiving.totalBytes=item.bytesReceived,output.audio.receiving.bytes=self._parseConnectionStats(prevStats,item,"bytesReceived"),output.audio.receiving.totalPackets=item.packetsReceived,output.audio.receiving.packets=self._parseConnectionStats(prevStats,item,"packetsReceived"),output.audio.receiving.totalPacketsLost=item.packetsLost,output.audio.receiving.packetsLost=self._parseConnectionStats(prevStats,item,"packetsLost"),output.audio.receiving.totalNacks=item.nackCount,output.audio.receiving.nacks=self._parseConnectionStats(prevStats,item,"nackCount");else if("edge"!==AdapterJS.webrtcDetectedBrowser||"outboundrtp"!==item.type||"audio"!==item.mediaType||item.isRemote){if(0===prop.indexOf("ssrc_")&&"audio"===item.mediaType)if(prop.indexOf("_recv")>0){output.audio.receiving.jitter=parseInt(item.googJitterReceived||"0",10),output.audio.receiving.jitterBufferMs=parseInt(item.googJitterBufferMs||"0",10),output.audio.receiving.currentDelayMs=parseInt(item.googCurrentDelayMs||"0",10);var bytesReceived=parseInt(item.bytesReceived||"0",10);output.audio.receiving.totalBytes=bytesReceived,output.audio.receiving.bytes=self._parseConnectionStats(prevStats,item,"bytesReceived");var packetsReceived=parseInt(item.packetsReceived||"0",10);output.audio.receiving.totalPackets=packetsReceived,output.audio.receiving.packets=self._parseConnectionStats(prevStats,item,"packetsReceived");var packetsLost=parseInt(item.packetsLost||"0",10);output.audio.receiving.totalPacketsLost=packetsLost,output.audio.receiving.packetsLost=self._parseConnectionStats(prevStats,item,"packetsLost")}else{output.audio.sending.rtt=parseInt(item.googRtt||"0",10),output.audio.sending.audioInputLevel=parseInt(item.audioInputLevel||"0",10),output.audio.sending.echoReturnLoss=parseInt(item.googEchoCancellationReturnLoss||"0",10),output.audio.sending.echoReturnLossEnhancement=parseInt(item.googEchoCancellationReturnLossEnhancement||"0",10);var bytesSent=parseInt(item.bytesSent||"0",10);output.audio.sending.totalBytes=bytesSent,output.audio.sending.bytes=self._parseConnectionStats(prevStats,item,"bytesSent");var packetsSent=parseInt(item.packetsSent||"0",10);output.audio.sending.totalPackets=packetsSent,output.audio.sending.packets=self._parseConnectionStats(prevStats,item,"packetsSent")}else if(0===prop.indexOf("inbound_rtp_audio"))output.audio.receiving.jitter=item.jitter||0,output.audio.receiving.totalBytes=item.bytesReceived,output.audio.receiving.bytes=self._parseConnectionStats(prevStats,item,"bytesReceived"),output.audio.receiving.totalPackets=item.packetsReceived,output.audio.receiving.packets=self._parseConnectionStats(prevStats,item,"packetsReceived"),output.audio.receiving.totalPacketsLost=item.packetsLost,output.audio.receiving.packetsLost=self._parseConnectionStats(prevStats,item,"packetsLost"),output.audio.receiving.totalNacks=item.nackCount,output.audio.receiving.nacks=self._parseConnectionStats(prevStats,item,"nackCount");else if(0===prop.indexOf("outbound_rtp_audio")){output.audio.sending.totalBytes=item.bytesSent,output.audio.sending.bytes=self._parseConnectionStats(prevStats,item,"bytesSent"),output.audio.sending.totalPackets=item.packetsSent,output.audio.sending.packets=self._parseConnectionStats(prevStats,item,"packetsSent"),output.audio.sending.totalNacks=item.nackCount,output.audio.sending.nacks=self._parseConnectionStats(prevStats,item,"nackCount");var rtcpItem=output.raw[prop.replace(/_rtp_/g,"_rtcp_")]||{};output.audio.sending.rtt=rtcpItem.roundTripTime||0}}else{output.audio.sending.targetBitrate=item.targetBitrate,output.audio.sending.rtt=item.roundTripTime,output.audio.sending.totalBytes=item.bytesSent,output.audio.sending.bytes=self._parseConnectionStats(prevStats,item,"bytesSent"),output.audio.sending.totalPackets=item.packetsSent,output.audio.sending.packets=self._parseConnectionStats(prevStats,item,"packetsSent"),output.audio.sending.totalNacks=item.nackCount,output.audio.sending.nacks=self._parseConnectionStats(prevStats,item,"nackCount");var trackItem=output.raw[item.mediaTrackId||""]||{};output.audio.sending.audioInputLevel=trackItem.audioLevel,output.audio.sending.echoReturnLoss=trackItem.echoReturnLoss,output.audio.sending.echoReturnLossEnhancement=trackItem.echoReturnLossEnhancement}},videoStatsFn=function(item,prop){var prevStats=isAutoBwStats?self._peerBandwidth[peerId][prop]:self._peerStats[peerId][prop];if(0===prop.indexOf("RTCInboundRTPVideoStream"))output.video.receiving.fractionLost=item.fractionLost,output.video.receiving.jitter=item.jitter,output.video.receiving.framesDecoded=item.framesDecoded,output.video.receiving.qpSum=item.qpSum,output.video.receiving.totalBytes=item.bytesReceived,output.video.receiving.bytes=self._parseConnectionStats(prevStats,item,"bytesReceived"),output.video.receiving.totalPackets=item.packetsReceived,output.video.receiving.packets=self._parseConnectionStats(prevStats,item,"packetsReceived"),output.video.receiving.totalPacketsDiscarded=item.packetsDiscarded,output.video.receiving.packetsDiscarded=self._parseConnectionStats(prevStats,item,"packetsDiscarded"),output.video.receiving.totalPacketsLost=item.packetsLost,output.video.receiving.packetsLost=self._parseConnectionStats(prevStats,item,"packetsLost"),output.video.receiving.totalNacks=item.nackCount,output.video.receiving.nacks=self._parseConnectionStats(prevStats,item,"nackCount"),output.video.receiving.totalFirs=item.firCount,output.video.receiving.firs=self._parseConnectionStats(prevStats,item,"firCount"),output.video.receiving.totalSlis=item.sliCount,output.video.receiving.slis=self._parseConnectionStats(prevStats,item,"sliCount");else if(0===prop.indexOf("RTCMediaStreamTrack_remote_video_"))output.video.receiving.frameHeight=item.frameHeight,output.video.receiving.frameWidth=item.frameWidth,output.video.receiving.framesCorrupted=item.framesCorrupted,output.video.receiving.framesPerSecond=item.framesPerSecond,output.video.receiving.framesDropped=item.framesDropped,output.video.receiving.totalFrames=item.framesReceived,output.video.receiving.frames=self._parseConnectionStats(prevStats,item,"framesReceived");else if(0===prop.indexOf("RTCOutboundRTPVideoStream"))output.video.sending.qpSum=item.qpSum,output.video.sending.targetBitrate=item.targetBitrate||0,output.video.sending.framesEncoded=item.framesEncoded||0,output.video.sending.totalBytes=item.bytesSent,output.video.sending.bytes=self._parseConnectionStats(prevStats,item,"bytesSent"),output.video.sending.totalPackets=item.packetsSent,output.video.sending.packets=self._parseConnectionStats(prevStats,item,"packetsSent"),output.video.sending.totalNacks=item.nackCount,output.video.sending.nacks=self._parseConnectionStats(prevStats,item,"nackCount"),output.video.receiving.totalFirs=item.firCount,output.video.receiving.firs=self._parseConnectionStats(prevStats,item,"firCount"),output.video.sending.totalSlis=item.sliCount,output.video.sending.slis=self._parseConnectionStats(prevStats,item,"sliCount");else if("edge"===AdapterJS.webrtcDetectedBrowser&&"inboundrtp"===item.type&&"video"===item.mediaType&&item.isRemote){output.video.receiving.fractionLost=item.fractionLost,output.video.receiving.jitter=item.jitter,output.video.receiving.totalBytes=item.bytesReceived,output.video.receiving.bytes=self._parseConnectionStats(prevStats,item,"bytesReceived"),output.video.receiving.totalPackets=item.packetsReceived,output.video.receiving.packets=self._parseConnectionStats(prevStats,item,"packetsReceived"),output.video.receiving.totalPacketsLost=item.packetsLost,output.video.receiving.packetsLost=self._parseConnectionStats(prevStats,item,"packetsLost"),output.video.receiving.totalNacks=item.nackCount,output.video.receiving.nacks=self._parseConnectionStats(prevStats,item,"nackCount"),output.video.receiving.totalPlis=item.pliCount,output.video.receiving.plis=self._parseConnectionStats(prevStats,item,"pliCount"),output.video.receiving.totalFirs=item.firCount,output.video.receiving.firs=self._parseConnectionStats(prevStats,item,"firCount"),output.video.receiving.totalSlis=item.sliCount,output.video.receiving.slis=self._parseConnectionStats(prevStats,item,"sliCount");var trackItem=output.raw[item.mediaTrackId||""]||{};output.video.receiving.framesCorrupted=trackItem.framesCorrupted,output.video.receiving.framesDropped=trackItem.framesDropped,output.video.receiving.framesDecoded=trackItem.framesDecoded,output.video.receiving.totalFrames=trackItem.framesReceived,output.video.receiving.frames=self._parseConnectionStats(prevStats,trackItem,"framesReceived")}else if("edge"!==AdapterJS.webrtcDetectedBrowser||"outboundrtp"!==item.type||"video"!==item.mediaType||item.isRemote){if(0===prop.indexOf("ssrc_")&&"video"===item.mediaType)if(prop.indexOf("_recv")>0){output.video.receiving.jitter=parseInt(item.googJitterReceived||"0",10),output.video.receiving.jitterBufferMs=parseInt(item.googJitterBufferMs||"0",10),output.video.receiving.currentDelayMs=parseInt(item.googCurrentDelayMs||"0",10),output.video.receiving.renderDelayMs=parseInt(item.googRenderDelayMs||"0",10),output.video.receiving.frameWidth=parseInt(item.googFrameWidthReceived||"0",10),output.video.receiving.frameHeight=parseInt(item.googFrameHeightReceived||"0",10),output.video.receiving.framesDecoded=parseInt(item.framesDecoded||"0",10),output.video.receiving.frameRateOutput=parseInt(item.googFrameRateOutput||"0",10),output.video.receiving.frameRateDecoded=parseInt(item.googFrameRateDecoded||"0",10),output.video.receiving.frameRateReceived=parseInt(item.googFrameRateReceived||"0",10),output.video.receiving.qpSum=parseInt(item.qpSum||"0",10);var bytesReceived=parseInt(item.bytesReceived||"0",10)
;output.video.receiving.totalBytes=bytesReceived,output.video.receiving.bytes=self._parseConnectionStats(prevStats,item,"bytesReceived");var packetsReceived=parseInt(item.packetsReceived||"0",10);output.video.receiving.totalPackets=packetsReceived,output.video.receiving.packets=self._parseConnectionStats(prevStats,item,"packetsReceived");var packetsLost=parseInt(item.packetsLost||"0",10);output.video.receiving.totalPacketsLost=packetsLost,output.video.receiving.packetsLost=self._parseConnectionStats(prevStats,item,"packetsLost");var nacksSent=parseInt(item.googNacksSent||"0",10);output.video.receiving.totalNacks=nacksSent,output.video.receiving.nacks=self._parseConnectionStats(prevStats,item,"googNacksSent");var plisSent=parseInt(item.googPlisSent||"0",10);output.video.receiving.totalPlis=plisSent,output.video.receiving.plis=self._parseConnectionStats(prevStats,item,"googPlisSent");var firsSent=parseInt(item.googFirsSent||"0",10);output.video.receiving.totalFirs=firsSent,output.video.receiving.firs=self._parseConnectionStats(prevStats,item,"googFirsSent")}else{output.video.sending.rtt=parseInt(item.googRtt||"0",10),output.video.sending.frameWidth=parseInt(item.googFrameWidthSent||"0",10),output.video.sending.frameHeight=parseInt(item.googFrameHeightSent||"0",10),output.video.sending.framesEncoded=parseInt(item.framesEncoded||"0",10),output.video.sending.frameRateInput=parseInt(item.googFrameRateInput||"0",10),output.video.sending.frameRateEncoded=parseInt(item.googFrameRateEncoded||"0",10),output.video.sending.frameRateSent=parseInt(item.googFrameRateSent||"0",10),output.video.sending.cpuLimitedResolution="true"===item.googCpuLimitedResolution,output.video.sending.bandwidthLimitedResolution="true"===item.googBandwidthLimitedResolution;var bytesSent=parseInt(item.bytesSent||"0",10);output.video.sending.totalBytes=bytesSent,output.video.sending.bytes=self._parseConnectionStats(prevStats,item,"bytesSent");var packetsSent=parseInt(item.packetsSent||"0",10);output.video.sending.totalPackets=packetsSent,output.video.sending.packets=self._parseConnectionStats(prevStats,item,"packetsSent");var nacksReceived=parseInt(item.googNacksReceived||"0",10);output.video.sending.totalNacks=nacksReceived,output.video.sending.nacks=self._parseConnectionStats(prevStats,item,"googNacksReceived");var plisReceived=parseInt(item.googPlisReceived||"0",10);output.video.sending.totalPlis=plisReceived,output.video.sending.plis=self._parseConnectionStats(prevStats,item,"googPlisReceived");var firsReceived=parseInt(item.googFirsReceived||"0",10);output.video.sending.totalFirs=firsReceived,output.video.sending.firs=self._parseConnectionStats(prevStats,item,"googFirsReceived")}else if(0===prop.indexOf("inbound_rtp_video"))output.video.receiving.jitter=item.jitter||0,output.video.receiving.framesDecoded=item.framesDecoded||0,output.video.receiving.frameRateMean=item.framerateMean||0,output.video.receiving.frameRateStdDev=item.framerateStdDev||0,output.video.receiving.totalBytes=item.bytesReceived,output.video.receiving.bytes=self._parseConnectionStats(prevStats,item,"bytesReceived"),output.video.receiving.totalPackets=item.packetsReceived,output.video.receiving.packets=self._parseConnectionStats(prevStats,item,"packetsReceived"),output.video.receiving.totalPacketsLost=item.packetsLost,output.video.receiving.packetsLost=self._parseConnectionStats(prevStats,item,"packetsLost"),output.video.receiving.totalNacks=item.nackCount,output.video.receiving.nacks=self._parseConnectionStats(prevStats,item,"nackCount"),output.video.receiving.totalPlis=item.pliCount,output.video.receiving.plis=self._parseConnectionStats(prevStats,item,"pliCount"),output.video.receiving.totalFirs=item.firCount,output.video.receiving.firs=self._parseConnectionStats(prevStats,item,"firCount");else if(0===prop.indexOf("outbound_rtp_video")){output.video.sending.framesEncoded=item.framesEncoded||0,output.video.sending.frameRateMean=item.framerateMean||0,output.video.sending.frameRateStdDev=item.framerateStdDev||0,output.video.sending.framesDropped=item.droppedFrames||0,output.video.sending.totalBytes=item.bytesSent,output.video.sending.bytes=self._parseConnectionStats(prevStats,item,"bytesSent"),output.video.sending.totalPackets=item.packetsSent,output.video.sending.packets=self._parseConnectionStats(prevStats,item,"packetsSent"),output.video.sending.totalNacks=item.nackCount,output.video.sending.nacks=self._parseConnectionStats(prevStats,item,"nackCount"),output.video.sending.totalPlis=item.pliCount,output.video.sending.plis=self._parseConnectionStats(prevStats,item,"pliCount"),output.video.sending.totalFirs=item.firCount,output.video.sending.firs=self._parseConnectionStats(prevStats,item,"firCount");var rtcpItem=output.raw[prop.replace(/_rtp_/g,"_rtcp_")]||{};output.video.sending.rtt=rtcpItem.roundTripTime||0}}else{output.video.sending.targetBitrate=item.targetBitrate||0,output.video.sending.roundTripTime=item.roundTripTime||0,output.video.sending.totalBytes=item.bytesSent,output.video.sending.bytes=self._parseConnectionStats(prevStats,item,"bytesSent"),output.video.sending.totalPackets=item.packetsSent,output.video.sending.packets=self._parseConnectionStats(prevStats,item,"packetsSent"),output.video.sending.totalNacks=item.nackCount,output.video.sending.nacks=self._parseConnectionStats(prevStats,item,"nackCount"),output.video.sending.totalFirs=item.firCount,output.video.sending.firs=self._parseConnectionStats(prevStats,item,"firCount"),output.video.sending.totalPlis=item.pliCount,output.video.sending.plis=self._parseConnectionStats(prevStats,item,"pliCount"),output.video.sending.totalSlis=item.sliCount,output.video.sending.slis=self._parseConnectionStats(prevStats,item,"sliCount");var trackItem=output.raw[item.mediaTrackId||""]||{};output.video.sending.frameHeight=trackItem.frameHeight,output.video.sending.frameWidth=trackItem.frameWidth,output.video.sending.framesPerSecond=trackItem.framesPerSecond,output.video.sending.totalFrames=trackItem.framesSent,output.video.sending.frames=self._parseConnectionStats(prevStats,trackItem,"framesSent")}},videoE2EStatsFn=function(item,prop){if(0===prop.indexOf("ssrc_")&&"video"===item.mediaType){var captureStartNtpTimeMs=parseInt(item.googCaptureStartNtpTimeMs||"0",10),remoteStream=pc.getRemoteStreams()[0];if(!(captureStartNtpTimeMs>0&&prop.indexOf("_recv")>0&&remoteStream&&document&&"function"==typeof document.getElementsByTagName))return;try{var elements=document.getElementsByTagName("plugin"===AdapterJS.webrtcDetectedType?"object":"video");"plugin"!==AdapterJS.webrtcDetectedType&&0===elements.length&&(elements=document.getElementsByTagName("audio"));for(var e=0;e<elements.length;e++){var videoStreamId=null;if("plugin"===AdapterJS.webrtcDetectedType){if(!(elements[e].children&&"object"==typeof elements[e].children&&"number"==typeof elements[e].children.length&&elements[e].children.length>0))break;for(var ec=0;ec<elements[e].children.length;ec++)if("streamId"===elements[e].children[ec].name){videoStreamId=elements[e].children[ec].value||null;break}}else videoStreamId=elements[e].srcObject&&(elements[e].srcObject.id||elements[e].srcObject.label)||null;if(videoStreamId&&videoStreamId===(remoteStream.id||remoteStream.label)){output.video.receiving.e2eDelay=(new Date).getTime()+22089888e5-captureStartNtpTimeMs-1e3*elements[e].currentTime;break}}}catch(error){beSilentOnLogs||log.warn([peerId,"RTCStatsReport",null,"Failed retrieving e2e delay ->"],error)}}},successCbFn=function(stats){"function"==typeof stats.forEach?stats.forEach(function(item,prop){output.raw[prop]=item}):output.raw=stats;var edgeTracksKind={remote:{},local:{}};"edge"===AdapterJS.webrtcDetectedBrowser&&(pc.remoteStream&&pc.remoteStream.getTracks().forEach(function(track){edgeTracksKind.remote[track.id]=track.kind}),pc.localStream&&pc.localStream.getTracks().forEach(function(track){edgeTracksKind.local[track.id]=track.kind})),Object.keys(output.raw).forEach(function(prop){if(0!==prop.indexOf("ssrc_")||output.raw[prop].mediaType){if("edge"===AdapterJS.webrtcDetectedBrowser&&!output.raw[prop].mediaType&&["inboundrtp","outboundrtp"].indexOf(output.raw[prop].type)>-1){var trackItem=output.raw[output.raw[prop].mediaTrackId]||{};output.raw[prop].mediaType=edgeTracksKind[output.raw[prop].isRemote?"remote":"local"][trackItem.trackIdentifier]||""}}else output.raw[prop].mediaType=output.raw[prop].audioInputLevel||output.raw[prop].audioOutputLevel?"audio":"video";certificateFn(output.raw[prop],prop),candidatePairFn(output.raw[prop],prop),codecsFn(output.raw[prop],prop),audioStatsFn(output.raw[prop],prop),videoStatsFn(output.raw[prop],prop),videoE2EStatsFn(output.raw[prop],prop),isAutoBwStats&&!self._peerBandwidth[peerId][prop]?self._peerBandwidth[peerId][prop]=output.raw[prop]:isAutoBwStats||self._peerStats[peerId][prop]||(self._peerStats[peerId][prop]=output.raw[prop])}),output.audio.sending.bytes=output.audio.sending.bytes||0,output.audio.sending.packets=output.audio.sending.packets||0,output.audio.sending.totalBytes=output.audio.sending.totalBytes||0,output.audio.sending.totalPackets=output.audio.sending.totalPackets||0,output.video.sending.bytes=output.video.sending.bytes||0,output.video.sending.packets=output.video.sending.packets||0,output.video.sending.totalBytes=output.video.sending.totalBytes||0,output.video.sending.totalPackets=output.video.sending.totalPackets||0,output.audio.receiving.bytes=output.audio.receiving.bytes||0,output.audio.receiving.packets=output.audio.receiving.packets||0,output.audio.receiving.totalBytes=output.audio.receiving.totalBytes||0,output.audio.receiving.totalPackets=output.audio.receiving.totalPackets||0,output.video.receiving.bytes=output.video.receiving.bytes||0,output.video.receiving.packets=output.video.receiving.packets||0,output.video.receiving.totalBytes=output.video.receiving.totalBytes||0,output.video.receiving.totalPackets=output.video.receiving.totalPackets||0,callback(null,output)},errorCbFn=function(error){beSilentOnLogs||log.error([peerId,"RTCStatsReport",null,"Failed retrieving stats ->"],error),callback(error,null)};if("function"!=typeof pc.getStats)return errorCbFn(new Error("getStats() API is not available."));"plugin"===AdapterJS.webrtcDetectedType?pc.getStats(null,successCbFn,errorCbFn):pc.getStats(null).then(successCbFn).catch(errorCbFn)},Skylink.prototype._addPeer=function(targetMid,cert,peerBrowser,receiveOnly,isSS){var self=this;return self._peerConnections[targetMid]?void log.error([targetMid,null,null,"Connection to peer has already been made"]):(self._peerConnStatus[targetMid]={connected:!1,init:!1},log.log([targetMid,null,null,"Starting the connection to peer. Options provided:"],{peerBrowser:peerBrowser,receiveOnly:receiveOnly,enableDataChannel:self._initOptions.enableDataChannel}),log.info("Adding peer",isSS),self._peerConnections[targetMid]=self._createPeerConnection(targetMid,!!isSS,cert),self._peerConnections[targetMid]?(self._peerConnStatus[targetMid].init=!0,void(self._peerConnections[targetMid].hasScreen=!!isSS)):void log.error([targetMid,null,null,"Failed creating the connection to peer."]))},Skylink.prototype._restartPeerConnection=function(peerId,doIceRestart,bwOptions,callback){var self=this;if(!self._peerConnections[peerId])return void log.error([peerId,null,null,"Peer does not have an existing connection. Unable to restart"]);var pc=self._peerConnections[peerId],agent=(self.getPeerInfo(peerId)||{}).agent||{};if(self._isLowerThanVersion(agent.SMProtocolVersion||"","0.1.2")){var notSupportedError=new Error("Failed restarting with other agents connecting from other SDKs as re-negotiation is not supported by other SDKs");return log.warn([peerId,"RTCPeerConnection",null,"Ignoring restart request as agent's SDK does not support it"],notSupportedError),void("function"==typeof callback&&(log.debug([peerId,"RTCPeerConnection",null,"Firing restart failure callback"]),callback(notSupportedError)))}if(pc.signalingState===self.PEER_CONNECTION_STATE.STABLE&&self._peerConnections[peerId]){log.log([peerId,null,null,"Sending restart message to signaling server ->"],{iceRestart:doIceRestart,options:bwOptions}),self._peerCustomConfigs[peerId]=self._peerCustomConfigs[peerId]||{},self._peerCustomConfigs[peerId].bandwidth=self._peerCustomConfigs[peerId].bandwidth||{},self._peerCustomConfigs[peerId].googleXBandwidth=self._peerCustomConfigs[peerId].googleXBandwidth||{},bwOptions.bandwidth&&"object"==typeof bwOptions.bandwidth&&("number"==typeof bwOptions.bandwidth.audio&&(self._peerCustomConfigs[peerId].bandwidth.audio=bwOptions.bandwidth.audio),"number"==typeof bwOptions.bandwidth.video&&(self._peerCustomConfigs[peerId].bandwidth.video=bwOptions.bandwidth.video),"number"==typeof bwOptions.bandwidth.data&&(self._peerCustomConfigs[peerId].bandwidth.data=bwOptions.bandwidth.data)),bwOptions.googleXBandwidth&&"object"==typeof bwOptions.googleXBandwidth&&("number"==typeof bwOptions.googleXBandwidth.min&&(self._peerCustomConfigs[peerId].googleXBandwidth.min=bwOptions.googleXBandwidth.min),"number"==typeof bwOptions.googleXBandwidth.max&&(self._peerCustomConfigs[peerId].googleXBandwidth.max=bwOptions.googleXBandwidth.max));var restartMsg={type:self._SIG_MESSAGE_TYPE.RESTART,mid:self._user.sid,rid:self._room.id,agent:AdapterJS.webrtcDetectedBrowser,version:(AdapterJS.webrtcDetectedVersion||0).toString(),os:window.navigator.platform,userInfo:self._getUserInfo(peerId),target:peerId,weight:self._peerPriorityWeight,receiveOnly:self.getPeerInfo().config.receiveOnly,enableIceTrickle:self._initOptions.enableIceTrickle,enableDataChannel:self._initOptions.enableDataChannel,enableIceRestart:self._enableIceRestart,doIceRestart:!0===doIceRestart&&self._enableIceRestart&&self._peerInformations[peerId]&&self._peerInformations[peerId].config.enableIceRestart,isRestartResend:!1,temasysPluginVersion:AdapterJS.WebRTCPlugin.plugin?AdapterJS.WebRTCPlugin.plugin.VERSION:null,SMProtocolVersion:self.SM_PROTOCOL_VERSION,DTProtocolVersion:self.DT_PROTOCOL_VERSION};self._publishOnly&&(restartMsg.publishOnly={type:self._streams.screenshare&&self._streams.screenshare.stream?"screenshare":"video"}),self._parentId&&(restartMsg.parentId=self._parentId),self._peerEndOfCandidatesCounter[peerId]=self._peerEndOfCandidatesCounter[peerId]||{},self._peerEndOfCandidatesCounter[peerId].len=0,self._doOffer(peerId,doIceRestart,restartMsg),"function"==typeof callback&&(log.debug([peerId,"RTCPeerConnection",null,"Firing restart callback"]),callback(null))}else if(pc.signalingState===self.PEER_CONNECTION_STATE.HAVE_LOCAL_OFFER){var hasLocalDescription=pc.localDescription&&pc.localDescription.sdp;if(hasLocalDescription)self._sendChannelMessage({type:pc.localDescription.type,sdp:pc.localDescription.sdp,mid:self._user.sid,target:peerId,rid:self._room.id,restart:!0});else{var noLocalDescriptionError="Failed re-sending localDescription as there is no localDescription set to connection. There could be a handshaking step error";log.error([peerId,"RTCPeerConnection",null,noLocalDescriptionError],{localDescription:pc.localDescription,remoteDescription:pc.remoteDescription}),"function"==typeof callback&&(log.debug([peerId,"RTCPeerConnection",null,"Firing restart failure callback"]),callback(new Error(noLocalDescriptionError)))}}else{var unableToRestartError="Failed restarting as peer connection state is "+pc.signalingState;log.warn([peerId,"RTCPeerConnection",null,unableToRestartError]),"function"==typeof callback&&(log.debug([peerId,"RTCPeerConnection",null,"Firing restart failure callback"]),callback(new Error(unableToRestartError)))}},Skylink.prototype._removePeer=function(peerId){if(!this._peerConnections[peerId]&&!this._peerInformations[peerId]&&!this._hasMCU)return void log.debug([peerId,"RTCPeerConnection",null,"Dropping the hangup from Peer as not connected to Peer at all."]);var peerInfo=null;this._hasMCU||(peerInfo=clone(this.getPeerInfo(peerId))||{userData:"",settings:{audio:!1,video:!1,data:!1},mediaStatus:{audioMuted:!0,videoMuted:!0},agent:{name:"unknown",version:0,os:"",pluginVersion:null},config:{enableDataChannel:!0,enableIceRestart:!1,enableIceTrickle:!0,priorityWeight:0,publishOnly:!1,receiveOnly:!0},parentId:null,room:clone(this._selectedRoom)}),"MCU"!==peerId?this._trigger("peerLeft",peerId,peerInfo,!1):(this._hasMCU=!1,log.log([peerId,null,null,"MCU has stopped listening and left"]),this._trigger("serverPeerLeft",peerId,this.SERVER_PEER_TYPE.MCU)),this._peerConnections[peerId]&&(this._peerConnections[peerId].signalingState!==this.PEER_CONNECTION_STATE.CLOSED&&(this._peerConnections[peerId].close(),"AppleWebKit"===AdapterJS.webrtcDetectedType&&(this._peerConnections[peerId].signalingStateClosed||(this._peerConnections[peerId].signalingStateClosed=!0,this._trigger("peerConnectionState",this.PEER_CONNECTION_STATE.CLOSED,peerId)),this._peerConnections[peerId].iceConnectionStateClosed||(this._peerConnections[peerId].iceConnectionStateClosed=!0,this._handleIceConnectionStats(this.ICE_CONNECTION_STATE.CLOSED,peerId),this._trigger("iceConnectionState",this.ICE_CONNECTION_STATE.CLOSED,peerId)))),"MCU"!==peerId&&this._handleEndedStreams(peerId),delete this._peerConnections[peerId]),this._peerInformations[peerId]&&delete this._peerInformations[peerId],this._peerMessagesStamps[peerId]&&delete this._peerMessagesStamps[peerId],this._streamsSession[peerId]&&delete this._streamsSession[peerId],this._peerEndOfCandidatesCounter[peerId]&&delete this._peerEndOfCandidatesCounter[peerId],this._peerCandidatesQueue[peerId]&&delete this._peerCandidatesQueue[peerId],this._sdpSessions[peerId]&&delete this._sdpSessions[peerId],this._peerStats[peerId]&&delete this._peerStats[peerId],this._peerBandwidth[peerId]&&delete this._peerBandwidth[peerId],this._gatheredCandidates[peerId]&&delete this._gatheredCandidates[peerId],this._peerCustomConfigs[peerId]&&delete this._peerCustomConfigs[peerId],this._peerConnStatus[peerId]&&delete this._peerConnStatus[peerId],this._dataChannels[peerId]&&this._closeDataChannel(peerId),log.log([peerId,"RTCPeerConnection",null,"Successfully removed peer"])},Skylink.prototype._createPeerConnection=function(targetMid,isScreenSharing,cert){var pc,self=this;if(self._inRoom&&self._room&&self._room.connection&&self._room.connection.peerConfig&&Array.isArray(self._room.connection.peerConfig.iceServers)){var constraints={iceServers:self._room.connection.peerConfig.iceServers,iceTransportPolicy:self._initOptions.filterCandidatesType.host&&self._initOptions.filterCandidatesType.srflx&&!self._initOptions.filterCandidatesType.relay?"relay":"all",bundlePolicy:self._peerConnectionConfig.bundlePolicy===self.BUNDLE_POLICY.NONE?self.BUNDLE_POLICY.BALANCED:self._peerConnectionConfig.bundlePolicy,rtcpMuxPolicy:self._peerConnectionConfig.rtcpMuxPolicy,iceCandidatePoolSize:self._peerConnectionConfig.iceCandidatePoolSize},optional={optional:[{DtlsSrtpKeyAgreement:!0},{googIPv6:!0}]};cert&&(constraints.certificates=[cert]),self._peerConnStatus[targetMid]&&(self._peerConnStatus[targetMid].constraints=constraints,self._peerConnStatus[targetMid].optional=optional);try{log.debug([targetMid,"RTCPeerConnection",null,"Creating peer connection ->"],{constraints:constraints,optional:optional}),pc=new(self._initOptions.useEdgeWebRTC&&window.msRTCPeerConnection?window.msRTCPeerConnection:RTCPeerConnection)(constraints,optional)}catch(error){return log.error([targetMid,null,null,"Failed creating peer connection:"],error),self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ERROR,targetMid,error),null}pc.setOffer="",pc.setAnswer="",pc.hasStream=!1,pc.hasScreen=!!isScreenSharing,pc.hasMainChannel=!1,pc.firefoxStreamId="",pc.processingLocalSDP=!1,pc.processingRemoteSDP=!1,pc.gathered=!1,pc.gathering=!1,pc.localStream=null,pc.localStreamId=null,pc.remoteStream=null,pc.remoteStreamId=null,pc.iceConnectionStateClosed=!1,pc.signalingStateClosed=!1,self._gatheredCandidates[targetMid]={sending:{host:[],srflx:[],relay:[]},receiving:{host:[],srflx:[],relay:[]}},self._streamsSession[targetMid]=self._streamsSession[targetMid]||{},self._peerEndOfCandidatesCounter[targetMid]=self._peerEndOfCandidatesCounter[targetMid]||{},self._sdpSessions[targetMid]={local:{},remote:{}},self._peerBandwidth[targetMid]={};var bandwidth=null;pc.ondatachannel=function(event){var dc=event.channel||event;if(log.debug([targetMid,"RTCDataChannel",dc.label,"Received datachannel ->"],dc),self._initOptions.enableDataChannel&&self._peerInformations[targetMid]&&self._peerInformations[targetMid].config.enableDataChannel){self.DATA_CHANNEL_TYPE.DATA,dc.label;pc.hasMainChannel||(self.DATA_CHANNEL_TYPE.MESSAGING,"main",pc.hasMainChannel=!0),self._createDataChannel(targetMid,dc)}else log.warn([targetMid,"RTCDataChannel",dc.label,"Not adding datachannel as enable datachannel is set to false"])},self.videoRenderers=self.videoRenderers||{},pc.ontrack=function(rtcTrackEvent){if(self._peerConnections[targetMid]){var stream=rtcTrackEvent.streams[0],transceiverMid=rtcTrackEvent.transceiver.mid;pc.remoteStream=stream,pc.remoteStreamId=pc.remoteStreamId||stream.id||stream.label;var peerSettings=clone(self.getPeerInfo(targetMid).settings);self._streamsSession[targetMid][pc.remoteStreamId]=peerSettings,0===stream.getAudioTracks().length&&(self._streamsSession[targetMid][pc.remoteStreamId].audio=!1),0===stream.getVideoTracks().length&&(self._streamsSession[targetMid][pc.remoteStreamId].video=!1),pc.hasStream=!0,pc.hasScreen=peerSettings.video&&"object"==typeof peerSettings.video&&peerSettings.video.screenshare,self._onRemoteStreamAdded(self._hasMCU?self._transceiverIdPeerIdMap[transceiverMid]:targetMid,stream,!!pc.hasScreen)}},pc.onremovestream=function(evt){evt.stream},pc.onicecandidate=function(event){self._onIceCandidate(targetMid,event.candidate||event)};var statsInterval=null;return pc.oniceconnectionstatechange=function(evt){var iceConnectionState=pc.iceConnectionState;if(log.debug([targetMid,"RTCIceConnectionState",null,"Ice connection state changed ->"],iceConnectionState),"edge"===AdapterJS.webrtcDetectedBrowser&&("connecting"===iceConnectionState?iceConnectionState=self.ICE_CONNECTION_STATE.CHECKING:"new"===iceConnectionState&&(iceConnectionState=self.ICE_CONNECTION_STATE.FAILED)),"AppleWebKit"===AdapterJS.webrtcDetectedType&&iceConnectionState===self.ICE_CONNECTION_STATE.CLOSED)return void setTimeout(function(){pc.iceConnectionStateClosed||(self._handleIceConnectionStats(self.ICE_CONNECTION_STATE.CLOSED,targetMid),self._trigger("iceConnectionState",self.ICE_CONNECTION_STATE.CLOSED,targetMid))},10);if(self._handleIceConnectionStats(pc.iceConnectionState,targetMid),self._trigger("iceConnectionState",iceConnectionState,targetMid),iceConnectionState===self.ICE_CONNECTION_STATE.FAILED&&self._initOptions.enableIceTrickle&&self._trigger("iceConnectionState",self.ICE_CONNECTION_STATE.TRICKLE_FAILED,targetMid),self._peerConnStatus[targetMid]&&(self._peerConnStatus[targetMid].connected=[self.ICE_CONNECTION_STATE.COMPLETED,self.ICE_CONNECTION_STATE.CONNECTED].indexOf(iceConnectionState)>-1),!statsInterval&&[self.ICE_CONNECTION_STATE.CONNECTED,self.ICE_CONNECTION_STATE.COMPLETED].indexOf(iceConnectionState)>-1&&(statsInterval=!0,self.getConnectionStatus(targetMid,function(){statsInterval=setInterval(function(){if(!self._peerConnections[targetMid]||self._peerConnections[targetMid].signalingState===self.PEER_CONNECTION_STATE.CLOSED)return void clearInterval(statsInterval);self._handleBandwidthStats(targetMid)},2e4)})),!self._hasMCU&&[self.ICE_CONNECTION_STATE.CONNECTED,self.ICE_CONNECTION_STATE.COMPLETED].indexOf(iceConnectionState)>-1&&self._bandwidthAdjuster&&!bandwidth&&"edge"!==AdapterJS.webrtcDetectedBrowser&&"edge"!==(((self._peerInformations[targetMid]||{}).agent||{}).name||"edge")){var currentBlock=0,formatTotalFn=function(arr){for(var total=0,i=0;i<arr.length;i++)total+=arr[i];return total/arr.length};bandwidth={audio:{send:[],recv:[]},video:{send:[],recv:[]}};var pullInterval=setInterval(function(){if(!self._peerConnections[targetMid]||self._peerConnections[targetMid].signalingState===self.PEER_CONNECTION_STATE.CLOSED||!self._bandwidthAdjuster||!self._peerBandwidth[targetMid])return void clearInterval(pullInterval);self._retrieveStats(targetMid,function(err,stats){if(!self._peerConnections[targetMid]||self._peerConnections[targetMid].signalingState===self.PEER_CONNECTION_STATE.CLOSED||!self._bandwidthAdjuster)return void clearInterval(pullInterval);if(err?(bandwidth.audio.send.push(0),bandwidth.audio.recv.push(0),bandwidth.video.send.push(0),bandwidth.video.recv.push(0)):(bandwidth.audio.send.push(8*stats.audio.sending.bytes),bandwidth.audio.recv.push(8*stats.audio.receiving.bytes),bandwidth.video.send.push(8*stats.video.sending.bytes),bandwidth.video.recv.push(8*stats.video.receiving.bytes)),++currentBlock===self._bandwidthAdjuster.interval){currentBlock=0;var totalAudioBw=formatTotalFn(bandwidth.audio.send),totalVideoBw=formatTotalFn(bandwidth.video.send);self._bandwidthAdjuster.useUploadBwOnly||(totalAudioBw+=formatTotalFn(bandwidth.audio.recv),totalVideoBw+=formatTotalFn(bandwidth.video.recv),totalAudioBw/=2,totalVideoBw/=2),totalAudioBw=parseInt(totalAudioBw*(self._bandwidthAdjuster.limitAtPercentage/100)/1e3,10),totalVideoBw=parseInt(totalVideoBw*(self._bandwidthAdjuster.limitAtPercentage/100)/1e3,10),bandwidth={audio:{send:[],recv:[]},video:{send:[],recv:[]}},self.refreshConnection(targetMid,{bandwidth:{audio:totalAudioBw,video:totalVideoBw}})}},!0,!0)},1e3)}},pc.onsignalingstatechange=function(){if(log.debug([targetMid,"RTCSignalingState",null,"Peer connection state changed ->"],pc.signalingState),"AppleWebKit"===AdapterJS.webrtcDetectedType&&pc.signalingState===self.PEER_CONNECTION_STATE.CLOSED)return void setTimeout(function(){pc.signalingStateClosed||self._trigger("peerConnectionState",self.PEER_CONNECTION_STATE.CLOSED,targetMid)},10);self._trigger("peerConnectionState",pc.signalingState,targetMid)},pc.onicegatheringstatechange=function(){log.log([targetMid,"RTCIceGatheringState",null,"Ice gathering state changed ->"],pc.iceGatheringState),self._trigger("candidateGenerationState",pc.iceGatheringState,targetMid)},"firefox"===AdapterJS.webrtcDetectedBrowser&&(pc.removeStream=function(stream){for(var senders=pc.getSenders(),s=0;s<senders.length;s++)for(var tracks=stream.getTracks(),t=0;t<tracks.length;t++)tracks[t]===senders[s].track&&pc.removeTrack(senders[s])}),self._handleIceConnectionStats(pc.iceConnectionState,targetMid),self._handleIceGatheringStats("new",targetMid,!1),pc}},Skylink.prototype._restartMCUConnection=function(callback,doIceRestart,bwOptions){var self=this,listOfPeers=Object.keys(self._peerConnections),listOfPeerRestartErrors={},sendRestartMsgFn=function(peerId){var restartMsg={type:self._SIG_MESSAGE_TYPE.RESTART,mid:self._user.sid,rid:self._room.id,agent:AdapterJS.webrtcDetectedBrowser,version:(AdapterJS.webrtcDetectedVersion||0).toString(),os:window.navigator.platform,userInfo:self._getUserInfo(peerId),target:peerId,weight:self._peerPriorityWeight,receiveOnly:self.getPeerInfo().config.receiveOnly,enableIceTrickle:self._initOptions.enableIceTrickle,enableDataChannel:self._initOptions.enableDataChannel,enableIceRestart:self._enableIceRestart,doIceRestart:self._initOptions.mcuUseRenegoRestart&&!0===doIceRestart&&self._enableIceRestart&&self._peerInformations[peerId]&&self._peerInformations[peerId].config.enableIceRestart,isRestartResend:!1,temasysPluginVersion:AdapterJS.WebRTCPlugin.plugin?AdapterJS.WebRTCPlugin.plugin.VERSION:null,SMProtocolVersion:self.SM_PROTOCOL_VERSION,DTProtocolVersion:self.DT_PROTOCOL_VERSION};self._publishOnly&&(restartMsg.publishOnly={type:self._streams.screenshare&&self._streams.screenshare.stream?"screenshare":"video"}),self._parentId&&(restartMsg.parentId=self._parentId),self._doOffer("MCU",doIceRestart,restartMsg)};if(bwOptions.bandwidth&&"object"==typeof bwOptions.bandwidth&&("number"==typeof bwOptions.bandwidth.audio&&(self._streamsBandwidthSettings.bAS.audio=bwOptions.bandwidth.audio),"number"==typeof bwOptions.bandwidth.video&&(self._streamsBandwidthSettings.bAS.video=bwOptions.bandwidth.video),"number"==typeof bwOptions.bandwidth.data&&(self._streamsBandwidthSettings.bAS.data=bwOptions.bandwidth.data)),bwOptions.googleXBandwidth&&"object"==typeof bwOptions.googleXBandwidth&&("number"==typeof bwOptions.googleXBandwidth.min&&(self._streamsBandwidthSettings.googleX.min=bwOptions.googleXBandwidth.min),"number"==typeof bwOptions.googleXBandwidth.max&&(self._streamsBandwidthSettings.googleX.max=bwOptions.googleXBandwidth.max)),self._initOptions.mcuUseRenegoRestart)self._peerEndOfCandidatesCounter.MCU=self._peerEndOfCandidatesCounter.MCU||{},self._peerEndOfCandidatesCounter.MCU.len=0,sendRestartMsgFn("MCU");else{var peerJoinedFn=function(peerId,peerInfo,isSelf){log.log([null,"PeerConnection",null,"Invoked all peers to restart with MCU. Firing callback"]),"function"==typeof callback&&(Object.keys(listOfPeerRestartErrors).length>0?callback({refreshErrors:listOfPeerRestartErrors,listOfPeers:listOfPeers},null):callback(null,{listOfPeers:listOfPeers}))};self.once("peerJoined",peerJoinedFn,function(peerId,peerInfo,isSelf){return isSelf}),self.leaveRoom(!1,function(error,success){if(error){if("function"==typeof callback){for(var i=0;i<listOfPeers.length;i++)listOfPeerRestartErrors[listOfPeers[i]]=error;callback({refreshErrors:listOfPeerRestartErrors,listOfPeers:listOfPeers},null)}}else self.joinRoom(self._selectedRoom,{bandwidth:bwOptions.bandwidth||{},googleXBandwidth:bwOptions.googleXBandwidth||{},sdpSettings:clone(self._sdpSettings),voiceActivityDetection:self._voiceActivityDetection,publishOnly:!!self._publishOnly,parentId:self._parentId||null,autoBandwidthAdjustment:self._bandwidthAdjuster})})}},Skylink.prototype._parseConnectionStats=function(prevStats,stats,prop){var nTime=stats.timestamp,oTime=prevStats?prevStats.timestamp||0:0,nVal=parseFloat(stats[prop]||"0",10),oVal=parseFloat(prevStats?prevStats[prop]||"0":"0",10);return new Date(nTime).getTime()===new Date(oTime).getTime()?nVal:parseFloat(((nVal-oVal)/(nTime-oTime)*1e3).toFixed(3)||"0",10)},Skylink.prototype._signalingEndOfCandidates=function(targetMid){var self=this;if(self._peerEndOfCandidatesCounter[targetMid]&&self._peerConnections[targetMid]&&self._peerConnections[targetMid].signalingState!==self.PEER_CONNECTION_STATE.CLOSED&&self._peerConnections[targetMid].remoteDescription&&self._peerConnections[targetMid].remoteDescription.sdp&&"number"==typeof self._peerEndOfCandidatesCounter[targetMid].expectedLen&&self._peerEndOfCandidatesCounter[targetMid].len>=self._peerEndOfCandidatesCounter[targetMid].expectedLen&&(!self._peerCandidatesQueue[targetMid]||0===self._peerCandidatesQueue[targetMid].length)&&!self._peerEndOfCandidatesCounter[targetMid].hasSet){log.debug([targetMid,"RTCPeerConnection",null,"Signaling of end-of-candidates remote ICE gathering."]),self._peerEndOfCandidatesCounter[targetMid].hasSet=!0;try{if("edge"===AdapterJS.webrtcDetectedBrowser){for(var mLineCounter=-1,addedMids=[],sdpLines=self._peerConnections[targetMid].remoteDescription.sdp.split("\r\n"),rejected=!1,i=0;i<sdpLines.length;i++)if(0===sdpLines[i].indexOf("m="))rejected="0"===sdpLines[i].split(" ")[1],mLineCounter++;else if(0===sdpLines[i].indexOf("a=mid:")&&!rejected){var mid=sdpLines[i].split("a=mid:")[1]||"";if(mid&&-1===addedMids.indexOf(mid)&&(addedMids.push(mid),self._addIceCandidate(targetMid,"endofcan-"+(new Date).getTime(),new RTCIceCandidate({sdpMid:mid,sdpMLineIndex:mLineCounter,candidate:"candidate:1 1 udp 1 0.0.0.0 9 typ endOfCandidates"})),self._peerConnectionConfig.bundlePolicy===self.BUNDLE_POLICY.MAX_BUNDLE))break}}else AdapterJS&&!self._isLowerThanVersion(AdapterJS.VERSION,"0.14.0")&&self._peerConnections[targetMid].addIceCandidate(null);self._gatheredCandidates[targetMid]&&self._trigger("candidatesGathered",targetMid,{expected:self._peerEndOfCandidatesCounter[targetMid].expectedLen||0,received:self._peerEndOfCandidatesCounter[targetMid].len||0,
processed:self._gatheredCandidates[targetMid].receiving.srflx.length+self._gatheredCandidates[targetMid].receiving.relay.length+self._gatheredCandidates[targetMid].receiving.host.length})}catch(error){log.error([targetMid,"RTCPeerConnection",null,"Failed signaling end-of-candidates ->"],error)}}},Skylink.prototype._compareTrackCounts=function(targetMid){var self=this,pc=self._peerConnections[targetMid];if(pc&&"function"==typeof pc.getTransceivers){var transceivers=pc.getTransceivers(),transceiverTypeCount={audio:0,video:0},checkDiffAndAddTransceivers=function(kind,requestedKindCount,actualKindCount,peerConnection){if(requestedKindCount>actualKindCount)for(var diff=requestedKindCount-actualKindCount;diff;)peerConnection.addTransceiver(kind),diff-=1};if(transceivers&&transceivers.length)for(var i=0;i<transceivers.length;i++)if(transceivers[i]&&transceivers[i].receiver&&transceivers[i].receiver.track){var kind=transceivers[i].receiver.track.kind;transceiverTypeCount[kind]+=1}checkDiffAndAddTransceivers("video",self._currentRequestedTracks.video,transceiverTypeCount.video,pc),checkDiffAndAddTransceivers("audio",self._currentRequestedTracks.audio,transceiverTypeCount.audio,pc)}},Skylink.prototype._replaceTrack=function(trackIDToCompare,trackToReplace){var self=this;if(Object.keys(self._peerConnections).length>0)for(var peerIds=Object.keys(self._peerConnections),i=0;i<peerIds.length;i++)for(var pc=self._peerConnections[peerIds[i]],senders=pc.getSenders(),y=0;y<senders.length;y++){var sender=senders[y];sender.track&&sender.track.id===trackIDToCompare&&sender.replaceTrack(trackToReplace)}},Skylink.prototype.setUserData=function(userData){var self=this,updatedUserData="";void 0!==userData&&null!==userData&&(updatedUserData=userData),this._userData=updatedUserData,self._inRoom?(log.log("Updated userData -> ",updatedUserData),self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.UPDATE_USER,mid:self._user.sid,rid:self._room.id,userData:updatedUserData,stamp:(new Date).getTime()}),self._trigger("peerUpdated",self._user.sid,self.getPeerInfo(),!0)):log.warn("User is not in the room. Broadcast of updated information will be dropped")},Skylink.prototype.getUserData=function(peerId){if(peerId&&this._peerInformations[peerId]){var userData=this._peerInformations[peerId].userData;return null!==userData&&void 0!==userData||(userData=""),userData}return this._userData},Skylink.prototype.getPeerInfo=function(peerId){var peerInfo=null;return"string"==typeof peerId&&"object"==typeof this._peerInformations[peerId]?(peerInfo=clone(this._peerInformations[peerId]),peerInfo.room=clone(this._selectedRoom),peerInfo.settings.bandwidth=peerInfo.settings.bandwidth||{},peerInfo.settings.googleXBandwidth=peerInfo.settings.googleXBandwidth||{},"boolean"==typeof peerInfo.settings.video||peerInfo.settings.video&&"object"==typeof peerInfo.settings.video||(peerInfo.settings.video=!1,peerInfo.mediaStatus.audioMuted=!0),"boolean"==typeof peerInfo.settings.audio||peerInfo.settings.audio&&"object"==typeof peerInfo.settings.audio||(peerInfo.settings.audio=!1,peerInfo.mediaStatus.audioMuted=!0),"boolean"!=typeof peerInfo.mediaStatus.audioMuted&&(peerInfo.mediaStatus.audioMuted=!0),"boolean"!=typeof peerInfo.mediaStatus.videoMuted&&(peerInfo.mediaStatus.videoMuted=!0),peerInfo.settings.maxBandwidth&&(peerInfo.settings.bandwidth=clone(peerInfo.settings.maxBandwidth),delete peerInfo.settings.maxBandwidth),peerInfo.settings.video&&"object"==typeof peerInfo.settings.video&&peerInfo.settings.video.customSettings&&"object"==typeof peerInfo.settings.video.customSettings&&(peerInfo.settings.video.customSettings.frameRate&&(peerInfo.settings.video.frameRate=clone(peerInfo.settings.video.customSettings.frameRate)),peerInfo.settings.video.customSettings.facingMode&&(peerInfo.settings.video.facingMode=clone(peerInfo.settings.video.customSettings.facingMode)),peerInfo.settings.video.customSettings.width&&(peerInfo.settings.video.resolution=peerInfo.settings.video.resolution||{},peerInfo.settings.video.resolution.width=clone(peerInfo.settings.video.customSettings.width)),peerInfo.settings.video.customSettings.height&&(peerInfo.settings.video.resolution=peerInfo.settings.video.resolution||{},peerInfo.settings.video.resolution.height=clone(peerInfo.settings.video.customSettings.height)),peerInfo.settings.video.customSettings.facingMode&&(peerInfo.settings.video.facingMode=clone(peerInfo.settings.video.customSettings.facingMode))),peerInfo.settings.audio&&"object"==typeof peerInfo.settings.audio&&(peerInfo.settings.audio.stereo=!0===peerInfo.settings.audio.stereo),null!==peerInfo.userData&&void 0!==peerInfo.userData||(peerInfo.userData=""),peerInfo.parentId=peerInfo.parentId||null,"MCU"===peerId?(peerInfo.config.receiveOnly=!0,peerInfo.config.publishOnly=!1):this._hasMCU&&(peerInfo.config.receiveOnly=!1,peerInfo.config.publishOnly=!0),this._sdpSettings.direction.audio.receive||(peerInfo.settings.audio=!1,peerInfo.mediaStatus.audioMuted=!0),this._sdpSettings.direction.video.receive||(peerInfo.settings.video=!1,peerInfo.mediaStatus.videoMuted=!0),this._sdpSettings.connection.audio||(peerInfo.settings.audio=!1,peerInfo.mediaStatus.audioMuted=!0),this._sdpSettings.connection.video||(peerInfo.settings.video=!1,peerInfo.mediaStatus.videoMuted=!0),peerInfo.settings.data=!!(this._dataChannels[peerId]&&this._dataChannels[peerId].main&&this._dataChannels[peerId].main.channel&&this._dataChannels[peerId].main.channel.readyState===this.DATA_CHANNEL_STATE.OPEN),peerInfo.connected=this._peerConnStatus[peerId]&&!!this._peerConnStatus[peerId].connected,peerInfo.init=this._peerConnStatus[peerId]&&!!this._peerConnStatus[peerId].init,this._sdpSessions[peerId]&&this._sdpSessions[peerId].remote&&this._sdpSessions[peerId].remote.connection&&"object"==typeof this._sdpSessions[peerId].remote.connection&&(this._sdpSessions[peerId].remote.connection.audio&&this._sdpSessions[peerId].remote.connection.audio.indexOf("send")>-1||(peerInfo.settings.audio=!1,peerInfo.mediaStatus.audioMuted=!0),this._sdpSessions[peerId].remote.connection.video&&this._sdpSessions[peerId].remote.connection.video.indexOf("send")>-1||(peerInfo.settings.video=!1,peerInfo.mediaStatus.videoMuted=!0),this._sdpSessions[peerId].remote.connection.data&&this._sdpSessions[peerId].remote.connection.data.indexOf("send")>-1||(peerInfo.settings.data=!1))):(peerInfo={userData:clone(this._userData),settings:{audio:!1,video:!1},mediaStatus:clone(this._streamsMutedSettings),agent:{name:AdapterJS.webrtcDetectedBrowser,version:AdapterJS.webrtcDetectedVersion,os:window.navigator.platform,pluginVersion:AdapterJS.WebRTCPlugin.plugin?AdapterJS.WebRTCPlugin.plugin.VERSION:null,SMProtocolVersion:this.SMProtocolVersion,DTProtocolVersion:this.DTProtocolVersion},room:clone(this._selectedRoom),config:{enableDataChannel:this._initOptions.enableDataChannel,enableIceTrickle:this._initOptions.enableIceTrickle,enableIceRestart:this._enableIceRestart,priorityWeight:this._peerPriorityWeight,receiveOnly:!1,publishOnly:!!this._publishOnly},connected:null,init:null},null!==peerInfo.userData&&void 0!==peerInfo.userData||(peerInfo.userData=""),this._streams.screenshare?peerInfo.settings=clone(this._streams.screenshare.settings):this._streams.userMedia&&(peerInfo.settings=clone(this._streams.userMedia.settings)),peerInfo.settings.bandwidth=clone(this._streamsBandwidthSettings.bAS),peerInfo.settings.googleXBandwidth=clone(this._streamsBandwidthSettings.googleX),peerInfo.parentId=this._parentId?this._parentId:null,peerInfo.config.receiveOnly=!peerInfo.settings.video&&!peerInfo.settings.audio,peerInfo.settings.data=this._initOptions.enableDataChannel&&this._sdpSettings.connection.data,peerInfo.settings.audio&&"object"==typeof peerInfo.settings.audio&&("boolean"==typeof this._initOptions.codecParams.audio.opus.stereo&&(peerInfo.settings.audio.stereo=this._initOptions.codecParams.audio.opus.stereo),"boolean"==typeof this._initOptions.codecParams.audio.opus.usedtx&&(peerInfo.settings.audio.usedtx=this._initOptions.codecParams.audio.opus.usedtx),"number"==typeof this._initOptions.codecParams.audio.opus.maxplaybackrate&&(peerInfo.settings.audio.maxplaybackrate=this._initOptions.codecParams.audio.opus.maxplaybackrate),"boolean"==typeof this._initOptions.codecParams.audio.opus.useinbandfec&&(peerInfo.settings.audio.useinbandfec=this._initOptions.codecParams.audio.opus.useinbandfec))),peerInfo.settings.audio||(peerInfo.mediaStatus.audioMuted=!0),peerInfo.settings.video||(peerInfo.mediaStatus.videoMuted=!0),peerInfo.settings.audio||peerInfo.settings.video||(peerInfo.config.receiveOnly=!0,peerInfo.config.publishOnly=!1),peerInfo},Skylink.prototype.getPeersInRoom=function(){for(var listOfPeersInfo={},listOfPeers=Object.keys(this._peerInformations),i=0;i<listOfPeers.length;i++)listOfPeersInfo[listOfPeers[i]]=clone(this.getPeerInfo(listOfPeers[i])),listOfPeersInfo[listOfPeers[i]].isSelf=!1;return this._user&&this._user.sid&&(listOfPeersInfo[this._user.sid]=clone(this.getPeerInfo()),listOfPeersInfo[this._user.sid].isSelf=!0),listOfPeersInfo},Skylink.prototype.getPeersStream=function(){for(var listOfPeersStreams={},listOfPeers=Object.keys(this._peerConnections),i=0;i<listOfPeers.length;i++){var stream=null,streamId=null;this._peerConnections[listOfPeers[i]]&&this._peerConnections[listOfPeers[i]].remoteDescription&&this._peerConnections[listOfPeers[i]].remoteDescription.sdp&&(this._sdpSettings.direction.audio.receive||this._sdpSettings.direction.video.receive)&&(stream=this._peerConnections[listOfPeers[i]].remoteStream,streamId=stream&&(this._peerConnections[listOfPeers[i]].remoteStreamId||stream.id||stream.label)),listOfPeersStreams[listOfPeers[i]]={streamId:streamId,stream:stream,isSelf:!1}}if(this._user&&this._user.sid){var selfStream=null;this._streams.screenshare&&this._streams.screenshare.stream?selfStream=this._streams.screenshare.stream:this._streams.userMedia&&this._streams.userMedia.stream&&(selfStream=this._streams.userMedia.stream),listOfPeersStreams[this._user.sid]={streamId:selfStream?selfStream.id||selfStream.label||null:null,stream:selfStream,isSelf:!0}}return listOfPeersStreams},Skylink.prototype.getPeersDatachannels=function(){for(var listOfPeersDatachannels={},listOfPeers=Object.keys(this._peerConnections),i=0;i<listOfPeers.length;i++)if(listOfPeersDatachannels[listOfPeers[i]]={},this._dataChannels[listOfPeers[i]])for(var channelProp in this._dataChannels[listOfPeers[i]])if(this._dataChannels[listOfPeers[i]].hasOwnProperty(channelProp)&&this._dataChannels[listOfPeers[i]][channelProp]){var channel=this._dataChannels[listOfPeers[i]][channelProp];listOfPeersDatachannels[listOfPeers[i]][channel.channelName]=this._getDataChannelBuffer(listOfPeers[i],channelProp),listOfPeersDatachannels[listOfPeers[i]][channel.channelName].channelName=channel.channelName,listOfPeersDatachannels[listOfPeers[i]][channel.channelName].channelType=channel.channelType,listOfPeersDatachannels[listOfPeers[i]][channel.channelName].channelProp=channelProp,listOfPeersDatachannels[listOfPeers[i]][channel.channelName].currentTransferId=channel.transferId,listOfPeersDatachannels[listOfPeers[i]][channel.channelName].currentStreamId=channel.streamId,listOfPeersDatachannels[listOfPeers[i]][channel.channelName].readyState=channel.channel?channel.channel.readyState:self.DATA_CHANNEL_STATE.CREATE_ERROR}return listOfPeersDatachannels},Skylink.prototype.getCurrentDataTransfers=function(){var listOfDataTransfers={};if(!this._user||!this._user.sid)return{};for(var prop in this._dataTransfers)this._dataTransfers.hasOwnProperty(prop)&&this._dataTransfers[prop]&&(listOfDataTransfers[prop]={transferInfo:this._getTransferInfo(prop,this._user.sid,!0,!0,!0),isSelf:this._dataTransfers[prop].senderPeerId===this._user.sid,peerId:this._dataTransfers[prop].senderPeerId||this._user.sid});return listOfDataTransfers},Skylink.prototype.getCurrentDataStreamsSession=function(){var listOfDataStreams={};if(!this._user||!this._user.sid)return{};for(var prop in this._dataStreams)this._dataStreams.hasOwnProperty(prop)&&this._dataStreams[prop]&&(listOfDataStreams[prop]={streamInfo:{chunkType:"string"===this._dataStreams[prop].sessionChunkType?this.DATA_TRANSFER_DATA_TYPE.STRING:this.DATA_TRANSFER_DATA_TYPE.BLOB,isPrivate:this._dataStreams[prop].isPrivate,isStringStream:"string"===this._dataStreams[prop].sessionChunkType,senderPeerId:this._dataStreams[prop].senderPeerId},isSelf:this._dataStreams[prop].senderPeerId===this._user.sid,peerId:this._dataStreams[prop].senderPeerId||this._user.sid});return listOfDataStreams},Skylink.prototype.getPeersCustomSettings=function(){var self=this,customSettingsList={};for(var peerId in self._peerInformations)self._peerInformations.hasOwnProperty(peerId)&&self._peerInformations[peerId]&&(customSettingsList[peerId]=self._getPeerCustomSettings(peerId));return customSettingsList},Skylink.prototype._getPeerCustomSettings=function(peerId){var self=this,customSettings={settings:{audio:!1,video:!1,data:!1,bandwidth:clone(self._streamsBandwidthSettings.bAS),googleXBandwidth:clone(self._streamsBandwidthSettings.googleX)},mediaStatus:{audioMuted:!0,videoMuted:!0}},usePeerId=self._hasMCU?"MCU":peerId;if(!self._peerInformations[usePeerId])return customSettings;if(self._peerConnections[usePeerId]&&self._peerConnections[usePeerId].signalingState!==self.PEER_CONNECTION_STATE.CLOSED){var stream=self._peerConnections[usePeerId].localStream,streamId=self._peerConnections[usePeerId].localStreamId||stream&&(stream.id||stream.label);if(customSettings.settings.data=self._initOptions.enableDataChannel&&self._peerInformations[usePeerId].config.enableDataChannel,stream&&(self._streams.screenshare&&self._streams.screenshare.stream&&streamId===(self._streams.screenshare.stream.id||self._streams.screenshare.stream.label)?(customSettings.settings.audio=clone(self._streams.screenshare.settings.audio),customSettings.settings.video=clone(self._streams.screenshare.settings.video),customSettings.mediaStatus=clone(self._streamsMutedSettings)):self._streams.userMedia&&self._streams.userMedia.stream&&streamId===(self._streams.userMedia.stream.id||self._streams.userMedia.stream.label)&&(customSettings.settings.audio=clone(self._streams.userMedia.settings.audio),customSettings.settings.video=clone(self._streams.userMedia.settings.video),customSettings.mediaStatus=clone(self._streamsMutedSettings)),!("function"!=typeof self._peerConnections[usePeerId].getSenders||self._initOptions.useEdgeWebRTC&&window.msRTCPeerConnection))){for(var senders=self._peerConnections[usePeerId].getSenders(),hasSendAudio=!1,hasSendVideo=!1,i=0;i<senders.length;i++)senders[i]&&senders[i].track&&senders[i].track.kind&&("audio"===senders[i].track.kind?hasSendAudio=!0:"video"===senders[i].track.kind&&(hasSendVideo=!0));hasSendAudio||(customSettings.settings.audio=!1,customSettings.mediaStatus.audioMuted=!0),hasSendVideo||(customSettings.settings.video=!1,customSettings.mediaStatus.videoMuted=!0)}}return self._peerCustomConfigs[usePeerId]&&(self._peerCustomConfigs[usePeerId].bandwidth&&"object"==typeof self._peerCustomConfigs[usePeerId].bandwidth&&("number"==typeof self._peerCustomConfigs[usePeerId].bandwidth.audio&&(customSettings.settings.bandwidth.audio=self._peerCustomConfigs[usePeerId].bandwidth.audio),"number"==typeof self._peerCustomConfigs[usePeerId].bandwidth.video&&(customSettings.settings.bandwidth.video=self._peerCustomConfigs[usePeerId].bandwidth.video),"number"==typeof self._peerCustomConfigs[usePeerId].bandwidth.data&&(customSettings.settings.bandwidth.data=self._peerCustomConfigs[usePeerId].bandwidth.data)),self._peerCustomConfigs[usePeerId].googleXBandwidth&&"object"==typeof self._peerCustomConfigs[usePeerId].googleXBandwidth&&("number"==typeof self._peerCustomConfigs[usePeerId].googleXBandwidth.min&&(customSettings.settings.googleXBandwidth.min=self._peerCustomConfigs[usePeerId].googleXBandwidth.min),"number"==typeof self._peerCustomConfigs[usePeerId].googleXBandwidth.max&&(customSettings.settings.googleXBandwidth.max=self._peerCustomConfigs[usePeerId].googleXBandwidth.max))),self._sdpSessions[usePeerId]&&self._sdpSessions[usePeerId].local&&self._sdpSessions[usePeerId].local.connection&&"object"==typeof self._sdpSessions[usePeerId].local.connection&&(self._sdpSessions[usePeerId].local.connection.audio&&self._sdpSessions[usePeerId].local.connection.audio.indexOf("send")>-1||(customSettings.settings.audio=!1,customSettings.mediaStatus.audioMuted=!0),self._sdpSessions[usePeerId].local.connection.video&&self._sdpSessions[usePeerId].local.connection.video.indexOf("send")>-1||(customSettings.settings.video=!1,customSettings.mediaStatus.videoMuted=!0),self._sdpSessions[usePeerId].local.connection.data&&self._sdpSessions[usePeerId].local.connection.data.indexOf("send")>-1||(customSettings.settings.data=!1)),customSettings},Skylink.prototype._getUserInfo=function(peerId){var userInfo=clone(this.getPeerInfo()),userCustomInfoForPeer=peerId?this._getPeerCustomSettings(peerId):null;return userCustomInfoForPeer&&"object"==typeof userCustomInfoForPeer&&(userInfo.settings=userCustomInfoForPeer.settings,userInfo.mediaStatus=userCustomInfoForPeer.mediaStatus),userInfo.settings.video&&"object"==typeof userInfo.settings.video&&(userInfo.settings.video.customSettings={},userInfo.settings.video.frameRate&&"object"==typeof userInfo.settings.video.frameRate&&(userInfo.settings.video.customSettings.frameRate=clone(userInfo.settings.video.frameRate),userInfo.settings.video.frameRate=-1),userInfo.settings.video.facingMode&&"object"==typeof userInfo.settings.video.facingMode&&(userInfo.settings.video.customSettings.facingMode=clone(userInfo.settings.video.facingMode),userInfo.settings.video.facingMode="-1"),userInfo.settings.video.resolution&&"object"==typeof userInfo.settings.video.resolution&&(userInfo.settings.video.resolution.width&&"object"==typeof userInfo.settings.video.resolution.width&&(userInfo.settings.video.customSettings.width=clone(userInfo.settings.video.width),userInfo.settings.video.resolution.width=-1),userInfo.settings.video.resolution.height&&"object"==typeof userInfo.settings.video.resolution.height&&(userInfo.settings.video.customSettings.height=clone(userInfo.settings.video.height),userInfo.settings.video.resolution.height=-1))),userInfo.settings.bandwidth&&(userInfo.settings.maxBandwidth=clone(userInfo.settings.bandwidth),delete userInfo.settings.bandwidth),this._getSDPCommonSupports(peerId).video||(userInfo.settings.video=!1,userInfo.mediaStatus.videoMuted=!0),this._getSDPCommonSupports(peerId).audio||(userInfo.settings.audio=!1,userInfo.mediaStatus.audioMuted=!0),delete userInfo.agent,delete userInfo.room,delete userInfo.config,delete userInfo.parentId,delete userInfo.settings.data,userInfo},Skylink.prototype._doOffer=function(targetMid,iceRestart,mergeMessageWithOffer){var self=this,pc=self._peerConnections[targetMid];if(!pc)return void log.warn([targetMid,"RTCSessionDescription","offer","Dropping of creating of offer as connection does not exists"]);if(pc.signalingState!==self.PEER_CONNECTION_STATE.STABLE)return void log.warn([targetMid,"RTCSessionDescription","offer",'Dropping of creating of offer as signalingState is not "'+self.PEER_CONNECTION_STATE.STABLE+'" ->'],pc.signalingState);var offerConstraints={offerToReceiveAudio:!(!self._sdpSettings.connection.audio&&"MCU"!==targetMid)&&self._getSDPCommonSupports(targetMid).video,offerToReceiveVideo:!(!self._sdpSettings.connection.video&&"MCU"!==targetMid)&&self._getSDPCommonSupports(targetMid).audio,iceRestart:!!((self._peerInformations[targetMid]||{}).config||{}).enableIceRestart&&iceRestart&&self._enableIceRestart,voiceActivityDetection:self._voiceActivityDetection};self._hasMCU&&"MCU"!==targetMid||self._addLocalMediaStreams(targetMid),self._initOptions.enableDataChannel&&self._peerInformations[targetMid]&&self._peerInformations[targetMid].config.enableDataChannel&&(self._dataChannels[targetMid]&&self._dataChannels[targetMid].main||(self._createDataChannel(targetMid),self._peerConnections[targetMid].hasMainChannel=!0)),log.debug([targetMid,null,null,"Creating offer with config:"],offerConstraints),pc.endOfCandidates=!1,self._peerConnStatus[targetMid]&&(self._peerConnStatus[targetMid].sdpConstraints=offerConstraints);var onSuccessCbFn=function(offer){log.debug([targetMid,null,null,"Created offer"],offer),self._handleNegotiationStats("create_offer",targetMid,offer,!1),self._setLocalAndSendMessage(targetMid,offer,mergeMessageWithOffer)},onErrorCbFn=function(error){log.error([targetMid,null,null,"Failed creating an offer:"],error),self._handleNegotiationStats("error_create_offer",targetMid,null,!1,error),self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ERROR,targetMid,error)};pc.createOffer(onSuccessCbFn,onErrorCbFn,"plugin"===AdapterJS.webrtcDetectedType?{mandatory:{OfferToReceiveAudio:offerConstraints.offerToReceiveAudio,OfferToReceiveVideo:offerConstraints.offerToReceiveVideo,iceRestart:offerConstraints.iceRestart,voiceActivityDetection:offerConstraints.voiceActivityDetection}}:offerConstraints)},Skylink.prototype._doAnswer=function(targetMid){var self=this;log.log([targetMid,null,null,"Creating answer with config:"],self._room.connection.sdpConstraints);var pc=self._peerConnections[targetMid];if(!pc)return void log.warn([targetMid,"RTCSessionDescription","answer","Dropping of creating of answer as connection does not exists"]);if(pc.signalingState!==self.PEER_CONNECTION_STATE.HAVE_REMOTE_OFFER)return void log.warn([targetMid,"RTCSessionDescription","answer",'Dropping of creating of answer as signalingState is not "'+self.PEER_CONNECTION_STATE.HAVE_REMOTE_OFFER+'" ->'],pc.signalingState);var answerConstraints="edge"===AdapterJS.webrtcDetectedBrowser?{offerToReceiveVideo:!(!self._sdpSettings.connection.audio&&"MCU"!==targetMid)&&self._getSDPCommonSupports(targetMid,pc.remoteDescription).video,offerToReceiveAudio:!(!self._sdpSettings.connection.video&&"MCU"!==targetMid)&&self._getSDPCommonSupports(targetMid,pc.remoteDescription).audio,voiceActivityDetection:self._voiceActivityDetection}:void 0;self._hasMCU&&"MCU"!==targetMid||self._addLocalMediaStreams(targetMid),self._peerConnStatus[targetMid]&&(self._peerConnStatus[targetMid].sdpConstraints=answerConstraints);var onSuccessCbFn=function(answer){log.debug([targetMid,null,null,"Created answer"],answer),self._handleNegotiationStats("create_answer",targetMid,answer,!1),"firefox"===AdapterJS.webrtcDetectedBrowser&&(self._setOriginalDTLSRole(answer,!1),answer.sdp=self._modifyDTLSRole(answer)),self._setLocalAndSendMessage(targetMid,answer)},onErrorCbFn=function(error){log.error([targetMid,null,null,"Failed creating an answer:"],error),self._handleNegotiationStats("error_create_answer",targetMid,null,!1,error),self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ERROR,targetMid,error)};pc.createAnswer(onSuccessCbFn,onErrorCbFn,answerConstraints)},Skylink.prototype._setLocalAndSendMessage=function(targetMid,_sessionDescription,mergeMessage){var self=this,pc=self._peerConnections[targetMid];if(!_sessionDescription||!_sessionDescription.sdp)return void log.warn([targetMid,"RTCSessionDescription",null,"Local session description is undefined ->"],_sessionDescription);if(!pc)return log.warn([targetMid,"RTCSessionDescription",_sessionDescription.type,"Local session description will not be set as connection does not exists ->"],_sessionDescription),void self._handleNegotiationStats("dropped_"+sessionDescription.type,targetMid,sessionDescription,!1,"Peer connection does not exists");if(_sessionDescription.type===self.HANDSHAKE_PROGRESS.OFFER&&pc.signalingState!==self.PEER_CONNECTION_STATE.STABLE)return log.warn([targetMid,"RTCSessionDescription",_sessionDescription.type,'Local session description will not be set as signaling state is "'+pc.signalingState+'" ->'],_sessionDescription),void self._handleNegotiationStats("dropped_offer",targetMid,sessionDescription,!1,'Peer connection state is "'+pc.signalingState+'"');if(_sessionDescription.type===self.HANDSHAKE_PROGRESS.ANSWER&&pc.signalingState!==self.PEER_CONNECTION_STATE.HAVE_REMOTE_OFFER)return log.warn([targetMid,"RTCSessionDescription",_sessionDescription.type,'Local session description will not be set as signaling state is "'+pc.signalingState+'" ->'],_sessionDescription),void self._handleNegotiationStats("dropped_answer",targetMid,sessionDescription,!1,'Peer connection state is "'+pc.signalingState+'"');if(pc.processingLocalSDP)return log.warn([targetMid,"RTCSessionDescription",_sessionDescription.type,"Local session description will not be set as another is being processed ->"],_sessionDescription),void self._handleNegotiationStats("dropped_"+sessionDescription.type,targetMid,sessionDescription,!1,"Peer connection is currently processing an existing sdp");pc.processingLocalSDP=!0;var sessionDescription={type:_sessionDescription.type,sdp:_sessionDescription.sdp};sessionDescription.sdp=self._removeSDPFirefoxH264Pref(targetMid,sessionDescription),sessionDescription.sdp=self._setSDPCodecParams(targetMid,sessionDescription),sessionDescription.sdp=self._removeSDPUnknownAptRtx(targetMid,sessionDescription),sessionDescription.sdp=self._removeSDPCodecs(targetMid,sessionDescription),sessionDescription.sdp=self._handleSDPConnectionSettings(targetMid,sessionDescription,"local"),sessionDescription.sdp=self._removeSDPREMBPackets(targetMid,sessionDescription),sessionDescription.sdp=self._setSCTPport(targetMid,sessionDescription),self._peerConnectionConfig.disableBundle&&(sessionDescription.sdp=sessionDescription.sdp.replace(/a=group:BUNDLE.*\r\n/gi,"")),log.log([targetMid,"RTCSessionDescription",sessionDescription.type,"Local session description updated ->"],sessionDescription.sdp);var onSuccessCbFn=function(){if(log.debug([targetMid,"RTCSessionDescription",sessionDescription.type,"Local session description has been set ->"],sessionDescription),pc.processingLocalSDP=!1,self._handleNegotiationStats("set_"+sessionDescription.type,targetMid,sessionDescription,!1),self._trigger("handshakeProgress",sessionDescription.type,targetMid),sessionDescription.type===self.HANDSHAKE_PROGRESS.ANSWER?pc.setAnswer="local":pc.setOffer="local",!self._initOptions.enableIceTrickle&&!pc.gathered)return void log.log([targetMid,"RTCSessionDescription",sessionDescription.type,"Local session description sending is halted to complete ICE gathering."]);var messageToSend={type:sessionDescription.type,sdp:sessionDescription.sdp,mid:self._user.sid,target:targetMid,rid:self._room.id,userInfo:self._getUserInfo(targetMid)};if(mergeMessage&&Object.keys(mergeMessage).length)for(var keys=Object.keys(mergeMessage),currentMessageKeys=Object.keys(messageToSend),keyIndex=0;keyIndex<keys.length;keyIndex++){var key=keys[keyIndex];-1===currentMessageKeys.indexOf(key)&&(messageToSend[key]=mergeMessage[key])}self._sendChannelMessage(messageToSend),self._handleNegotiationStats(sessionDescription.type,targetMid,sessionDescription,!1)},onErrorCbFn=function(error){log.error([targetMid,"RTCSessionDescription",sessionDescription.type,"Local description failed setting ->"],error),pc.processingLocalSDP=!1,self._handleNegotiationStats("error_set_"+sessionDescription.type,targetMid,sessionDescription,!1,error),self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ERROR,targetMid,error)};pc.setLocalDescription(new RTCSessionDescription(sessionDescription),onSuccessCbFn,onErrorCbFn)},Skylink.prototype.getPeers=function(showAll,callback){var self=this;return self._isPrivileged?self._initOptions.appKey?("function"==typeof showAll&&(callback=showAll,showAll=!1),self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.GET_PEERS,showAll:showAll||!1}),self._trigger("getPeersStateChange",self.GET_PEERS_STATE.ENQUIRED,self._user.sid,null),log.log("Enquired server for peers within the realm"),void("function"==typeof callback&&self.once("getPeersStateChange",function(state,privilegedPeerId,peerList){callback(null,peerList)},function(state,privilegedPeerId,peerList){return state===self.GET_PEERS_STATE.RECEIVED}))):void log.warn("App key is not defined. Please authenticate again."):void log.warn("Please upgrade your key to privileged to use this function")},Skylink.prototype.introducePeer=function(sendingPeerId,receivingPeerId){var self=this;if(!self._isPrivileged)return log.warn("Please upgrade your key to privileged to use this function"),void self._trigger("introduceStateChange",self.INTRODUCE_STATE.ERROR,self._user.sid,sendingPeerId,receivingPeerId,"notPrivileged");var introduceMsg={type:self._SIG_MESSAGE_TYPE.INTRODUCE,sendingPeerId:sendingPeerId,receivingPeerId:receivingPeerId};self._sendChannelMessage(introduceMsg),self._handleSessionStats(introduceMsg),self._trigger("introduceStateChange",self.INTRODUCE_STATE.INTRODUCING,self._user.sid,sendingPeerId,receivingPeerId,null),log.log("Introducing",sendingPeerId,"to",receivingPeerId)},Skylink.prototype.joinRoom=function(room,options,callback){var self=this,selectedRoom=self._initOptions.defaultRoom,previousRoom=self._selectedRoom,mediaOptions={},timestamp=(new Date).getTime()+Math.floor(1e4*Math.random());self._joinRoomManager.timestamp=timestamp,room&&"string"==typeof room?selectedRoom=room:room&&"object"==typeof room?mediaOptions=room:"function"==typeof room&&(callback=room),options&&"object"==typeof options?mediaOptions=options:"function"==typeof options&&(callback=options);var resolveAsErrorFn=function(error,tryRoom,readyState){log.error(error),"function"==typeof callback&&callback({room:tryRoom,errorCode:readyState||null,error:error instanceof Error?error:new Error(JSON.stringify(error))})},resolveAsWarningFn=function(error,tryRoom){log.warn(error+" room: "+tryRoom)},joinRoomFn=function(){if(self._joinRoomManager.timestamp!==timestamp)return void resolveAsWarningFn("joinRoom() process did not complete",selectedRoom);self._initSelectedRoom(selectedRoom,function(initError,initSuccess){return initError?void resolveAsErrorFn(initError.error,self._selectedRoom,self._readyState):self._joinRoomManager.timestamp!==timestamp?void resolveAsWarningFn("joinRoom() process did not complete",selectedRoom):void self._waitForOpenChannel(mediaOptions||{},timestamp,function(error,success){if(error)return void resolveAsErrorFn(error,self._selectedRoom,self._readyState);if(self._joinRoomManager.timestamp!==timestamp)return void resolveAsWarningFn("joinRoom() process did not complete",selectedRoom);if("AppleWebKit"===AdapterJS.webrtcDetectedType){var checkStream=self._streams.screenshare&&self._streams.screenshare.stream?self._streams.screenshare.stream:self._streams.userMedia&&self._streams.userMedia.stream?self._streams.userMedia.stream:null;checkStream&&0!==checkStream.getTracks().length?0===checkStream.getAudioTracks().length?log.warn("Note that receiving audio streams may fail as safari 11 needs stream with audio and video tracks and not just with video tracks"):0===checkStream.getVideoTracks().length&&log.warn("Note that receiving video streams may fail as safari 11 needs stream with audio and video tracks and not just with audio tracks"):log.warn("Note that receiving audio and video streams may fail as safari 11 needs stream with audio and video tracks")}if("function"==typeof callback){var peerOnJoin=function(peerId,peerInfo,isSelf){self.off("systemAction",peerFailedJoin),self.off("channelClose",peerSocketFailedJoin),log.info([null,"Room",selectedRoom,"Connected to Room ->"],peerInfo),callback(null,{room:self._selectedRoom,peerId:peerId,peerInfo:peerInfo})},peerFailedJoin=function(action,message){self.off("peerJoined",peerOnJoin),self.off("channelClose",peerSocketFailedJoin),log.error([null,"Room",selectedRoom,"Failed connecting to Room ->"],message),resolveAsErrorFn(new Error(message),self._selectedRoom,self._readyState)},peerSocketFailedJoin=function(){self.off("systemAction",peerFailedJoin),self.off("peerJoined",peerOnJoin),log.error([null,"Room",selectedRoom,"Failed connecting to Room due to abrupt disconnection."]),
resolveAsErrorFn(new Error("Channel closed abruptly before session was established"),self._selectedRoom,self._readyState)};self.once("peerJoined",peerOnJoin,function(peerId,peerInfo,isSelf){return peerInfo.room===selectedRoom&&isSelf}),self.once("systemAction",peerFailedJoin,function(action){return action===self.SYSTEM_ACTION.REJECT}),self.once("channelClose",peerSocketFailedJoin)}var joinRoomMsg={type:self._SIG_MESSAGE_TYPE.JOIN_ROOM,uid:self._user.uid,cid:self._key,rid:self._room.id,userCred:self._user.token,timeStamp:self._user.timeStamp,apiOwner:self._appKeyOwner,roomCred:self._room.token,start:self._room.startDateTime,len:self._room.duration,isPrivileged:!0===self._isPrivileged,autoIntroduce:!1!==self._autoIntroduce,key:self._initOptions.appKey};self._sendChannelMessage(joinRoomMsg),self._handleSessionStats(joinRoomMsg)})})};if(null===room||["number","boolean"].indexOf(typeof room)>-1)return void resolveAsErrorFn("Invalid room name is provided",room);if(null===options||["number","boolean"].indexOf(typeof options)>-1)return void resolveAsErrorFn("Invalid mediaOptions is provided",selectedRoom);self._joinRoomManager.socketsFn.forEach(function(fnItem){fnItem(timestamp)}),self._joinRoomManager.socketsFn=[];var stopStream=!1===mediaOptions.audio&&!1===mediaOptions.video;self._inRoom?self.leaveRoom({userMedia:stopStream},function(lRError,lRSuccess){log.debug([null,"Room",previousRoom,"Leave Room callback result ->"],[lRError,lRSuccess]),joinRoomFn()}):(stopStream&&self.stopStream(),joinRoomFn())},Skylink.prototype.leaveRoom=function(stopMediaOptions,callback){var self=this,stopUserMedia=!0,stopScreenshare=!0,previousRoom=self._selectedRoom,previousUserPeerId=self._user?self._user.sid:null,peersThatLeft=[],isNotInRoom=!self._inRoom;"boolean"==typeof stopMediaOptions?!1===stopMediaOptions&&(stopUserMedia=!1,stopScreenshare=!1):stopMediaOptions&&"object"==typeof stopMediaOptions?(stopUserMedia=!1!==stopMediaOptions.userMedia,stopScreenshare=!1!==stopMediaOptions.screenshare):"function"==typeof stopMediaOptions&&(callback=stopMediaOptions);for(var infoPeerId in self._peerInformations)self._peerInformations.hasOwnProperty(infoPeerId)&&self._peerInformations[infoPeerId]&&(peersThatLeft.push(infoPeerId),self._removePeer(infoPeerId));for(var connPeerId in self._peerConnections)self._peerConnections.hasOwnProperty(connPeerId)&&self._peerConnections[connPeerId]&&-1===peersThatLeft.indexOf(connPeerId)&&(peersThatLeft.push(connPeerId),self._removePeer(connPeerId));if(self._inRoom=!1,self._closeChannel(),isNotInRoom){var notInRoomError="Unable to leave room as user is not in any room";return log.error([null,"Room",previousRoom,notInRoomError]),void("function"==typeof callback&&callback(new Error(notInRoomError),null))}self._stopStreams({userMedia:stopUserMedia,screenshare:stopScreenshare}),self._wait(function(){log.log([null,"Room",previousRoom,"User left the room"]),self._trigger("peerLeft",previousUserPeerId,self.getPeerInfo(),!0),"function"==typeof callback&&callback(null,{peerId:previousUserPeerId,previousRoom:previousRoom})},function(){return!self._channelOpen})},Skylink.prototype.lockRoom=function(){this._user&&this._user.sid&&(log.log("Update to isRoomLocked status ->",!0),this._sendChannelMessage({type:this._SIG_MESSAGE_TYPE.ROOM_LOCK,mid:this._user.sid,rid:this._room.id,lock:!0}),this._roomLocked=!0,this._trigger("roomLock",!0,this._user.sid,this.getPeerInfo(),!0))},Skylink.prototype.unlockRoom=function(){this._user&&this._user.sid&&(log.log("Update to isRoomLocked status ->",!1),this._sendChannelMessage({type:this._SIG_MESSAGE_TYPE.ROOM_LOCK,mid:this._user.sid,rid:this._room.id,lock:!1}),this._roomLocked=!1,this._trigger("roomLock",!1,this._user.sid,this.getPeerInfo(),!0))},Skylink.prototype._waitForOpenChannel=function(mediaOptions,joinRoomTimestamp,callback){var self=this;self._socketCurrentReconnectionAttempt=0,self._wait(function(){var onChannelOpen=function(){self.off("socketError",onChannelError),setTimeout(function(){if(mediaOptions=mediaOptions||{},self._userData=mediaOptions.userData||self._userData||"",self._streamsBandwidthSettings={googleX:{},bAS:{}},self._publishOnly=!1,self._sdpSettings={connection:{audio:!0,video:!0,data:!0},direction:{audio:{send:!0,receive:!0},video:{send:!0,receive:!0}}},self._voiceActivityDetection="boolean"!=typeof mediaOptions.voiceActivityDetection||mediaOptions.voiceActivityDetection,self._peerConnectionConfig={bundlePolicy:self.BUNDLE_POLICY.BALANCED,rtcpMuxPolicy:self.RTCP_MUX_POLICY.REQUIRE,iceCandidatePoolSize:0,certificate:self.PEER_CERTIFICATE.AUTO,disableBundle:!1},self._bandwidthAdjuster=null,mediaOptions.bandwidth&&("number"==typeof mediaOptions.bandwidth.audio&&(self._streamsBandwidthSettings.bAS.audio=mediaOptions.bandwidth.audio),"number"==typeof mediaOptions.bandwidth.video&&(self._streamsBandwidthSettings.bAS.video=mediaOptions.bandwidth.video),"number"==typeof mediaOptions.bandwidth.data&&(self._streamsBandwidthSettings.bAS.data=mediaOptions.bandwidth.data)),mediaOptions.googleXBandwidth&&("number"==typeof mediaOptions.googleXBandwidth.min&&(self._streamsBandwidthSettings.googleX.min=mediaOptions.googleXBandwidth.min),"number"==typeof mediaOptions.googleXBandwidth.max&&(self._streamsBandwidthSettings.googleX.max=mediaOptions.googleXBandwidth.max)),mediaOptions.sdpSettings&&(mediaOptions.sdpSettings.direction&&(mediaOptions.sdpSettings.direction.audio&&(self._sdpSettings.direction.audio.receive="boolean"!=typeof mediaOptions.sdpSettings.direction.audio.receive||mediaOptions.sdpSettings.direction.audio.receive,self._sdpSettings.direction.audio.send="boolean"!=typeof mediaOptions.sdpSettings.direction.audio.send||mediaOptions.sdpSettings.direction.audio.send),mediaOptions.sdpSettings.direction.video&&(self._sdpSettings.direction.video.receive="boolean"!=typeof mediaOptions.sdpSettings.direction.video.receive||mediaOptions.sdpSettings.direction.video.receive,self._sdpSettings.direction.video.send="boolean"!=typeof mediaOptions.sdpSettings.direction.video.send||mediaOptions.sdpSettings.direction.video.send)),mediaOptions.sdpSettings.connection&&(self._sdpSettings.connection.audio="boolean"!=typeof mediaOptions.sdpSettings.connection.audio||mediaOptions.sdpSettings.connection.audio,self._sdpSettings.connection.video="boolean"!=typeof mediaOptions.sdpSettings.connection.video||mediaOptions.sdpSettings.connection.video,self._sdpSettings.connection.data="boolean"!=typeof mediaOptions.sdpSettings.connection.data||mediaOptions.sdpSettings.connection.data)),mediaOptions.publishOnly&&(self._sdpSettings.direction.audio.send=!0,self._sdpSettings.direction.audio.receive=!1,self._sdpSettings.direction.video.send=!0,self._sdpSettings.direction.video.receive=!1,self._publishOnly=!0,"object"==typeof mediaOptions.publishOnly&&mediaOptions.publishOnly.parentId&&"string"==typeof mediaOptions.publishOnly.parentId&&(self._parentId=mediaOptions.publishOnly.parentId)),mediaOptions.parentId&&(self._parentId=mediaOptions.parentId),mediaOptions.peerConnection&&"object"==typeof mediaOptions.peerConnection){if("string"==typeof mediaOptions.peerConnection.bundlePolicy)for(var bpProp in self.BUNDLE_POLICY)self.BUNDLE_POLICY.hasOwnProperty(bpProp)&&self.BUNDLE_POLICY[bpProp]===mediaOptions.peerConnection.bundlePolicy&&(self._peerConnectionConfig.bundlePolicy=mediaOptions.peerConnection.bundlePolicy);if("string"==typeof mediaOptions.peerConnection.rtcpMuxPolicy)for(var rmpProp in self.RTCP_MUX_POLICY)self.RTCP_MUX_POLICY.hasOwnProperty(rmpProp)&&self.RTCP_MUX_POLICY[rmpProp]===mediaOptions.peerConnection.rtcpMuxPolicy&&(self._peerConnectionConfig.rtcpMuxPolicy=mediaOptions.peerConnection.rtcpMuxPolicy);if("number"==typeof mediaOptions.peerConnection.iceCandidatePoolSize&&mediaOptions.peerConnection.iceCandidatePoolSize>0&&(self._peerConnectionConfig.iceCandidatePoolSize=mediaOptions.peerConnection.iceCandidatePoolSize),"string"==typeof mediaOptions.peerConnection.certificate)for(var pcProp in self.PEER_CERTIFICATE)self.PEER_CERTIFICATE.hasOwnProperty(pcProp)&&self.PEER_CERTIFICATE[pcProp]===mediaOptions.peerConnection.certificate&&(self._peerConnectionConfig.certificate=mediaOptions.peerConnection.certificate);self._peerConnectionConfig.disableBundle=!0===mediaOptions.peerConnection.disableBundle}if(mediaOptions.autoBandwidthAdjustment&&(self._bandwidthAdjuster={interval:10,limitAtPercentage:100,useUploadBwOnly:!1},"object"==typeof mediaOptions.autoBandwidthAdjustment&&("number"==typeof mediaOptions.autoBandwidthAdjustment.interval&&mediaOptions.autoBandwidthAdjustment.interval>=10&&(self._bandwidthAdjuster.interval=mediaOptions.autoBandwidthAdjustment.interval),"number"==typeof mediaOptions.autoBandwidthAdjustment.limitAtPercentage&&mediaOptions.autoBandwidthAdjustment.limitAtPercentage>=0&&mediaOptions.autoBandwidthAdjustment.limitAtPercentage<=100&&(self._bandwidthAdjuster.limitAtPercentage=mediaOptions.autoBandwidthAdjustment.limitAtPercentage),"boolean"==typeof mediaOptions.autoBandwidthAdjustment.useUploadBwOnly&&(self._bandwidthAdjuster.useUploadBwOnly=mediaOptions.autoBandwidthAdjustment.useUploadBwOnly))),!0===mediaOptions.manualGetUserMedia){self._trigger("mediaAccessRequired");var current50Block=0,mediaAccessRequiredFailure=!1;return void self._wait(function(){!0===mediaAccessRequiredFailure?self._onUserMediaError(new Error("Waiting for stream timeout"),!1,!1):callback(null,self._streams.userMedia.stream)},function(){return current50Block+=1,600===current50Block?(mediaAccessRequiredFailure=!0,!0):!(!self._streams.userMedia||!self._streams.userMedia.stream)||void 0},50)}if(mediaOptions.audio||mediaOptions.video)return void self.getUserMedia({useExactConstraints:!!mediaOptions.useExactConstraints,audio:mediaOptions.audio,video:mediaOptions.video},function(error,success){error?callback(error,null):callback(null,success)});callback(null,null)},1)},onChannelError=function(errorState,error){self.off("channelOpen",onChannelOpen),callback(error)};self._channelOpen?onChannelOpen():(self.once("channelOpen",onChannelOpen),self.once("socketError",onChannelError,function(errorState){return errorState===self.SOCKET_ERROR.RECONNECTION_ABORTED}),self._openChannel(joinRoomTimestamp))},function(){return self._readyState===self.READY_STATE_CHANGE.COMPLETED})},Skylink.prototype.generateUUID=function(){var d=(new Date).getTime();return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(c){var r=(d+16*Math.random())%16|0;return d=Math.floor(d/16),("x"===c?r:r&&15).toString(16)})},Skylink.prototype.init=function(_options,_callback){var self=this,options={},callback=function(){};if("function"==typeof _options?callback=_options:_options&&"object"==typeof _options?(options=clone(_options),options.appKey&&"string"==typeof options.appKey||!options.apiKey||"string"!=typeof options.apiKey||(options.appKey=options.apiKey)):_options&&"string"==typeof _options&&(options.appKey=_options),"function"==typeof _callback&&(callback=_callback),options.defaultRoom=options.defaultRoom&&"string"==typeof options.defaultRoom?options.defaultRoom:options.appKey,options.roomServer=options.roomServer&&"string"==typeof options.roomServer?options.roomServer:"//api.temasys.io",options.statsServer=options.statsServer&&"string"==typeof options.statsServer?options.statsServer:"//api.temasys.io",options.enableIceTrickle=!1!==options.enableIceTrickle,options.enableDataChannel=!1!==options.enableDataChannel,options.enableSTUNServer=!1!==options.enableSTUNServer,options.enableTURNServer=!1!==options.enableTURNServer,options.audioFallback=!0===options.audioFallback,options.forceSSL=!1!==options.forceSSL,options.enableStatsGathering=!1!==options.enableStatsGathering,options.socketTimeout="number"==typeof options.socketTimeout&&options.socketTimeout>=5e3?options.socketTimeout:7e3,options.apiTimeout="number"==typeof options.apiTimeout?options.apiTimeout:4e3,options.forceTURNSSL=!0===options.forceTURNSSL,options.forceTURN=!0===options.forceTURN,options.usePublicSTUN=!0===options.usePublicSTUN,options.disableVideoFecCodecs=!0===options.disableVideoFecCodecs,options.disableComfortNoiseCodec=!0===options.disableComfortNoiseCodec,options.disableREMB=!0===options.disableREMB,options.throttleShouldThrowError=!0===options.throttleShouldThrowError,options.mcuUseRenegoRestart=!1===options.mcuUseRenegoRestart,options.useEdgeWebRTC=!0===options.useEdgeWebRTC,options.enableSimultaneousTransfers=!1!==options.enableSimultaneousTransfers,options.priorityWeightScheme=self._containsInList("PRIORITY_WEIGHT_SCHEME",options.priorityWeightScheme,"AUTO"),options.TURNServerTransport=self._containsInList("TURN_TRANSPORT",options.TURNServerTransport,"ANY"),options.credentials=options.credentials&&"object"==typeof options.credentials&&options.credentials.startDateTime&&"string"==typeof options.credentials.startDateTime&&options.credentials.credentials&&"string"==typeof options.credentials.credentials&&"number"==typeof options.credentials.duration?options.credentials:null,options.filterCandidatesType=options.filterCandidatesType&&"object"==typeof options.filterCandidatesType?options.filterCandidatesType:{},options.filterCandidatesType.host=!0===options.filterCandidatesType.host,options.filterCandidatesType.srflx=!0===options.filterCandidatesType.srflx,options.filterCandidatesType.relay=!0===options.filterCandidatesType.relay,options.throttleIntervals=options.throttleIntervals&&"object"==typeof options.throttleIntervals?options.throttleIntervals:{},options.throttleIntervals.shareScreen="number"==typeof options.throttleIntervals.shareScreen?options.throttleIntervals.shareScreen:1e4,options.throttleIntervals.refreshConnection="number"==typeof options.throttleIntervals.refreshConnection?options.throttleIntervals.refreshConnection:5e3,options.throttleIntervals.getUserMedia="number"==typeof options.throttleIntervals.getUserMedia?options.throttleIntervals.getUserMedia:0,options.iceServer&&"string"==typeof options.iceServer?options.iceServer={urls:[options.iceServer]}:Array.isArray(options.iceServer)&&options.iceServer.length>0?options.iceServer={urls:options.iceServer}:options.iceServer=null,options.socketServer&&"string"==typeof options.socketServer?options.socketServer=options.socketServer:options.socketServer&&"object"==typeof options.socketServer&&options.socketServer.url&&"string"==typeof options.socketServer.url?options.socketServer={url:options.socketServer.url,ports:Array.isArray(options.socketServer.ports)?options.socketServer.ports:[],protocol:options.socketServer.protocol?options.socketServer.protocol:null}:options.socketServer=null,options.audioCodec&&"object"==typeof options.audioCodec&&self._containsInList("AUDIO_CODEC",options.audioCodec.codec,"-")?options.audioCodec={codec:options.audioCodec.codec,samplingRate:"number"==typeof options.audioCodec.samplingRate?options.audioCodec.samplingRate:null,channels:"number"==typeof options.audioCodec.channels?options.audioCodec.channels:null}:options.audioCodec=self._containsInList("AUDIO_CODEC",options.audioCodec,"AUTO"),options.videoCodec&&"object"==typeof options.videoCodec&&self._containsInList("VIDEO_CODEC",options.videoCodec.codec,"-")?options.videoCodec={codec:options.videoCodec.codec,samplingRate:"number"==typeof options.videoCodec.samplingRate?options.videoCodec.samplingRate:null}:options.videoCodec=self._containsInList("VIDEO_CODEC",options.videoCodec,"AUTO"),options.codecParams=options.codecParams&&"object"==typeof options.codecParams?options.codecParams:{},options.codecParams.audio=options.codecParams.audio&&"object"==typeof options.codecParams.audio?options.codecParams.audio:{},options.codecParams.video=options.codecParams.video&&"object"==typeof options.codecParams.video?options.codecParams.video:{},options.codecParams.audio.opus=options.codecParams.audio.opus&&"object"==typeof options.codecParams.audio.opus?options.codecParams.audio.opus:{},options.codecParams.audio.opus.stereo="boolean"==typeof options.codecParams.audio.opus.stereo?options.codecParams.audio.opus.stereo:null,options.codecParams.audio.opus["sprop-stereo"]="boolean"==typeof options.codecParams.audio.opus["sprop-stereo"]?options.codecParams.audio.opus["sprop-stereo"]:null,options.codecParams.audio.opus.usedtx="boolean"==typeof options.codecParams.audio.opus.usedtx?options.codecParams.audio.opus.usedtx:null,options.codecParams.audio.opus.useinbandfec="boolean"==typeof options.codecParams.audio.opus.useinbandfec?options.codecParams.audio.opus.useinbandfec:null,options.codecParams.audio.opus.maxplaybackrate="number"==typeof options.codecParams.audio.opus.maxplaybackrate&&options.codecParams.audio.opus.maxplaybackrate>=8e3&&options.codecParams.audio.opus.maxplaybackrate<=48e3?options.codecParams.audio.opus.maxplaybackrate:null,options.codecParams.audio.opus.minptime="number"==typeof options.codecParams.audio.opus.minptime&&options.codecParams.audio.opus.minptime>=3?options.codecParams.audio.opus.minptime:null,options.codecParams.video.h264=options.codecParams.video.h264&&"object"==typeof options.codecParams.video.h264?options.codecParams.video.h264:{},options.codecParams.video.h264.profileLevelId=options.codecParams.video.h264.profileLevelId&&"string"==typeof options.codecParams.video.h264.profileLevelId?options.codecParams.video.h264.profileLevelId:null,options.codecParams.video.h264.levelAsymmetryAllowed="boolean"==typeof options.codecParams.video.h264.levelAsymmetryAllowed?options.codecParams.video.h264.levelAsymmetryAllowed:null,options.codecParams.video.h264.packetizationMode="boolean"==typeof options.codecParams.video.h264.packetizationMode?!0===options.codecParams.video.h264.packetizationMode?1:0:"number"==typeof options.codecParams.video.h264.packetizationMode?options.codecParams.video.h264.packetizationMode:null,options.codecParams.video.vp8=options.codecParams.video.vp8&&"object"==typeof options.codecParams.video.vp8?options.codecParams.video.vp8:{},options.codecParams.video.vp8.maxFs="number"==typeof options.codecParams.video.vp8.maxFs?options.codecParams.video.vp8.maxFs:null,options.codecParams.video.vp8.maxFr="number"==typeof options.codecParams.video.vp8.maxFr?options.codecParams.video.vp8.maxFr:null,options.codecParams.video.vp9=options.codecParams.video.vp9&&"object"==typeof options.codecParams.video.vp9?options.codecParams.video.vp9:{},options.codecParams.video.vp9.maxFs="number"==typeof options.codecParams.video.vp9.maxFs?options.codecParams.video.vp9.maxFs:null,options.codecParams.video.vp9.maxFr="number"==typeof options.codecParams.video.vp9.maxFr?options.codecParams.video.vp9.maxFr:null,options.forceTURN&&(options.enableTURNServer=!0,options.enableSTUNServer=!1,options.filterCandidatesType.host=!0,options.filterCandidatesType.srflx=!0,options.filterCandidatesType.relay=!1),self.once("readyStateChange",function(){},function(state,error){if(state===self.READY_STATE_CHANGE.ERROR)return log.error("Failed init() process ->",error),callback({error:error.content,errorCode:error.errorCode,status:error.status},null),!0;if(state===self.READY_STATE_CHANGE.COMPLETED){log.info("Completed init() successfully ->",options);var success=clone(self._initOptions);return success.serverUrl=self._path,success.readyState=self._readyState,success.selectedRoom=self._selectedRoom,success.TURNTransport=success.TURNServerTransport,callback(null,success),!0}}),self._initOptions=options,self._readyState=self.READY_STATE_CHANGE.INIT,self._selectedRoom=self._initOptions.defaultRoom,self._trigger("readyStateChange",self.READY_STATE_CHANGE.INIT,null,self._selectedRoom),!options||!options.appKey||"string"!=typeof options.appKey)return self._readyState=self.READY_STATE_CHANGE.ERROR,void self._trigger("readyStateChange",self.READY_STATE_CHANGE.ERROR,{content:new Error("Please provide an app key"),errorCode:self.READY_STATE_CHANGE_ERROR.NO_PATH,status:-2},self._selectedRoom);self._path=self._initOptions.roomServer+"/api/"+self._initOptions.appKey+"/"+self._selectedRoom+(self._initOptions.credentials?"/"+self._initOptions.credentials.startDateTime+"/"+self._initOptions.credentials.duration+"?cred="+self._initOptions.credentials.credentials:"")+(self._initOptions.credentials?"&":"?")+"rand="+Date.now(),self._loadInfo()},Skylink.prototype._containsInList=function(listName,value,defaultProperty){var self=this;for(var property in self[listName])if(self[listName].hasOwnProperty(property)&&self[listName][property]===value)return value;return self[listName][defaultProperty]},Skylink.prototype._requestServerInfo=function(method,url,callback,params){var self=this,retries=0;self._socketUseXDR="function"==typeof window.XDomainRequest||"object"==typeof window.XDomainRequest,url=self._initOptions.forceSSL?"https:"+url:url,function requestFn(){var xhr=new XMLHttpRequest,completed=!1;self._socketUseXDR&&(log.debug([null,"XMLHttpRequest",method,"Using XDomainRequest for CORS authentication."]),xhr=new XDomainRequest,xhr.setContentType=function(contentType){xhr.contentType=contentType}),xhr.onload=function(){if(!completed){completed=!0;var response=JSON.parse(xhr.responseText||xhr.response||"{}"),status=xhr.status||(response.success?200:400);if(self._handleAuthStats(response.success?"success":"error",response,status),response.success)return log.debug([null,"XMLHttpRequest",method,"Received sessions parameters ->"],response),void callback(response);log.error([null,"XMLHttpRequest",method,"Failed retrieving sessions parameters ->"],response),self._readyState=self.READY_STATE_CHANGE.ERROR,self._trigger("readyStateChange",self.READY_STATE_CHANGE.ERROR,{status:status,content:new Error(response.info||"XMLHttpRequest status not OK\nStatus was: "+status),errorCode:response.error||status},self._selectedRoom)}},xhr.onerror=function(error){completed||(completed=!0,log.error([null,"XMLHttpRequest",method,"Failed retrieving information with status ->"],xhr.status),self._handleAuthStats("error",null,-1,"Failed connecting to server"),self._readyState=self.READY_STATE_CHANGE.ERROR,self._trigger("readyStateChange",self.READY_STATE_CHANGE.ERROR,{status:xhr.status||-1,content:new Error("Network error occurred. (Status: "+xhr.status+")"),errorCode:self.READY_STATE_CHANGE_ERROR.XML_HTTP_REQUEST_ERROR},self._selectedRoom))},xhr.onprogress=function(){log.debug([null,"XMLHttpRequest",method,"Retrieving information and config from webserver ->"],{url:url,params:params})};try{xhr.open(method,url,!0),self._socketUseXDR||(xhr.setRequestHeader("Skylink_SDK_version",self.VERSION),xhr.setRequestHeader("Skylink_SDK_type","WEB_SDK")),params?(xhr.setContentType("application/json;charset=UTF-8"),xhr.send(JSON.stringify(params))):xhr.send()}catch(error){return completed=!0,self._handleAuthStats("error",null,-1,error),self._readyState=self.READY_STATE_CHANGE.ERROR,void self._trigger("readyStateChange",self.READY_STATE_CHANGE.ERROR,{status:xhr.status||-1,content:new Error("Failed starting XHR process."),errorCode:self.READY_STATE_CHANGE_ERROR.XML_HTTP_REQUEST_ERROR},self._selectedRoom)}setTimeout(function(){if(!completed)if(completed=!0,xhr.onload=null,xhr.onerror=null,xhr.onprogress=null,retries<2)retries++,requestFn();else{var timeoutError=new Error("Response timed out from API server");self._handleAuthStats("error",null,-1,timeoutError),self._readyState=self.READY_STATE_CHANGE.ERROR,self._trigger("readyStateChange",self.READY_STATE_CHANGE.ERROR,{status:xhr.status||-1,content:timeoutError,errorCode:self.READY_STATE_CHANGE_ERROR.XML_HTTP_NO_REPONSE_ERROR},self._selectedRoom)}},self._initOptions.apiTimeout)}()},Skylink.prototype._parseInfo=function(info){if(log.log("Parsing parameter from server",info),!info.pc_constraints&&!info.offer_constraints)return void this._trigger("readyStateChange",this.READY_STATE_CHANGE.ERROR,{status:200,content:info.info,errorCode:info.error},self._selectedRoom);log.debug("Peer connection constraints:",info.pc_constraints),log.debug("Offer constraints:",info.offer_constraints),this._key=info.cid,this._appKeyOwner=info.apiOwner,this._signalingServer=info.ipSigserver,this._isPrivileged=info.isPrivileged,this._autoIntroduce=info.autoIntroduce,this._hasMCU=info.hasMCU,info.enable_stats_config||(this._initOptions.enableStatsGathering=!1),this._user={uid:info.username,token:info.userCred,timeStamp:info.timeStamp,streams:[],info:{}},this._room={id:info.room_key,token:info.roomCred,startDateTime:info.start,duration:info.len,connection:{peerConstraints:JSON.parse(info.pc_constraints),peerConfig:null,offerConstraints:JSON.parse(info.offer_constraints),sdpConstraints:{mandatory:{OfferToReceiveAudio:!0,OfferToReceiveVideo:!0}},mediaConstraints:JSON.parse(info.media_constraints)}},this._socketPorts={"http:":Array.isArray(info.httpPortList)&&info.httpPortList.length>0?info.httpPortList:[80,3e3],"https:":Array.isArray(info.httpsPortList)&&info.httpsPortList.length>0?info.httpsPortList:[443,3443]},this._readyState=this.READY_STATE_CHANGE.COMPLETED,this._trigger("readyStateChange",this.READY_STATE_CHANGE.COMPLETED,null,this._selectedRoom),log.info("Parsed parameters from webserver. Ready for web-realtime communication")},Skylink.prototype._loadInfo=function(){var self=this;if("function"!=typeof(globals.AdapterJS||window.AdapterJS||{}).webRTCReady){return void self._trigger("readyStateChange",self.READY_STATE_CHANGE.ERROR,{status:-2,content:new Error("AdapterJS dependency is not loaded or incorrect AdapterJS dependency is used"),errorCode:self.READY_STATE_CHANGE_ERROR.ADAPTER_NO_LOADED},self._selectedRoom)}return globals.io||window.io?window.XMLHttpRequest?self._path?void AdapterJS.webRTCReady(function(){if(self._enableIceRestart="firefox"!==AdapterJS.webrtcDetectedBrowser||AdapterJS.webrtcDetectedVersion>=48,self._binaryChunkType="firefox"===AdapterJS.webrtcDetectedBrowser?self.DATA_TRANSFER_DATA_TYPE.BLOB:self.DATA_TRANSFER_DATA_TYPE.ARRAY_BUFFER,!function(){try{var p=new window.RTCPeerConnection(null);return["object","function"].indexOf(typeof p.createOffer)>-1&&null!==p.createOffer}catch(e){return!1}}())return window.RTCPeerConnection&&"plugin"===AdapterJS.webrtcDetectedType?log.error("Plugin is not available. Please check plugin status."):log.error("WebRTC not supported. Please upgrade your browser"),self._readyState=self.READY_STATE_CHANGE.ERROR,void self._trigger("readyStateChange",self.READY_STATE_CHANGE.ERROR,{status:-2,content:new Error("plugin"===AdapterJS.webrtcDetectedType&&window.RTCPeerConnection?"Plugin is not available":"WebRTC not available"),errorCode:self.READY_STATE_CHANGE_ERROR.NO_WEBRTC_SUPPORT},self._selectedRoom);self._getCodecsSupport(function(error){return error?(log.error(error),self._readyState=self.READY_STATE_CHANGE.ERROR,void self._trigger("readyStateChange",self.READY_STATE_CHANGE.ERROR,{status:-2,content:new Error(error.message||error.toString()),errorCode:self.READY_STATE_CHANGE_ERROR.PARSE_CODECS},self._selectedRoom)):0===Object.keys(self._currentCodecSupport.audio).length&&0===Object.keys(self._currentCodecSupport.video).length?(log.error("No audio/video codecs available to start connection."),self._readyState=self.READY_STATE_CHANGE.ERROR,void self._trigger("readyStateChange",self.READY_STATE_CHANGE.ERROR,{status:-2,content:new Error("No audio/video codecs available to start connection"),errorCode:self.READY_STATE_CHANGE_ERROR.PARSE_CODECS},self._selectedRoom)):(self._readyState=self.READY_STATE_CHANGE.LOADING,self._trigger("readyStateChange",self.READY_STATE_CHANGE.LOADING,null,self._selectedRoom),self._handleClientStats(),void self._requestServerInfo("GET",self._path,function(response){self._parseInfo(response)}))})}):(log.error("Skylink is not initialised. Please call init() first"),self._readyState=self.READY_STATE_CHANGE.ERROR,void self._trigger("readyStateChange",self.READY_STATE_CHANGE.ERROR,{status:-2,content:new Error("No API Path is found"),errorCode:self.READY_STATE_CHANGE_ERROR.NO_PATH},self._selectedRoom)):(log.error("XMLHttpRequest not supported. Please upgrade your browser"),self._readyState=self.READY_STATE_CHANGE.ERROR,void self._trigger("readyStateChange",self.READY_STATE_CHANGE.ERROR,{status:-2,content:new Error("XMLHttpRequest not available"),errorCode:self.READY_STATE_CHANGE_ERROR.NO_XMLHTTPREQUEST_SUPPORT},self._selectedRoom)):(log.error("Socket.io not loaded. Please load socket.io"),self._readyState=self.READY_STATE_CHANGE.ERROR,void self._trigger("readyStateChange",self.READY_STATE_CHANGE.ERROR,{status:-2,content:new Error("Socket.io not found"),errorCode:self.READY_STATE_CHANGE_ERROR.NO_SOCKET_IO},self._selectedRoom))},Skylink.prototype._initSelectedRoom=function(room,callback){var self=this;if("function"==typeof room||void 0===room)return log.error("Invalid room provided. Room:",room),void callback(new Error("Invalid room provided"),null);var defaultRoom=self._initOptions.defaultRoom,options=clone(self._initOptions);options.iceServer=options.iceServer?options.iceServer.urls:null,options.defaultRoom!==room&&(options.defaultRoom=room),self.init(options,function(error,success){self._initOptions.defaultRoom=defaultRoom,error?callback(error,null):callback(null,success)})};var _LOG_KEY="SkylinkJS",_LOG_LEVELS=["error","warn","info","log","debug"],_logLevel=0,_enableDebugMode=!1,_enableDebugStack=!1,_enableDebugTrace=!1,_printTimestamp=!1,_storedLogs=[],_getStoredLogsFn=function(logLevel){if(void 0===logLevel)return _storedLogs;for(var returnLogs=[],i=0;i<_storedLogs.length;i++)_storedLogs[i][1]===_LOG_LEVELS[logLevel]&&returnLogs.push(_storedLogs[i]);return returnLogs},_clearAllStoredLogsFn=function(){_storedLogs=[]},_printAllStoredLogsFn=function(){for(var i=0;i<_storedLogs.length;i++){var timestamp=_storedLogs[i][0],log="undefined"!==console[_storedLogs[i][1]]?_storedLogs[i][1]:"log",message=_storedLogs[i][2],debugObject=_storedLogs[i][3];void 0!==debugObject?console[log](message,debugObject,timestamp):console[log](message,timestamp)}},SkylinkLogs={getLogs:_getStoredLogsFn,clearAllLogs:_clearAllStoredLogsFn,printAllLogs:_printAllStoredLogsFn},_logFn=function(logLevel,message,debugObject){var outputLog="",datetime=new Date;if("object"==typeof message){if(outputLog+=message[0]?" ["+message[0]+"] -":" -",outputLog+=message[1]?" <<"+message[1]+">>":"",message[2])if(outputLog+=" ","object"==typeof message[2])for(var i=0;i<message[2].length;i++)outputLog+="("+message[2][i]+")";else outputLog+="("+message[2]+")";outputLog+=" "+message[3]}else outputLog+=" - "+message;if(_enableDebugMode&&_enableDebugStack){var logItem=[datetime,_LOG_LEVELS[logLevel],outputLog];void 0!==debugObject&&logItem.push(debugObject),_storedLogs.push(logItem)}if(outputLog=_LOG_KEY+(_printTimestamp?" :: "+datetime.toISOString():"")+outputLog,_logLevel>=logLevel)if(logLevel=void 0===console[_LOG_LEVELS[logLevel]]?3:logLevel,_enableDebugMode&&_enableDebugTrace){void 0===console.trace&&logLevel[3];void 0!==debugObject?(console[_LOG_LEVELS[logLevel]](outputLog,debugObject),void 0!==console.trace&&console.trace("")):(console[_LOG_LEVELS[logLevel]](outputLog),void 0!==console.trace&&console.trace(""))}else void 0!==debugObject?console[_LOG_LEVELS[logLevel]](outputLog,debugObject):console[_LOG_LEVELS[logLevel]](outputLog)},log={debug:function(message,object){_logFn(4,message,object)},log:function(message,object){_logFn(3,message,object)},info:function(message,object){_logFn(2,message,object)},warn:function(message,object){_logFn(1,message,object)},error:function(message,object){_logFn(0,message,object)}};Skylink.prototype.setLogLevel=function(logLevel){for(var level in this.LOG_LEVEL)if(this.LOG_LEVEL[level]===logLevel)return _logLevel=logLevel,void log.log([null,"Log",level,"Log level exists. Level is set"]);log.error([null,"Log",level,"Log level does not exist. Level is not set"])},Skylink.prototype.setDebugMode=function(isDebugMode){isDebugMode&&"object"==typeof isDebugMode?(_enableDebugMode=!0,_enableDebugTrace=!0===isDebugMode.trace,_enableDebugStack=!0===isDebugMode.storeLogs,_printTimestamp=!0===isDebugMode.printTimestamp):!0===isDebugMode?(_enableDebugMode=!0,_enableDebugTrace=!0,_enableDebugStack=!0,_printTimestamp=!1):(_enableDebugMode=!1,
_enableDebugTrace=!1,_enableDebugStack=!1,_printTimestamp=!1)};Skylink.prototype.on=function(eventName,callback){"function"==typeof callback?(this._EVENTS[eventName]=this._EVENTS[eventName]||[],this._EVENTS[eventName].push(callback),log.log([null,"Event",eventName,"Event is subscribed"])):log.error([null,"Event",eventName,"Provided parameter is not a function"])},Skylink.prototype.once=function(eventName,callback,condition,fireAlways){"boolean"==typeof condition&&(fireAlways=condition,condition=null),fireAlways=void 0!==fireAlways&&fireAlways,condition="function"!=typeof condition?function(){return!0}:condition,"function"==typeof callback?(this._onceEvents[eventName]=this._onceEvents[eventName]||[],this._onceEvents[eventName].push([callback,condition,fireAlways]),log.log([null,"Event",eventName,"Event is subscribed on condition"])):log.error([null,"Event",eventName,"Provided callback is not a function"])},Skylink.prototype.off=function(eventName,callback){if(eventName&&"string"==typeof eventName){if(void 0===callback)return this._EVENTS[eventName]=[],this._onceEvents[eventName]=[],void log.log([null,"Event",eventName,"All events are unsubscribed"]);for(var arr=this._EVENTS[eventName]||[],once=this._onceEvents[eventName]||[],i=0;i<arr.length;i++)if(arr[i]===callback){log.log([null,"Event",eventName,"Event is unsubscribed"]),arr.splice(i,1);break}if(void 0!==once)for(var j=0;j<once.length;j++)if(once[j][0]===callback){log.log([null,"Event",eventName,"One-time Event is unsubscribed"]),once.splice(j,1);break}}else this._EVENTS={},this._onceEvents={}},Skylink.prototype._trigger=function(eventName){var args=Array.prototype.slice.call(arguments),arr=this._EVENTS[eventName],once=this._onceEvents[eventName]||null;if(args.shift(),arr)for(var i=0;i<arr.length;i++)try{if(log.log([null,"Event",eventName,"Event is fired"]),!1===arr[i].apply(this,args))break}catch(error){throw log.error([null,"Event",eventName,"Exception occurred in event:"],error),error}if(once)for(var j=0;j<once.length;j++)if(!0===once[j][1].apply(this,args)){if(log.log([null,"Event",eventName,"Condition is met. Firing event"]),!1===once[j][0].apply(this,args))break;once[j]&&!once[j][2]&&(log.log([null,"Event",eventName,"Removing event after firing once"]),once.splice(j,1),j--)}else log.log([null,"Event",eventName,"Condition is still not met. Holding event from being fired"]);log.log([null,"Event",eventName,"Event is triggered"])},Skylink.prototype._condition=function(eventName,callback,checkFirst,condition,fireAlways){if("boolean"==typeof condition&&(fireAlways=condition,condition=null),"function"==typeof callback&&"function"==typeof checkFirst){if(checkFirst())return log.log([null,"Event",eventName,"First condition is met. Firing callback"]),void callback();log.log([null,"Event",eventName,"First condition is not met. Subscribing to event"]),this.once(eventName,callback,condition,fireAlways)}else log.error([null,"Event",eventName,"Provided callback or checkFirst is not a function"])},Skylink.prototype._wait=function(callback,condition,intervalTime,fireAlways){if(fireAlways=void 0!==fireAlways&&fireAlways,"function"==typeof callback&&"function"==typeof condition){if(condition())return log.log([null,"Event",null,"Condition is met. Firing callback"]),void callback();log.log([null,"Event",null,"Condition is not met. Doing a check."]),intervalTime="number"==typeof intervalTime?intervalTime:50;var doWait=setInterval(function(){condition()&&(log.log([null,"Event",null,"Condition is met after waiting. Firing callback"]),fireAlways||clearInterval(doWait),callback())},intervalTime)}else"function"!=typeof callback&&log.error([null,"Event",null,"Provided callback is not a function"]),"function"!=typeof condition&&log.error([null,"Event",null,"Provided condition is not a function"])},Skylink.prototype._throttle=function(func,prop,wait){var self=this,now=(new Date).getTime();self._timestamp[prop]&&now-self._timestamp[prop]<wait?func(!1):(func(!0),self._timestamp[prop]=now)},Skylink.prototype._postStats=function(endpoint,params){var self=this,requestBody={};if(self._initOptions.enableStatsGathering){Array.isArray(params)?requestBody.data=params:requestBody=params,requestBody.client_id=(self._user&&self._user.uid||"dummy")+"_"+self._statIdRandom,requestBody.app_key=self._initOptions.appKey,requestBody.timestamp=(new Date).toISOString();try{var xhr=new XMLHttpRequest;xhr.onerror=function(){},xhr.open("POST",self._initOptions.statsServer+endpoint,!0),xhr.setRequestHeader("Content-Type","application/json;charset=UTF-8"),xhr.send(JSON.stringify(requestBody))}catch(error){log.error([null,"XMLHttpRequest","POST","Error in posting stats data ->"],error)}}},Skylink.prototype._handleClientStats=function(){var self=this,statsObject={username:self._user&&self._user.uid||null,sdk_name:"web",sdk_version:self.VERSION,agent_name:AdapterJS.webrtcDetectedBrowser,agent_version:AdapterJS.webrtcDetectedVersion,agent_platform:navigator.platform,agent_plugin_version:AdapterJS.WebRTCPlugin.plugin&&AdapterJS.WebRTCPlugin.plugin.VERSION||null};self._postStats("/rest/stats/client",statsObject)},Skylink.prototype._handleSessionStats=function(message){var self=this,statsObject={room_id:self._room&&self._room.id,user_id:self._user&&self._user.sid||null,state:message.type,contents:message};self._postStats("/rest/stats/session",statsObject)},Skylink.prototype._handleAuthStats=function(state,result,status,error){var self=this,statsObject={room_id:result&&result.room_key||null,state:state,http_status:status,http_error:("string"==typeof error?error:error&&error.message)||null,api_url:self._path,api_result:result};self._postStats("/rest/stats/auth",statsObject)},Skylink.prototype._handleSignalingStats=function(state,retries,error){var self=this,socketSession=clone(self._socketSession),statsObject={room_id:self._room&&self._room.id,user_id:self._user&&self._user.sid||null,state:state,signaling_url:socketSession.socketServer,signaling_transport:socketSession.transportType.toLowerCase(),attempts:retries,error:("string"==typeof error?error:error&&error.message)||null};self._postStats("/rest/stats/client/signaling",statsObject)},Skylink.prototype._handleIceConnectionStats=function(state,peerId){var self=this,statsObject={room_id:self._room&&self._room.id,user_id:self._user&&self._user.sid,peer_id:peerId,state:state,local_candidate:{},remote_candidate:{}};self._retrieveStats(peerId,function(error,stats){stats&&["local","remote"].forEach(function(dirType){var candidate=stats.selectedCandidate[dirType];candidate&&(statsObject[dirType+"_candidate"].ip_address=candidate.ipAddress||null,statsObject[dirType+"_candidate"].port_number=candidate.portNumber||null,statsObject[dirType+"_candidate"].candidate_type=candidate.candidateType||null,statsObject[dirType+"_candidate"].protocol=candidate.transport||null,statsObject[dirType+"_candidate"].priority=candidate.priority||null,"local"===dirType&&(statsObject.local_candidate.network_type=candidate.networkType||null))}),self._postStats("/rest/stats/client/iceconnection",statsObject)},!0)},Skylink.prototype._handleIceCandidateStats=function(state,peerId,candidateId,candidate,error){var self=this,statsObject={room_id:self._room&&self._room.id,user_id:self._user&&self._user.sid,peer_id:peerId,state:state,is_remote:!!candidateId,candidate_id:candidateId||null,candidate_sdp_mid:candidate.sdpMid,candidate_sdp_mindex:candidate.sdpMLineIndex,candidate_candidate:candidate.candidate,error:("string"==typeof error?error:error&&error.message)||null};self._manageStatsBuffer("iceCandidate",statsObject,"/rest/stats/client/icecandidate")},Skylink.prototype._handleIceGatheringStats=function(state,peerId,isRemote){var self=this,statsObject={room_id:self._room&&self._room.id,user_id:self._user&&self._user.sid,peer_id:peerId,state:state,is_remote:isRemote};self._manageStatsBuffer("iceGathering",statsObject,"/rest/stats/client/icegathering")},Skylink.prototype._handleNegotiationStats=function(state,peerId,sdpOrMessage,isRemote,error){var self=this,statsObject={room_id:self._room&&self._room.id,user_id:self._user&&self._user.sid,peer_id:peerId,state:state,is_remote:isRemote,weight:sdpOrMessage.weight,sdp_type:null,sdp_sdp:null,error:("string"==typeof error?error:error&&error.message)||null};-1===["enter","welcome","restart"].indexOf(state)&&(statsObject.weight=self.getPeerInfo(isRemote?peerId:void 0).config.priorityWeight,statsObject.sdp_type=sdpOrMessage&&sdpOrMessage.type||null,statsObject.sdp_sdp=sdpOrMessage&&sdpOrMessage.sdp||null),self._manageStatsBuffer("negotiation",statsObject,"/rest/stats/client/negotiation")},Skylink.prototype._handleBandwidthStats=function(peerId){var self=this,statsObject={room_id:self._room&&self._room.id,user_id:self._user&&self._user.sid,peer_id:peerId,audio_send:{tracks:[]},audio_recv:{},video_send:{tracks:[]},video_recv:{}},useStream=self._streams.screenshare||self._streams.userMedia||null,mutedStatus=self.getPeerInfo().mediaStatus;useStream&&(useStream.tracks.audio&&(statsObject.audio_send.tracks=[{stream_id:useStream.id,id:useStream.tracks.audio.id,label:useStream.tracks.audio.label,muted:mutedStatus.audioMuted}]),useStream.tracks.video&&(statsObject.video_send.tracks=[{stream_id:useStream.id,id:useStream.tracks.video.id,label:useStream.tracks.video.label,height:useStream.tracks.video.height,width:useStream.tracks.video.width,muted:mutedStatus.videoMuted}])),self._retrieveStats(peerId,function(error,stats){error&&(statsObject.error=error&&error.message,stats={audio:{sending:{},receiving:{}},video:{sending:{},receiving:{}}});var formatValue=function(mediaType,directionType,itemKey){var value=stats[mediaType]["send"===directionType?"sending":"receiving"][itemKey];return["number","string","boolean"].indexOf(typeof value)>-1?value:null};statsObject.audio_send.bytes=formatValue("audio","send","bytes"),statsObject.audio_send.packets=formatValue("audio","send","packets"),statsObject.audio_send.round_trip_time=formatValue("audio","send","rtt"),statsObject.audio_send.nack_count=formatValue("audio","send","nacks"),statsObject.audio_send.echo_return_loss=formatValue("audio","send","echoReturnLoss"),statsObject.audio_send.echo_return_loss_enhancement=formatValue("audio","send","echoReturnLossEnhancement"),statsObject.audio_recv.bytes=formatValue("audio","recv","bytes"),statsObject.audio_recv.packets=formatValue("audio","recv","packets"),statsObject.audio_recv.packets_lost=formatValue("audio","recv","packetsLost"),statsObject.video_recv.packets_discarded=formatValue("audio","recv","packetsDiscarded"),statsObject.audio_recv.jitter=formatValue("audio","recv","jitter"),statsObject.audio_recv.nack_count=formatValue("audio","recv","nacks"),statsObject.video_send.bytes=formatValue("video","send","bytes"),statsObject.video_send.packets=formatValue("video","send","packets"),statsObject.video_send.round_trip_time=formatValue("video","send","rtt"),statsObject.video_send.nack_count=formatValue("video","send","nacks"),statsObject.video_send.firs_count=formatValue("video","send","firs"),statsObject.video_send.plis_count=formatValue("video","send","plis"),statsObject.video_send.frames=formatValue("video","send","frames"),statsObject.video_send.frames_encoded=formatValue("video","send","framesEncoded"),statsObject.video_send.frames_dropped=formatValue("video","send","framesDropped"),statsObject.video_send.frame_width=formatValue("video","send","frameWidth"),statsObject.video_send.frame_height=formatValue("video","send","frameHeight"),statsObject.video_send.framerate=formatValue("video","send","frameRate"),statsObject.video_send.framerate_input=formatValue("video","send","frameRateInput"),statsObject.video_send.framerate_encoded=formatValue("video","send","frameRateEncoded"),statsObject.video_send.framerate_mean=formatValue("video","send","frameRateMean"),statsObject.video_send.framerate_std_dev=formatValue("video","send","frameRateStdDev"),statsObject.video_send.cpu_limited_resolution=formatValue("video","send","cpuLimitedResolution"),statsObject.video_send.bandwidth_limited_resolution=formatValue("video","send","bandwidthLimitedResolution"),statsObject.video_recv.bytes=formatValue("video","recv","bytes"),statsObject.video_recv.packets=formatValue("video","recv","packets"),statsObject.video_recv.packets_lost=formatValue("video","recv","packetsLost"),statsObject.video_recv.packets_discarded=formatValue("video","recv","packetsDiscarded"),statsObject.video_recv.jitter=formatValue("video","recv","jitter"),statsObject.video_recv.nack_count=formatValue("video","recv","nacks"),statsObject.video_recv.firs_count=formatValue("video","recv","firs"),statsObject.video_recv.plis_count=formatValue("video","recv","plis"),statsObject.video_recv.frames=formatValue("video","recv","frames"),statsObject.video_recv.frames_decoded=formatValue("video","recv","framesDecoded"),statsObject.video_recv.frame_width=formatValue("video","recv","frameWidth"),statsObject.video_recv.frame_height=formatValue("video","recv","frameHeight"),statsObject.video_recv.framerate=formatValue("video","recv","frameRate"),statsObject.video_recv.framerate_output=formatValue("video","recv","frameRateOutput"),statsObject.video_recv.framerate_decoded=formatValue("video","recv","frameRateDecoded"),statsObject.video_recv.framerate_mean=formatValue("video","recv","frameRateMean"),statsObject.video_recv.framerate_std_dev=formatValue("video","recv","frameRateStdDev"),statsObject.video_recv.qp_sum=formatValue("video","recv","qpSum"),self._postStats("/rest/stats/client/bandwidth",statsObject)},!0)},Skylink.prototype._handleRecordingStats=function(state,recordingId,recordings,error){var self=this,statsObject={room_id:self._room&&self._room.id,user_id:self._user&&self._user.sid,state:state,recording_id:recordingId||null,recordings:recordings,error:("string"==typeof error?error:error&&error.message)||null};self._postStats("/rest/stats/client/recording",statsObject)},Skylink.prototype._handleDatachannelStats=function(state,peerId,channel,channelProp,error){var self=this,statsObject={room_id:self._room&&self._room.id,user_id:self._user&&self._user.sid,peer_id:peerId,state:state,channel_id:channel&&channel.id,channel_label:channel&&channel.label,channel_type:"main"===channelProp?"persistent":"temporal",channel_binary_type:channel&&channel.binaryType,error:("string"==typeof error?error:error&&error.message)||null};channel&&"plugin"===AdapterJS.webrtcDetectedType&&(statsObject.channel_binary_type="int8Array","IE"===AdapterJS.webrtcDetectedBrowser&&AdapterJS.webrtcDetectedVersion<11&&(statsObject.channel_binary_type="none")),self._postStats("/rest/stats/client/datachannel",statsObject)},Skylink.prototype._stats_buffer={},Skylink.prototype._manageStatsBuffer=function(operation,data,url){var self=this;void 0===self._stats_buffer[operation]&&(self._stats_buffer[operation]={},self._stats_buffer[operation].url=url,self._stats_buffer[operation].data=[]),self._stats_buffer[operation].data.push(data),setInterval(function(){for(var key in self._stats_buffer)self._stats_buffer[key].data.length>0&&(self._postStats(self._stats_buffer[key].url,self._stats_buffer[key].data),self._stats_buffer[key].data=[])},5e3)},Skylink.prototype._sendChannelMessage=function(message){var self=this,interval=1e3,throughput=16;if(!self._channelOpen||!self._user||!self._socket)return void log.warn([message.target||"Server","Socket",message.type,"Dropping of message as Socket connection is not opened or is at incorrect step ->"],message);self._user.sid&&!self._peerMessagesStamps[self._user.sid]&&(self._peerMessagesStamps[self._user.sid]={userData:0,audioMuted:0,videoMuted:0});var checkStampFn=function(statusMessage){return statusMessage.type===self._SIG_MESSAGE_TYPE.UPDATE_USER?!!self._user.sid&&statusMessage.stamp>self._peerMessagesStamps[self._user.sid].userData:statusMessage.type===self._SIG_MESSAGE_TYPE.MUTE_VIDEO?!!self._user.sid&&statusMessage.stamp>self._peerMessagesStamps[self._user.sid].videoMuted:statusMessage.type!==self._SIG_MESSAGE_TYPE.MUTE_AUDIO||!!self._user.sid&&statusMessage.stamp>self._peerMessagesStamps[self._user.sid].audioMuted},setStampFn=function(statusMessage){statusMessage.type===self._SIG_MESSAGE_TYPE.UPDATE_USER?self._peerMessagesStamps[self._user.sid].userData=statusMessage.stamp:statusMessage.type===self._SIG_MESSAGE_TYPE.MUTE_VIDEO?self._peerMessagesStamps[self._user.sid].videoMuted=statusMessage.stamp:statusMessage.type===self._SIG_MESSAGE_TYPE.MUTE_AUDIO&&(self._peerMessagesStamps[self._user.sid].audioMuted=statusMessage.stamp)},setQueueFn=function(){log.debug([null,"Socket",null,"Starting queue timeout"]),self._socketMessageTimeout=setTimeout(function(){if((new Date).getTime()-self._timestamp.socketMessage<=interval)return log.debug([null,"Socket",null,"Restarting queue timeout"]),void setQueueFn();startSendingQueuedMessageFn()},interval-((new Date).getTime()-self._timestamp.socketMessage))},triggerEventFn=function(eventMessage){eventMessage.type===self._SIG_MESSAGE_TYPE.PUBLIC_MESSAGE&&self._trigger("incomingMessage",{content:eventMessage.data,isPrivate:!1,targetPeerId:null,listOfPeers:Object.keys(self._peerInformations),isDataChannel:!1,senderPeerId:self._user.sid},self._user.sid,self.getPeerInfo(),!0)},sendGroupMessageFn=function(groupMessageList){if(self._socketMessageTimeout=null,!(self._channelOpen&&self._user&&self._user.sid&&self._socket))return void log.warn([message.target||"Server","Socket",null,"Dropping of group messages as Socket connection is not opened or is at incorrect step ->"],groupMessageList);for(var strGroupMessageList=[],stamps={userData:0,audioMuted:0,videoMuted:0},k=0;k<groupMessageList.length;k++)checkStampFn(groupMessageList[k])&&(groupMessageList[k].type===self._SIG_MESSAGE_TYPE.UPDATE_USER&&groupMessageList[k].stamp>self._peerMessagesStamps[self._user.sid].userData&&groupMessageList[k].stamp>stamps.userData?stamps.userData=groupMessageList[k].stamp:groupMessageList[k].type===self._SIG_MESSAGE_TYPE.MUTE_AUDIO&&groupMessageList[k].stamp>self._peerMessagesStamps[self._user.sid].audioMuted&&groupMessageList[k].stamp>stamps.audioMuted?stamps.audioMuted=groupMessageList[k].stamp:groupMessageList[k].type===self._SIG_MESSAGE_TYPE.MUTE_VIDEO&&groupMessageList[k].stamp>self._peerMessagesStamps[self._user.sid].videoMuted&&groupMessageList[k].stamp>stamps.videoMuted&&(stamps.videoMuted=groupMessageList[k].stamp));for(var i=0;i<groupMessageList.length;i++)groupMessageList[i].type===self._SIG_MESSAGE_TYPE.UPDATE_USER&&groupMessageList[i].stamp<stamps.userData||groupMessageList[i].type===self._SIG_MESSAGE_TYPE.MUTE_AUDIO&&groupMessageList[i].stamp<stamps.audioMuted||groupMessageList[i].type===self._SIG_MESSAGE_TYPE.MUTE_VIDEO&&groupMessageList[i].stamp<stamps.videoMuted?(log.warn([message.target||"Server","Socket",groupMessageList[i],"Dropping of outdated status message ->"],clone(groupMessageList[i])),groupMessageList.splice(i,1),i--):strGroupMessageList.push(JSON.stringify(groupMessageList[i]));if(strGroupMessageList.length>0){var groupMessage={type:self._SIG_MESSAGE_TYPE.GROUP,lists:strGroupMessageList,mid:self._user.sid,rid:self._room.id};log.log([message.target||"Server","Socket",groupMessage.type,"Sending queued grouped message (max: 16 per group) ->"],clone(groupMessage)),self._socket.send(JSON.stringify(groupMessage)),self._timestamp.socketMessage=(new Date).getTime();for(var j=0;j<groupMessageList.length;j++)setStampFn(groupMessageList[j]),triggerEventFn(groupMessageList[j])}},startSendingQueuedMessageFn=function(){self._socketMessageQueue.length>0&&(self._socketMessageQueue.length<throughput?sendGroupMessageFn(self._socketMessageQueue.splice(0,self._socketMessageQueue.length)):(sendGroupMessageFn(self._socketMessageQueue.splice(0,throughput)),setQueueFn()))};if(self._GROUP_MESSAGE_LIST.indexOf(message.type)>-1)if(self._timestamp.socketMessage&&(new Date).getTime()-self._timestamp.socketMessage<=interval)log.debug([message.target||"Server","Socket",message.type,"Queueing socket message to prevent message drop ->"],clone(message)),self._socketMessageQueue.push(message),self._socketMessageTimeout||setQueueFn();else{if(!checkStampFn(message))return void log.warn([message.target||"Server","Socket",message.type,"Dropping of outdated status message ->"],clone(message));self._socketMessageTimeout&&clearTimeout(self._socketMessageTimeout),log.log([message.target||"Server","Socket",message.type,"Sending message ->"],clone(message)),self._socket.send(JSON.stringify(message)),setStampFn(message),triggerEventFn(message),self._timestamp.socketMessage=(new Date).getTime()}else log.log([message.target||"Server","Socket",message.type,"Sending message ->"],clone(message)),self._socket.send(JSON.stringify(message)),message.type===self._SIG_MESSAGE_TYPE.BYE&&self._inRoom&&self._user&&self._user.sid&&message.mid===self._user.sid&&(self.leaveRoom(!1),self._trigger("sessionDisconnect",self._user.sid,self.getPeerInfo()))},Skylink.prototype._createSocket=function(type,joinRoomTimestamp){var self=this,options={forceNew:!0,reconnection:!0,timeout:self._initOptions.socketTimeout,reconnectionAttempts:2,reconnectionDelayMax:5e3,reconnectionDelay:1e3,transports:["websocket"],query:{Skylink_SDK_type:"WEB_SDK",Skylink_SDK_version:self.VERSION}},ports=self._initOptions.socketServer&&"object"==typeof self._initOptions.socketServer&&Array.isArray(self._initOptions.socketServer.ports)&&self._initOptions.socketServer.ports.length>0?self._initOptions.socketServer.ports:self._socketPorts[self._signalingServerProtocol],fallbackType=null;null===self._signalingServerPort?(self._signalingServerPort=ports[0],fallbackType=self.SOCKET_FALLBACK.NON_FALLBACK):ports.indexOf(self._signalingServerPort)===ports.length-1||"string"==typeof self._initOptions.socketServer?"WebSocket"===type?(type="Polling",self._signalingServerPort=ports[0]):self._socketSession.finalAttempts++:self._signalingServerPort=ports[ports.indexOf(self._signalingServerPort)+1],"Polling"===type&&(options.reconnectionDelayMax=1e3,options.reconnectionAttempts=4,options.transports=["xhr-polling","jsonp-polling","polling"]);var url=self._signalingServerProtocol+"//"+self._signalingServer+":"+self._signalingServerPort+"?rand="+Date.now(),retries=0;self._initOptions.socketServer&&(url="string"==typeof self._initOptions.socketServer?self._initOptions.socketServer:(self._initOptions.socketServer.protocol?self._initOptions.socketServer.protocol:self._signalingServerProtocol)+"//"+self._initOptions.socketServer.url+":"+self._signalingServerPort),self._socketSession.transportType=type,self._socketSession.socketOptions=options,self._socketSession.socketServer=url,null===fallbackType&&(fallbackType="http:"===self._signalingServerProtocol?"Polling"===type?self.SOCKET_FALLBACK.LONG_POLLING:self.SOCKET_FALLBACK.FALLBACK_PORT:"Polling"===type?self.SOCKET_FALLBACK.LONG_POLLING_SSL:self.SOCKET_FALLBACK.FALLBACK_SSL_PORT,self._socketSession.attempts++,self._trigger("socketError",self.SOCKET_ERROR.RECONNECTION_ATTEMPT,null,fallbackType,clone(self._socketSession)),self._trigger("channelRetry",fallbackType,self._socketSession.attempts,clone(self._socketSession))),self._socket&&self._closeChannel(),self._channelOpen=!1,log.log("Opening channel with signaling server url:",clone(self._socketSession));var socket=null;try{socket=io.connect(url,options)}catch(error){return log.error("Failed creating socket connection object ->",error),fallbackType===self.SOCKET_FALLBACK.NON_FALLBACK?self._trigger("socketError",self.SOCKET_ERROR.CONNECTION_FAILED,error,fallbackType,clone(self._socketSession)):self._trigger("socketError",self.SOCKET_ERROR.RECONNECTION_FAILED,error,fallbackType,clone(self._socketSession)),void self._trigger("socketError",self.SOCKET_ERROR.RECONNECTION_ABORTED,new Error("Reconnection aborted as there no more available ports, transports and final attempts left."),fallbackType,clone(self._socketSession))}socket.on("reconnect_attempt",function(attempt){retries++,self._socketSession.attempts++,self._handleSignalingStats("reconnect_attempt",retries),self._trigger("channelRetry",fallbackType,self._socketSession.attempts,clone(self._socketSession))}),socket.on("reconnect_failed",function(){var errorMsg='Failed reconnection with transport "'+type+'" and port '+self._signalingServerPort+".";self._handleSignalingStats("reconnect_failed",retries,errorMsg),fallbackType===self.SOCKET_FALLBACK.NON_FALLBACK?(errorMsg=errorMsg.replace(/ reconnection /g," connection "),self._trigger("socketError",self.SOCKET_ERROR.CONNECTION_FAILED,new Error(errorMsg),fallbackType,clone(self._socketSession))):self._trigger("socketError",self.SOCKET_ERROR.RECONNECTION_FAILED,new Error(errorMsg),fallbackType,clone(self._socketSession)),self._socketSession.finalAttempts<2?self._createSocket(type,joinRoomTimestamp):self._trigger("socketError",self.SOCKET_ERROR.RECONNECTION_ABORTED,new Error("Reconnection aborted as there no more available ports, transports and final attempts left."),fallbackType,clone(self._socketSession))}),socket.on("reconnect_error",function(error){self._handleSignalingStats("reconnect_error",retries,error)}),socket.on("connect",function(){self._handleSignalingStats("connect",retries),self._channelOpen||(log.log([null,"Socket",null,"Channel opened"]),self._channelOpen=!0,self._trigger("channelOpen",clone(self._socketSession)))}),socket.on("reconnect",function(){self._handleSignalingStats("reconnect",retries),self._channelOpen||(log.log([null,"Socket",null,"Channel opened"]),self._channelOpen=!0,self._trigger("channelOpen",clone(self._socketSession)))}),socket.on("error",function(error){if(self._handleSignalingStats("error",retries,error),error&&error.message.indexOf("xhr poll error")>-1)return log.error([null,"Socket",null,"XHR poll connection unstable. Disconnecting.. ->"],error),void self._closeChannel();log.error([null,"Socket",null,"Exception occurred ->"],error),self._trigger("channelError",error,clone(self._socketSession))}),socket.on("disconnect",function(){self._handleSignalingStats("disconnect",retries),self._channelOpen&&(self._channelOpen=!1,self._trigger("channelClose",clone(self._socketSession)),log.log([null,"Socket",null,"Channel closed"]),self._inRoom&&self._user&&self._user.sid&&(self.leaveRoom(!1),self._trigger("sessionDisconnect",self._user.sid,self.getPeerInfo())))}),socket.on("message",function(messageStr){var message=JSON.parse(messageStr);if(log.log([null,"Socket",null,"Received message ->"],message),message.type===self._SIG_MESSAGE_TYPE.GROUP){log.debug("Bundle of "+message.lists.length+" messages");for(var i=0;i<message.lists.length;i++){var indiMessage=JSON.parse(message.lists[i]);self._processSigMessage(indiMessage),self._trigger("channelMessage",indiMessage,clone(self._socketSession))}}else self._processSigMessage(message),self._trigger("channelMessage",message,clone(self._socketSession))}),self._joinRoomManager.socketsFn.push(function(currentJoinRoomTimestamp){currentJoinRoomTimestamp!==joinRoomTimestamp&&socket.disconnect()}),self._socket=socket},Skylink.prototype._openChannel=function(joinRoomTimestamp){var self=this;if(self._channelOpen)return void log.error([null,"Socket",null,"Unable to instantiate a new channel connection as there is already an ongoing channel connection"]);if(self._readyState!==self.READY_STATE_CHANGE.COMPLETED)return void log.error([null,"Socket",null,"Unable to instantiate a new channel connection as readyState is not ready"]);self._initOptions.forceSSL?self._signalingServerProtocol="https:":self._signalingServerProtocol=window.location.protocol;var socketType="WebSocket";window.WebSocket||(socketType="Polling"),self._socketSession.finalAttempts=0,self._socketSession.attempts=0,self._signalingServerPort=null,self._createSocket(socketType,joinRoomTimestamp)},Skylink.prototype._closeChannel=function(){this._socket&&(this._socket.removeAllListeners("connect_error"),this._socket.removeAllListeners("reconnect_attempt"),this._socket.removeAllListeners("reconnect_error"),this._socket.removeAllListeners("reconnect_failed"),this._socket.removeAllListeners("connect"),this._socket.removeAllListeners("reconnect"),this._socket.removeAllListeners("error"),this._socket.removeAllListeners("disconnect"),this._socket.removeAllListeners("message")),this._channelOpen&&(this._socket&&this._socket.disconnect(),log.log([null,"Socket",null,"Channel closed"]),this._channelOpen=!1,this._trigger("channelClose",clone(this._socketSession)),this._inRoom&&this._user&&this._user.sid&&(this.leaveRoom(!1),this._trigger("sessionDisconnect",this._user.sid,this.getPeerInfo()))),this._socket=null},Skylink.prototype.sendMessage=function(message,targetPeerId){var listOfPeers=Object.keys(this._peerInformations),isPrivate=!1;if(Array.isArray(targetPeerId)?(listOfPeers=targetPeerId,isPrivate=!0):targetPeerId&&"string"==typeof targetPeerId&&(listOfPeers=[targetPeerId],isPrivate=!0),!this._inRoom||!this._socket||!this._user)return void log.error("Unable to send message as User is not in Room. ->",message);for(var i=0;i<listOfPeers.length;i++){var peerId=listOfPeers[i];this._hasMCU||this._peerInformations[peerId]?"MCU"===peerId?(listOfPeers.splice(i,1),i--):isPrivate&&(log.debug([peerId,"Socket",null,"Sending private message to Peer"]),this._sendChannelMessage({cid:this._key,data:message,mid:this._user.sid,rid:this._room.id,target:peerId,type:this._SIG_MESSAGE_TYPE.PRIVATE_MESSAGE})):(log.error([peerId,"Socket",null,"Dropping of sending message to Peer as Peer session does not exists"]),listOfPeers.splice(i,1),i--)}0===listOfPeers.length&&log.warn("Currently there are no Peers to send message to (unless the message is queued and there are Peer connected by then)."),isPrivate?this._trigger("incomingMessage",{content:message,isPrivate:isPrivate,targetPeerId:targetPeerId||null,listOfPeers:listOfPeers,isDataChannel:!1,senderPeerId:this._user.sid},this._user.sid,this.getPeerInfo(),!0):(log.debug([null,"Socket",null,"Broadcasting message to Peers"]),this._sendChannelMessage({cid:this._key,data:message,mid:this._user.sid,rid:this._room.id,type:this._SIG_MESSAGE_TYPE.PUBLIC_MESSAGE}))},Skylink.prototype.startRecording=function(callback){var self=this;if(!self._hasMCU){var noMCUError="Unable to start recording as MCU is not connected";return log.error(noMCUError),self._handleRecordingStats("error-no-mcu-start",null,null,noMCUError),void("function"==typeof callback&&callback(new Error(noMCUError),null))}if(self._currentRecordingId){var hasRecordingSessionError="Unable to start recording as there is an existing recording in-progress";return log.error(hasRecordingSessionError),self._handleRecordingStats("error-start-when-active",self._currentRecordingId,null,hasRecordingSessionError),void("function"==typeof callback&&callback(new Error(hasRecordingSessionError),null))}"function"==typeof callback&&self.once("recordingState",function(state,recordingId){callback(null,recordingId)},function(state){return state===self.RECORDING_STATE.START}),self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.START_RECORDING,rid:self._room.id,target:"MCU"}),self._handleRecordingStats("request-start"),log.debug(["MCU","Recording",null,"Starting recording"])},Skylink.prototype.stopRecording=function(callback){var self=this;if(!self._hasMCU){var noMCUError="Unable to stop recording as MCU is not connected";return log.error(noMCUError),self._handleRecordingStats("error-no-mcu-stop",null,null,noMCUError),void("function"==typeof callback&&callback(new Error(noMCUError),null))}if(!self._currentRecordingId){var noRecordingSessionError="Unable to stop recording as there is no recording in-progress";return log.error(noRecordingSessionError),self._handleRecordingStats("error-stop-when-inactive",null,null,noRecordingSessionError),void("function"==typeof callback&&callback(new Error(noRecordingSessionError),null))}if(self._recordingStartInterval){var recordingSecsRequiredError="Unable to stop recording as 4 seconds has not been recorded yet";return log.error(recordingSecsRequiredError),
self._handleRecordingStats("error-min-stop",self._currentRecordingId,null,recordingSecsRequiredError),void("function"==typeof callback&&callback(new Error(recordingSecsRequiredError),null))}if("function"==typeof callback){var expectedRecordingId=self._currentRecordingId;self.once("recordingState",function(state,recordingId,link,error){callback(null,recordingId)},function(state,recordingId){if(expectedRecordingId===recordingId)return state===self.RECORDING_STATE.STOP})}self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.STOP_RECORDING,rid:self._room.id,target:"MCU"}),self._handleRecordingStats("request-stop",self._currentRecordingId),log.debug(["MCU","Recording",null,"Stopping recording"])},Skylink.prototype.getRecordings=function(){return clone(this._recordings)},Skylink.prototype._processSigMessage=function(message,session){var origin=message.mid;if(origin&&origin!==this._user.sid||(origin="Server"),log.debug([origin,"Socket",message.type,"Received from peer ->"],clone(message)),message.mid===this._user.sid&&message.type!==this._SIG_MESSAGE_TYPE.REDIRECT&&message.type!==this._SIG_MESSAGE_TYPE.IN_ROOM)return void log.debug([origin,"Socket",message.type,"Ignoring message ->"],clone(message));switch(message.type){case this._SIG_MESSAGE_TYPE.PUBLIC_MESSAGE:this._publicMessageHandler(message);break;case this._SIG_MESSAGE_TYPE.PRIVATE_MESSAGE:this._privateMessageHandler(message);break;case this._SIG_MESSAGE_TYPE.IN_ROOM:this._inRoomHandler(message);break;case this._SIG_MESSAGE_TYPE.ENTER:this._enterHandler(message);break;case this._SIG_MESSAGE_TYPE.WELCOME:this._welcomeHandler(message);break;case this._SIG_MESSAGE_TYPE.RESTART:this._restartHandler(message);break;case this._SIG_MESSAGE_TYPE.OFFER:this._offerHandler(message);break;case this._SIG_MESSAGE_TYPE.ANSWER:this._answerHandler(message);break;case this._SIG_MESSAGE_TYPE.CANDIDATE:this._candidateHandler(message);break;case this._SIG_MESSAGE_TYPE.BYE:this._byeHandler(message);break;case this._SIG_MESSAGE_TYPE.REDIRECT:this._redirectHandler(message);break;case this._SIG_MESSAGE_TYPE.UPDATE_USER:this._updateUserEventHandler(message);break;case this._SIG_MESSAGE_TYPE.MUTE_VIDEO:this._muteVideoEventHandler(message);break;case this._SIG_MESSAGE_TYPE.MUTE_AUDIO:this._muteAudioEventHandler(message);break;case this._SIG_MESSAGE_TYPE.STREAM:this._streamEventHandler(message);break;case this._SIG_MESSAGE_TYPE.ROOM_LOCK:this._roomLockEventHandler(message);break;case this._SIG_MESSAGE_TYPE.PEER_LIST:this._peerListEventHandler(message);break;case this._SIG_MESSAGE_TYPE.INTRODUCE_ERROR:this._introduceErrorEventHandler(message);break;case this._SIG_MESSAGE_TYPE.APPROACH:this._approachEventHandler(message);break;case this._SIG_MESSAGE_TYPE.RECORDING:this._recordingEventHandler(message);break;case this._SIG_MESSAGE_TYPE.RTMP:this._rtmpEventHandler(message);break;case this._SIG_MESSAGE_TYPE.END_OF_CANDIDATES:this._endOfCandidatesHandler(message);break;default:log.error([message.mid,"Socket",message.type,"Unsupported message ->"],clone(message))}},Skylink.prototype._peerListEventHandler=function(message){var self=this;self._peerList=message.result,log.log(["Server",null,message.type,"Received list of peers"],self._peerList),self._trigger("getPeersStateChange",self.GET_PEERS_STATE.RECEIVED,self._user.sid,self._peerList)},Skylink.prototype._endOfCandidatesHandler=function(message){var self=this,targetMid=message.mid;self._peerConnections[targetMid]&&self._peerConnections[targetMid].signalingState!==self.PEER_CONNECTION_STATE.CLOSED&&(self._peerEndOfCandidatesCounter[targetMid].expectedLen=message.noOfExpectedCandidates||0,self._handleIceGatheringStats("complete",targetMid,!0),self._signalingEndOfCandidates(targetMid))},Skylink.prototype._introduceErrorEventHandler=function(message){var self=this;log.log(["Server",null,message.type,"Introduce failed. Reason: "+message.reason]),self._handleSessionStats(message),self._trigger("introduceStateChange",self.INTRODUCE_STATE.ERROR,self._user.sid,message.sendingPeerId,message.receivingPeerId,message.reason)},Skylink.prototype._approachEventHandler=function(message){var self=this;log.log(["Server",null,message.type,"Approaching peer"],message.target),self._handleSessionStats(message),self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ENTER,self._user.sid);var enterMsg={type:self._SIG_MESSAGE_TYPE.ENTER,mid:self._user.sid,rid:self._room.id,agent:AdapterJS.webrtcDetectedBrowser,version:(AdapterJS.webrtcDetectedVersion||0).toString(),os:window.navigator.platform,userInfo:self._getUserInfo(),receiveOnly:self.getPeerInfo().config.receiveOnly,target:message.target,weight:self._peerPriorityWeight,temasysPluginVersion:AdapterJS.WebRTCPlugin.plugin?AdapterJS.WebRTCPlugin.plugin.VERSION:null,enableIceTrickle:self._initOptions.enableIceTrickle,enableDataChannel:self._initOptions.enableDataChannel,enableIceRestart:self._enableIceRestart,SMProtocolVersion:self.SM_PROTOCOL_VERSION,DTProtocolVersion:self.DT_PROTOCOL_VERSION};self._publishOnly&&(enterMsg.publishOnly={type:self._streams.screenshare&&self._streams.screenshare.stream?"screenshare":"video"}),self._parentId&&(enterMsg.parentId=self._parentId),self._hasMCU&&(enterMsg.target="MCU"),self._sendChannelMessage(enterMsg),self._handleSessionStats(enterMsg)},Skylink.prototype._redirectHandler=function(message){if(log.log(["Server",null,message.type,"System action warning:"],{message:message.info,reason:message.reason,action:message.action}),this._handleSessionStats(message),message.action===this.SYSTEM_ACTION.REJECT)for(var key in this._peerConnections)this._peerConnections.hasOwnProperty(key)&&this._removePeer(key);"toClose"===message.reason&&(message.reason="toclose"),this._trigger("systemAction",message.action,message.info,message.reason)},Skylink.prototype._updateUserEventHandler=function(message){var targetMid=message.mid;if(log.log([targetMid,null,message.type,"Peer updated userData:"],message.userData),this._peerInformations[targetMid]){if(this._peerMessagesStamps[targetMid]&&"number"==typeof message.stamp){if(message.stamp<this._peerMessagesStamps[targetMid].userData)return void log.warn([targetMid,null,message.type,"Dropping outdated status ->"],message);this._peerMessagesStamps[targetMid].userData=message.stamp}this._peerInformations[targetMid].userData=message.userData||{},this._trigger("peerUpdated",targetMid,this.getPeerInfo(targetMid),!1)}else log.log([targetMid,null,message.type,"Peer does not have any user information"])},Skylink.prototype._roomLockEventHandler=function(message){var targetMid=message.mid;log.log([targetMid,message.type,"Room lock status:"],message.lock),this._trigger("roomLock",message.lock,targetMid,this.getPeerInfo(targetMid),!1)},Skylink.prototype._muteAudioEventHandler=function(message){var targetMid=message.mid;if(log.log([targetMid,null,message.type,"Peer's audio muted:"],message.muted),this._peerInformations[targetMid]){if(this._peerMessagesStamps[targetMid]&&"number"==typeof message.stamp){if(message.stamp<this._peerMessagesStamps[targetMid].audioMuted)return void log.warn([targetMid,null,message.type,"Dropping outdated status ->"],message);this._peerMessagesStamps[targetMid].audioMuted=message.stamp}this._peerInformations[targetMid].mediaStatus.audioMuted=message.muted,this._trigger("streamMuted",targetMid,this.getPeerInfo(targetMid),!1,this._peerInformations[targetMid].settings.video&&this._peerInformations[targetMid].settings.video.screenshare),this._trigger("peerUpdated",targetMid,this.getPeerInfo(targetMid),!1)}else log.log([targetMid,message.type,"Peer does not have any user information"])},Skylink.prototype._muteVideoEventHandler=function(message){var targetMid=message.mid;if(log.log([targetMid,null,message.type,"Peer's video muted:"],message.muted),this._peerInformations[targetMid]){if(this._peerMessagesStamps[targetMid]&&"number"==typeof message.stamp){if(message.stamp<this._peerMessagesStamps[targetMid].videoMuted)return void log.warn([targetMid,null,message.type,"Dropping outdated status ->"],message);this._peerMessagesStamps[targetMid].videoMuted=message.stamp}this._peerInformations[targetMid].mediaStatus.videoMuted=message.muted,this._trigger("streamMuted",targetMid,this.getPeerInfo(targetMid),!1,this._peerInformations[targetMid].settings.video&&this._peerInformations[targetMid].settings.video.screenshare),this._trigger("peerUpdated",targetMid,this.getPeerInfo(targetMid),!1)}else log.log([targetMid,null,message.type,"Peer does not have any user information"])},Skylink.prototype._streamEventHandler=function(message){var targetMid=message.mid;log.log([targetMid,null,message.type,"Peer's stream status:"],message.status),this._peerInformations[targetMid]&&message.streamId?(this._streamsSession[targetMid]=this._streamsSession[targetMid]||{},"ended"===message.status&&(message.settings&&"object"==typeof message.settings&&void 0===this._streamsSession[targetMid][message.streamId]&&(this._streamsSession[targetMid][message.streamId]={audio:message.settings.audio,video:message.settings.video}),this._handleEndedStreams(targetMid,message.streamId))):log.log([targetMid,null,message.type,"Peer does not have any user information"])},Skylink.prototype._byeHandler=function(message){var targetMid=message.mid;(this._user||{}).sid!==targetMid?(log.log([targetMid,null,message.type,"Peer has left the room"]),this._removePeer(targetMid)):log.log([targetMid,null,message.type,"Self has left the room"])},Skylink.prototype._privateMessageHandler=function(message){var targetMid=message.mid;log.log([targetMid,null,message.type,"Received private message from peer:"],message.data),this._trigger("incomingMessage",{content:message.data,isPrivate:!0,targetPeerId:message.target,isDataChannel:!1,senderPeerId:targetMid},targetMid,this.getPeerInfo(targetMid),!1)},Skylink.prototype._publicMessageHandler=function(message){var targetMid=message.mid;log.log([targetMid,null,message.type,"Received public message from peer:"],message.data),this._trigger("incomingMessage",{content:message.data,isPrivate:!1,targetPeerId:null,isDataChannel:!1,senderPeerId:targetMid},targetMid,this.getPeerInfo(targetMid),!1)},Skylink.prototype._recordingEventHandler=function(message){var self=this;if(log.debug(["MCU","Recording",null,"Received recording message ->"],message),"on"===message.action)self._handleRecordingStats("start",message.recordingId),self._recordings[message.recordingId]||(log.debug(["MCU","Recording",message.recordingId,"Started recording"]),self._currentRecordingId=message.recordingId,self._recordings[message.recordingId]={active:!0,state:self.RECORDING_STATE.START,startedDateTime:(new Date).toISOString(),endedDateTime:null,mixingDateTime:null,links:null,error:null},self._recordingStartInterval=setTimeout(function(){log.log(["MCU","Recording",message.recordingId,"4 seconds has been recorded. Recording can be stopped now"]),self._recordingStartInterval=null},4e3),self._trigger("recordingState",self.RECORDING_STATE.START,message.recordingId,null,null));else if("off"===message.action){if(self._handleRecordingStats("stop",message.recordingId),!self._recordings[message.recordingId])return void log.error(["MCU","Recording",message.recordingId,'Received request of "off" but the session is empty']);self._currentRecordingId=null,self._recordingStartInterval&&(clearTimeout(self._recordingStartInterval),log.warn(["MCU","Recording",message.recordingId,"Recording stopped abruptly before 4 seconds"]),self._recordingStartInterval=null),log.debug(["MCU","Recording",message.recordingId,"Stopped recording"]),self._recordings[message.recordingId].active=!1,self._recordings[message.recordingId].state=self.RECORDING_STATE.STOP,self._recordings[message.recordingId].endedDateTime=(new Date).toISOString(),self._trigger("recordingState",self.RECORDING_STATE.STOP,message.recordingId,null,null)}else{var recordingError=new Error(message.error||"Unknown error");if(self._handleRecordingStats("error",message.recordingId,null,recordingError.message),!self._recordings[message.recordingId])return void log.error(["MCU","Recording",message.recordingId,"Received error but the session is empty ->"],recordingError);log.error(["MCU","Recording",message.recordingId,"Recording failure ->"],recordingError),self._recordings[message.recordingId].state=self.RECORDING_STATE.ERROR,self._recordings[message.recordingId].error=recordingError,self._recordings[message.recordingId].active&&(log.debug(["MCU","Recording",message.recordingId,"Stopped recording abruptly"]),self._recordings[message.recordingId].active=!1),self._trigger("recordingState",self.RECORDING_STATE.ERROR,message.recordingId,null,recordingError)}},Skylink.prototype._inRoomHandler=function(message){var self=this;log.log(["Server",null,message.type,"User is now in the room and functionalities are now available. Config received:"],message.pc_config),self._room.connection.peerConfig=self._setIceServers((message.pc_config||{}).iceServers||[]),self._inRoom=!0,self._user.sid=message.sid,self._peerPriorityWeight=message.tieBreaker+(self._initOptions.priorityWeightScheme===self.PRIORITY_WEIGHT_SCHEME.AUTO?0:self._initOptions.priorityWeightScheme===self.PRIORITY_WEIGHT_SCHEME.ENFORCE_OFFERER?2e15:-2e15),self._handleSessionStats(message),self._trigger("peerJoined",self._user.sid,self.getPeerInfo(),!0),self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ENTER,self._user.sid);var streamId=null;self._streams.screenshare&&self._streams.screenshare.stream?(streamId=self._streams.screenshare.stream.id||self._streams.screenshare.stream.label,self._trigger("incomingStream",self._user.sid,self._streams.screenshare.stream,!0,self.getPeerInfo(),!0,streamId)):self._streams.userMedia&&self._streams.userMedia.stream&&(streamId=self._streams.userMedia.stream.id||self._streams.userMedia.stream.label,self._trigger("incomingStream",self._user.sid,self._streams.userMedia.stream,!0,self.getPeerInfo(),!1,streamId));var enterMsg={type:self._SIG_MESSAGE_TYPE.ENTER,mid:self._user.sid,rid:self._room.id,agent:AdapterJS.webrtcDetectedBrowser,version:(AdapterJS.webrtcDetectedVersion||0).toString(),os:window.navigator.platform,userInfo:self._getUserInfo(),receiveOnly:self.getPeerInfo().config.receiveOnly,weight:self._peerPriorityWeight,temasysPluginVersion:AdapterJS.WebRTCPlugin.plugin?AdapterJS.WebRTCPlugin.plugin.VERSION:null,enableIceTrickle:self._initOptions.enableIceTrickle,enableDataChannel:self._initOptions.enableDataChannel,enableIceRestart:self._enableIceRestart,SMProtocolVersion:self.SM_PROTOCOL_VERSION,DTProtocolVersion:self.DT_PROTOCOL_VERSION};self._publishOnly&&(enterMsg.publishOnly={type:self._streams.screenshare&&self._streams.screenshare.stream?"screenshare":"video"}),self._parentId&&(enterMsg.parentId=self._parentId),self._hasMCU&&(enterMsg.target="MCU"),self._sendChannelMessage(enterMsg),self._handleSessionStats(enterMsg)},Skylink.prototype._enterHandler=function(message){var self=this,targetMid=message.mid,isNewPeer=!1,userInfo=message.userInfo||{};if(userInfo.settings=userInfo.settings||{},userInfo.mediaStatus=userInfo.mediaStatus||{},userInfo.config={enableIceTrickle:"boolean"!=typeof message.enableIceTrickle||message.enableIceTrickle,enableIceRestart:"boolean"==typeof message.enableIceRestart&&message.enableIceRestart,enableDataChannel:"boolean"!=typeof message.enableDataChannel||message.enableDataChannel,priorityWeight:"number"==typeof message.weight?message.weight:0,receiveOnly:!0===message.receiveOnly,publishOnly:!!message.publishOnly},userInfo.parentId=message.parentId||null,userInfo.agent={name:"string"==typeof message.agent&&message.agent?message.agent:"other",version:function(){if(!message.version||"string"!=typeof message.version)return 0;if(message.version.indexOf(".")>-1){var parts=message.version.split(".");if(parts.length>2){var majorVer=parts[0]||"0";return parts.splice(0,1),parseFloat(majorVer+"."+parts.join("0"),10)}return parseFloat(message.version||"0",10)}return parseInt(message.version||"0",10)}(),os:"string"==typeof message.os&&message.os?message.os:"",pluginVersion:"string"==typeof message.temasysPluginVersion&&message.temasysPluginVersion?message.temasysPluginVersion:null,SMProtocolVersion:message.SMProtocolVersion&&"string"==typeof message.SMProtocolVersion?message.SMProtocolVersion:"0.1.1",DTProtocolVersion:message.DTProtocolVersion&&"string"==typeof message.DTProtocolVersion?message.DTProtocolVersion:self._hasMCU||"MCU"===targetMid?"0.1.2":"0.1.0"},log.log([targetMid,"RTCPeerConnection",null,'Peer "enter" received ->'],message),self._handleNegotiationStats("enter",targetMid,message,!0),"MCU"!==targetMid&&(self._parentId&&self._parentId===targetMid||self._hasMCU&&self._publishOnly||message.parentId&&self._user&&self._user.sid&&message.parentId===self._user.sid))return void log.warn([targetMid,"RTCPeerConnection",null,'Discarding "enter" for parentId or publishOnly case ->'],message);var processPeerFn=function(cert){if(!self._peerInformations[targetMid]&&!self._hasMCU||self._hasMCU&&!self._peerInformations.MCU){isNewPeer=!0,self._peerInformations[targetMid]=userInfo;var hasScreenshare=userInfo.settings.video&&"object"==typeof userInfo.settings.video&&!!userInfo.settings.video.screenshare;self._addPeer(targetMid,cert||null,{agent:userInfo.agent.name,version:userInfo.agent.version,os:userInfo.agent.os},message.receiveOnly,hasScreenshare),"MCU"===targetMid?(log.info([targetMid,"RTCPeerConnection",null,"MCU feature has been enabled"]),self._hasMCU=!0,self._trigger("peerJoined",targetMid,self.getPeerInfo(targetMid),!1),self._trigger("serverPeerJoined",targetMid,self.SERVER_PEER_TYPE.MCU)):self._trigger("peerJoined",targetMid,self.getPeerInfo(targetMid),!1),self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ENTER,targetMid)}if(self._hasMCU&&targetMid!==self._user.sid&&self._trigger("peerJoined",targetMid,self.getPeerInfo(targetMid),!1),self._peerMessagesStamps[targetMid]=self._peerMessagesStamps[targetMid]||{userData:0,audioMuted:0,videoMuted:0},!0!==self._hasMCU){var welcomeMsg={type:self._SIG_MESSAGE_TYPE.WELCOME,mid:self._user.sid,rid:self._room.id,enableIceTrickle:self._initOptions.enableIceTrickle,enableDataChannel:self._initOptions.enableDataChannel,enableIceRestart:self._enableIceRestart,agent:AdapterJS.webrtcDetectedBrowser,version:(AdapterJS.webrtcDetectedVersion||0).toString(),receiveOnly:self.getPeerInfo().config.receiveOnly,os:window.navigator.platform,userInfo:self._getUserInfo(targetMid),target:targetMid,weight:self._peerPriorityWeight,temasysPluginVersion:AdapterJS.WebRTCPlugin.plugin?AdapterJS.WebRTCPlugin.plugin.VERSION:null,SMProtocolVersion:self.SM_PROTOCOL_VERSION,DTProtocolVersion:self.DT_PROTOCOL_VERSION};self._publishOnly&&(welcomeMsg.publishOnly={type:self._streams.screenshare&&self._streams.screenshare.stream?"screenshare":"video"}),self._parentId&&(welcomeMsg.parentId=self._parentId),self._sendChannelMessage(welcomeMsg),self._handleNegotiationStats("welcome",targetMid,welcomeMsg,!1)}isNewPeer&&self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.WELCOME,targetMid)};if(self._peerConnectionConfig.certificate!==self.PEER_CERTIFICATE.AUTO&&"function"==typeof RTCPeerConnection.generateCertificate){var certOptions={};certOptions=self._peerConnectionConfig.certificate===self.PEER_CERTIFICATE.ECDSA?{name:"ECDSA",namedCurve:"P-256"}:{name:"RSASSA-PKCS1-v1_5",modulusLength:2048,publicExponent:new Uint8Array([1,0,1]),hash:"SHA-256"},RTCPeerConnection.generateCertificate(certOptions).then(function(cert){processPeerFn(cert)},function(){processPeerFn()})}else processPeerFn()},Skylink.prototype._restartHandler=function(message){var self=this,targetMid=message.mid,trackCount=message.trackCount,userInfo=message.userInfo||{};if(userInfo.settings=userInfo.settings||{},userInfo.mediaStatus=userInfo.mediaStatus||{},userInfo.config={enableIceTrickle:"boolean"!=typeof message.enableIceTrickle||message.enableIceTrickle,enableIceRestart:"boolean"==typeof message.enableIceRestart&&message.enableIceRestart,enableDataChannel:"boolean"!=typeof message.enableDataChannel||message.enableDataChannel,priorityWeight:"number"==typeof message.weight?message.weight:0,receiveOnly:!0===message.receiveOnly,publishOnly:!!message.publishOnly},userInfo.parentId=message.parentId||null,userInfo.agent={name:"string"==typeof message.agent&&message.agent?message.agent:"other",version:function(){if(!message.version||"string"!=typeof message.version)return 0;if(message.version.indexOf(".")>-1){var parts=message.version.split(".");if(parts.length>2){var majorVer=parts[0]||"0";return parts.splice(0,1),parseFloat(majorVer+"."+parts.join("0"),10)}return parseFloat(message.version||"0",10)}return parseInt(message.version||"0",10)}(),os:"string"==typeof message.os&&message.os?message.os:"",pluginVersion:"string"==typeof message.temasysPluginVersion&&message.temasysPluginVersion?message.temasysPluginVersion:null,SMProtocolVersion:message.SMProtocolVersion&&"string"==typeof message.SMProtocolVersion?message.SMProtocolVersion:"0.1.1",DTProtocolVersion:message.DTProtocolVersion&&"string"==typeof message.DTProtocolVersion?message.DTProtocolVersion:self._hasMCU||"MCU"===targetMid?"0.1.2":"0.1.0"},trackCount&&(self._currentRequestedTracks=trackCount),log.log([targetMid,"RTCPeerConnection",null,'Peer "restart" received ->'],message),self._handleNegotiationStats("restart",targetMid,message,!0),!self._peerInformations[targetMid])return void log.error([targetMid,"RTCPeerConnection",null,"Peer does not have an existing session. Ignoring restart process."]);if("MCU"!==targetMid&&(self._parentId&&self._parentId===targetMid||self._hasMCU&&self._publishOnly||message.parentId&&self._user&&self._user.sid&&message.parentId===self._user.sid))return void log.warn([targetMid,"RTCPeerConnection",null,'Discarding "restart" for parentId or publishOnly case ->'],message);if(self._hasMCU&&!self._initOptions.mcuUseRenegoRestart)return log.warn([targetMid,"RTCPeerConnection",null,"Dropping restart request as MCU does not support re-negotiation. Restart workaround is to re-join Room for Peer."]),void self._trigger("peerRestart",targetMid,self.getPeerInfo(targetMid),!1,!1);if(self._peerInformations[targetMid]=userInfo,self._peerMessagesStamps[targetMid]=self._peerMessagesStamps[targetMid]||{userData:0,audioMuted:0,videoMuted:0},self._peerEndOfCandidatesCounter[targetMid]=self._peerEndOfCandidatesCounter[targetMid]||{},self._peerEndOfCandidatesCounter[targetMid].len=0,self._peerPriorityWeight>message.weight){if(log.debug([targetMid,"RTCPeerConnection",null,"Re-negotiating new offer/answer."]),self._peerMessagesStamps[targetMid].hasRestart)return void log.warn([targetMid,"RTCPeerConnection",null,'Discarding extra "restart" received.']);self._peerMessagesStamps[targetMid].hasRestart=!0,self._doOffer(targetMid,!0===message.doIceRestart,{agent:userInfo.agent.name,version:userInfo.agent.version,os:userInfo.agent.os},!0)}else{log.debug([targetMid,"RTCPeerConnection",null,"Waiting for peer to start re-negotiation."]);var restartMsg={type:self._SIG_MESSAGE_TYPE.RESTART,mid:self._user.sid,rid:self._room.id,agent:AdapterJS.webrtcDetectedBrowser,version:(AdapterJS.webrtcDetectedVersion||0).toString(),os:window.navigator.platform,userInfo:self._getUserInfo(targetMid),target:targetMid,weight:self._peerPriorityWeight,enableIceTrickle:self._initOptions.enableIceTrickle,enableDataChannel:self._initOptions.enableDataChannel,enableIceRestart:self._enableIceRestart,doIceRestart:!0===message.doIceRestart,receiveOnly:self.getPeerInfo().config.receiveOnly,isRestartResend:!0,temasysPluginVersion:AdapterJS.WebRTCPlugin.plugin?AdapterJS.WebRTCPlugin.plugin.VERSION:null,SMProtocolVersion:self.SM_PROTOCOL_VERSION,DTProtocolVersion:self.DT_PROTOCOL_VERSION};self._publishOnly&&(restartMsg.publishOnly={type:self._streams.screenshare&&self._streams.screenshare.stream?"screenshare":"video"}),self._parentId&&(restartMsg.parentId=self._parentId),self._sendChannelMessage(restartMsg),self._handleNegotiationStats("restart",targetMid,restartMsg,!1)}self._trigger("peerRestart",targetMid,self.getPeerInfo(targetMid),!1,!0===message.doIceRestart)},Skylink.prototype._welcomeHandler=function(message){var self=this,targetMid=message.mid,isNewPeer=!1,trackCount=message.trackCount,userInfo=message.userInfo||{};if(userInfo.settings=userInfo.settings||{},userInfo.mediaStatus=userInfo.mediaStatus||{},userInfo.config={enableIceTrickle:"boolean"!=typeof message.enableIceTrickle||message.enableIceTrickle,enableIceRestart:"boolean"==typeof message.enableIceRestart&&message.enableIceRestart,enableDataChannel:"boolean"!=typeof message.enableDataChannel||message.enableDataChannel,priorityWeight:"number"==typeof message.weight?message.weight:0,receiveOnly:!0===message.receiveOnly,publishOnly:!!message.publishOnly},userInfo.parentId=message.parentId||null,userInfo.agent={name:"string"==typeof message.agent&&message.agent?message.agent:"other",version:function(){if(!message.version||"string"!=typeof message.version)return 0;if(message.version.indexOf(".")>-1){var parts=message.version.split(".");if(parts.length>2){var majorVer=parts[0]||"0";return parts.splice(0,1),parseFloat(majorVer+"."+parts.join("0"),10)}return parseFloat(message.version||"0",10)}return parseInt(message.version||"0",10)}(),os:"string"==typeof message.os&&message.os?message.os:"",pluginVersion:"string"==typeof message.temasysPluginVersion&&message.temasysPluginVersion?message.temasysPluginVersion:null,SMProtocolVersion:message.SMProtocolVersion&&"string"==typeof message.SMProtocolVersion?message.SMProtocolVersion:"0.1.1",DTProtocolVersion:message.DTProtocolVersion&&"string"==typeof message.DTProtocolVersion?message.DTProtocolVersion:self._hasMCU||"MCU"===targetMid?"0.1.2":"0.1.0"},trackCount&&(self._currentRequestedTracks=trackCount),log.log([targetMid,"RTCPeerConnection",null,'Peer "welcome" received ->'],message),self._handleNegotiationStats("welcome",targetMid,message,!0),"MCU"!==targetMid&&(self._parentId&&self._parentId===targetMid||self._hasMCU&&self._publishOnly||message.parentId&&self._user&&self._user.sid&&message.parentId===self._user.sid))return void log.warn([targetMid,"RTCPeerConnection",null,'Discarding "welcome" for parentId or publishOnly case ->'],message);var processPeerFn=function(cert){if(!self._peerInformations[targetMid]&&!self._hasMCU||self._hasMCU&&!self._peerInformations.MCU){isNewPeer=!0,self._peerInformations[targetMid]=userInfo;var hasScreenshare=userInfo.settings.video&&"object"==typeof userInfo.settings.video&&!!userInfo.settings.video.screenshare;self._addPeer(targetMid,cert||null,{agent:userInfo.agent.name,version:userInfo.agent.version,os:userInfo.agent.os},message.receiveOnly,hasScreenshare),"MCU"===targetMid?(log.info([targetMid,"RTCPeerConnection",null,"MCU feature has been enabled"]),self._hasMCU=!0,self._trigger("serverPeerJoined",targetMid,self.SERVER_PEER_TYPE.MCU)):self._trigger("peerJoined",targetMid,self.getPeerInfo(targetMid),!1),self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ENTER,targetMid),self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.WELCOME,targetMid)}if(self._hasMCU&&Array.isArray(message.peersInRoom)&&message.peersInRoom.length)for(var userId=self._user.sid,peersInRoomIndex=0;peersInRoomIndex<message.peersInRoom.length;peersInRoomIndex++){var _PEER_ID=message.peersInRoom[peersInRoomIndex].mid;_PEER_ID!==userId&&self._trigger("peerJoined",_PEER_ID,self.getPeerInfo(_PEER_ID),!1)}if(self._peerMessagesStamps[targetMid]=self._peerMessagesStamps[targetMid]||{userData:0,audioMuted:0,videoMuted:0,hasWelcome:!1},self._hasMCU||self._peerPriorityWeight>message.weight){if(self._peerMessagesStamps[targetMid].hasWelcome)return void log.warn([targetMid,"RTCPeerConnection",null,'Discarding extra "welcome" received.']);log.debug([targetMid,"RTCPeerConnection",null,"Starting negotiation"]),self._peerMessagesStamps[targetMid].hasWelcome=!0,self._doOffer(targetMid,!1,{agent:userInfo.agent.name,version:userInfo.agent.version,os:userInfo.agent.os},!0)}else{log.debug([targetMid,"RTCPeerConnection",null,"Waiting for peer to start negotiation."]);var welcomeMsg={type:self._SIG_MESSAGE_TYPE.WELCOME,mid:self._user.sid,rid:self._room.id,enableIceTrickle:self._initOptions.enableIceTrickle,enableDataChannel:self._initOptions.enableDataChannel,enableIceRestart:self._enableIceRestart,receiveOnly:self.getPeerInfo().config.receiveOnly,agent:AdapterJS.webrtcDetectedBrowser,version:(AdapterJS.webrtcDetectedVersion||0).toString(),os:window.navigator.platform,userInfo:self._getUserInfo(targetMid),target:targetMid,weight:self._peerPriorityWeight,temasysPluginVersion:AdapterJS.WebRTCPlugin.plugin?AdapterJS.WebRTCPlugin.plugin.VERSION:null,SMProtocolVersion:self.SM_PROTOCOL_VERSION,DTProtocolVersion:self.DT_PROTOCOL_VERSION};self._publishOnly&&(welcomeMsg.publishOnly={type:self._streams.screenshare&&self._streams.screenshare.stream?"screenshare":"video"}),self._parentId&&(welcomeMsg.parentId=self._parentId),self._sendChannelMessage(welcomeMsg),self._handleNegotiationStats("welcome",targetMid,welcomeMsg,!1)}};if(self._peerConnectionConfig.certificate!==self.PEER_CERTIFICATE.AUTO&&"function"==typeof RTCPeerConnection.generateCertificate){var certOptions={};certOptions=self._peerConnectionConfig.certificate===self.PEER_CERTIFICATE.ECDSA?{name:"ECDSA",namedCurve:"P-256"}:{name:"RSASSA-PKCS1-v1_5",modulusLength:2048,publicExponent:new Uint8Array([1,0,1]),hash:"SHA-256"},RTCPeerConnection.generateCertificate(certOptions).then(function(cert){processPeerFn(cert)},function(){processPeerFn()})}else processPeerFn()},Skylink.prototype._offerHandler=function(message){var self=this,targetMid=message.mid,pc=self._peerConnections[targetMid];log.log([targetMid,null,message.type,"Received offer from peer. Session description:"],clone(message));var offer={type:"offer",sdp:self._hasMCU?message.sdp.replace(/\r\n/g,"\n").split("\n").join("\r\n"):message.sdp};if("MCU"===targetMid&&(self._transceiverIdPeerIdMap=message.transceiverIdPeerIdMap||{}),self._handleNegotiationStats("offer",targetMid,offer,!0),!pc)return self._hasMCU||log.error([targetMid,null,message.type,"Peer connection object not found. Unable to setRemoteDescription for offer"]),"MCU"!==targetMid&&self._hasMCU&&self._peerConnections.MCU&&log.warn([targetMid,null,message.type,"Peer connection object with MCU already exists. Dropping the offer."]),void self._handleNegotiationStats("dropped_offer",targetMid,offer,!0,"Peer connection does not exists");if(message.userInfo&&"object"==typeof message.userInfo){var userInfo=message.userInfo||{};self._peerInformations[targetMid].settings=userInfo.settings||{},self._peerInformations[targetMid].mediaStatus=userInfo.mediaStatus||{},self._peerInformations[targetMid].userData=userInfo.userData}if(log.log([targetMid,"RTCSessionDescription",message.type,"Session description object created"],offer),log.log([targetMid,"RTCSessionDescription",message.type,"Updated remote offer ->"],offer.sdp),pc.signalingState!==self.PEER_CONNECTION_STATE.STABLE)return log.warn([targetMid,null,message.type,'Peer connection state is not in "stable" state for re-negotiation. Dropping message.'],{signalingState:pc.signalingState,isRestart:!!message.resend}),void self._handleNegotiationStats("dropped_offer",targetMid,offer,!0,'Peer connection state is "'+pc.signalingState+'"');if(pc.processingRemoteSDP)return log.warn([targetMid,"RTCSessionDescription","offer","Dropping of setting local offer as there is another sessionDescription being processed ->"],offer),void self._handleNegotiationStats("dropped_offer",targetMid,offer,!0,"Peer connection is currently processing an existing sdp");pc.processingRemoteSDP=!0,message.userInfo&&self._trigger("peerUpdated",targetMid,self.getPeerInfo(targetMid),!1);var onSuccessCbFn=function(){log.debug([targetMid,"RTCSessionDescription",message.type,"Remote description set"]),pc.setOffer="remote",pc.processingRemoteSDP=!1,self._handleNegotiationStats("set_offer",targetMid,offer,!0),self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.OFFER,targetMid),
self._addIceCandidateFromQueue(targetMid),self._doAnswer(targetMid)},onErrorCbFn=function(error){pc.processingRemoteSDP=!1,self._handleNegotiationStats("error_set_offer",targetMid,offer,!0,error),self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ERROR,targetMid,error),log.error([targetMid,null,message.type,"Failed setting remote description:"],{error:error,state:pc.signalingState,offer:offer})};"edge"===self.getPeerInfo(targetMid).agent.name&&"\n"!==offer.sdp[offer.sdp.length-1]&&"\r"!==offer.sdp[offer.sdp.length-2]&&(offer.sdp=offer.sdp+"\r\n"),pc.setRemoteDescription(new RTCSessionDescription(offer),onSuccessCbFn,onErrorCbFn)},Skylink.prototype._candidateHandler=function(message){var targetMid=message.mid;if(!message.candidate&&!message.id)return void log.warn([targetMid,"RTCIceCandidate",null,"Received invalid ICE candidate message ->"],message);var canId="can-"+(new Date).getTime(),candidateType=message.candidate.split(" ")[7]||"",candidate=new RTCIceCandidate({sdpMLineIndex:message.label,candidate:message.candidate,sdpMid:message.id});if(log.debug([targetMid,"RTCIceCandidate",canId+":"+candidateType,"Received ICE candidate ->"],candidate),this._handleIceCandidateStats("received",targetMid,canId,candidate),this._peerEndOfCandidatesCounter[targetMid]=this._peerEndOfCandidatesCounter[targetMid]||{},this._peerEndOfCandidatesCounter[targetMid].len=this._peerEndOfCandidatesCounter[targetMid].len||0,this._peerEndOfCandidatesCounter[targetMid].hasSet=!1,this._peerEndOfCandidatesCounter[targetMid].len++,this._trigger("candidateProcessingState",this.CANDIDATE_PROCESSING_STATE.RECEIVED,targetMid,canId,candidateType,{candidate:candidate.candidate,sdpMid:candidate.sdpMid,sdpMLineIndex:candidate.sdpMLineIndex},null),!this._peerConnections[targetMid]||this._peerConnections[targetMid].signalingState===this.PEER_CONNECTION_STATE.CLOSED)return log.warn([targetMid,"RTCIceCandidate",canId+":"+candidateType,"Dropping ICE candidate as Peer connection does not exists or is closed"]),this._handleIceCandidateStats("process_failed",targetMid,canId,candidate,"Peer connection does not exist"),this._trigger("candidateProcessingState",this.CANDIDATE_PROCESSING_STATE.DROPPED,targetMid,canId,candidateType,{candidate:candidate.candidate,sdpMid:candidate.sdpMid,sdpMLineIndex:candidate.sdpMLineIndex},new Error("Failed processing ICE candidate as Peer connection does not exists or is closed.")),void this._signalingEndOfCandidates(targetMid);if(this._initOptions.filterCandidatesType[candidateType]){if(!this._hasMCU||!this._initOptions.forceTURN)return log.warn([targetMid,"RTCIceCandidate",canId+":"+candidateType,"Dropping received ICE candidate as it matches ICE candidate filtering flag ->"],candidate),this._handleIceCandidateStats("dropped",targetMid,canId,candidate),this._trigger("candidateProcessingState",this.CANDIDATE_PROCESSING_STATE.DROPPED,targetMid,canId,candidateType,{candidate:candidate.candidate,sdpMid:candidate.sdpMid,sdpMLineIndex:candidate.sdpMLineIndex},new Error("Dropping of processing ICE candidate as it matches ICE candidate filtering flag.")),void this._signalingEndOfCandidates(targetMid);log.warn([targetMid,"RTCIceCandidate",canId+":"+candidateType,"Not dropping received ICE candidate as TURN connections are enforced as MCU is present (and act as a TURN itself) so filtering of ICE candidate flags are not honoured ->"],candidate)}this._peerConnections[targetMid].remoteDescription&&this._peerConnections[targetMid].remoteDescription.sdp&&this._peerConnections[targetMid].localDescription&&this._peerConnections[targetMid].localDescription.sdp?this._addIceCandidate(targetMid,canId,candidate):this._addIceCandidateToQueue(targetMid,canId,candidate),this._signalingEndOfCandidates(targetMid),this._gatheredCandidates[targetMid]||(this._gatheredCandidates[targetMid]={sending:{host:[],srflx:[],relay:[]},receiving:{host:[],srflx:[],relay:[]}}),this._gatheredCandidates[targetMid].receiving[candidateType].push({sdpMid:candidate.sdpMid,sdpMLineIndex:candidate.sdpMLineIndex,candidate:candidate.candidate})},Skylink.prototype._answerHandler=function(message){var self=this,targetMid=message.mid,pc=self._peerConnections[targetMid];"MCU"===targetMid&&(self._transceiverIdPeerIdMap=message.transceiverIdPeerIdMap||{}),log.log([targetMid,null,message.type,"Received answer from peer. Session description:"],clone(message));var answer={type:"answer",sdp:self._hasMCU?message.sdp.replace(/\r\n/g,"\n").split("\n").join("\r\n"):message.sdp};if(self._handleNegotiationStats("answer",targetMid,answer,!0),!pc)return log.error([targetMid,null,message.type,"Peer connection object not found. Unable to setRemoteDescription for answer"]),void self._handleNegotiationStats("dropped_answer",targetMid,answer,!0,"Peer connection does not exist");if(message.userInfo&&"object"==typeof message.userInfo){var userInfo=message.userInfo||{};self._peerInformations[targetMid].settings=userInfo.settings||{},self._peerInformations[targetMid].mediaStatus=userInfo.mediaStatus||{},self._peerInformations[targetMid].userData=userInfo.userData}if(log.log([targetMid,"RTCSessionDescription",message.type,"Session description object created"],answer),answer.sdp=self._removeSDPFilteredCandidates(targetMid,answer),answer.sdp=self._setSDPCodec(targetMid,answer),answer.sdp=self._setSDPBitrate(targetMid,answer),answer.sdp=self._setSDPCodecParams(targetMid,answer),answer.sdp=self._removeSDPCodecs(targetMid,answer),answer.sdp=self._removeSDPREMBPackets(targetMid,answer),answer.sdp=self._handleSDPConnectionSettings(targetMid,answer,"remote"),answer.sdp=self._removeSDPUnknownAptRtx(targetMid,answer),answer.sdp=self._setSCTPport(targetMid,answer),"firefox"===AdapterJS.webrtcDetectedBrowser&&self._setOriginalDTLSRole(answer,!0),log.log([targetMid,"RTCSessionDescription",message.type,"Updated remote answer ->"],answer.sdp),pc.signalingState!==self.PEER_CONNECTION_STATE.HAVE_LOCAL_OFFER)return log.warn([targetMid,null,message.type,'Peer connection state is not in "have-local-offer" state for re-negotiation. Dropping message.'],{signalingState:pc.signalingState,isRestart:!!message.restart}),void self._handleNegotiationStats("dropped_answer",targetMid,answer,!0,'Peer connection state is "'+pc.signalingState+'"');if(pc.processingRemoteSDP)return log.warn([targetMid,"RTCSessionDescription","answer","Dropping of setting local answer as there is another sessionDescription being processed ->"],answer),void self._handleNegotiationStats("dropped_answer",targetMid,answer,!0,"Peer connection is currently processing an existing sdp");pc.processingRemoteSDP=!0,message.userInfo&&self._trigger("peerUpdated",targetMid,self.getPeerInfo(targetMid),!1),self._parseSDPMediaStreamIDs(targetMid,answer);var onSuccessCbFn=function(){log.debug([targetMid,null,message.type,"Remote description set"]),pc.setAnswer="remote",pc.processingRemoteSDP=!1,self._acknowledgeAnswer(targetMid,!0,null),self._handleNegotiationStats("set_answer",targetMid,answer,!0),self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ANSWER,targetMid),self._addIceCandidateFromQueue(targetMid),self._peerMessagesStamps[targetMid]&&(self._peerMessagesStamps[targetMid].hasRestart=!1),self._dataChannels[targetMid]&&(-1===pc.remoteDescription.sdp.indexOf("m=application")||pc.remoteDescription.sdp.indexOf("m=application 0")>0)&&(log.warn([targetMid,"RTCPeerConnection",null,"Closing all datachannels as they were rejected."]),self._closeDataChannel(targetMid))},onErrorCbFn=function(error){self._acknowledgeAnswer(targetMid,!1,error),self._handleNegotiationStats("error_set_answer",targetMid,answer,!0,error),self._trigger("handshakeProgress",self.HANDSHAKE_PROGRESS.ERROR,targetMid,error),pc.processingRemoteSDP=!1,log.error([targetMid,null,message.type,"Failed setting remote description:"],{error:error,state:pc.signalingState,answer:answer})};pc.setRemoteDescription(new RTCSessionDescription(answer),onSuccessCbFn,onErrorCbFn)},Skylink.prototype.startRTMPSession=function(streamId,endpoint,callback){var self=this;if(!self._hasMCU){var noMCUError="Unable to start RTMP session as MCU is not connected";return log.error(noMCUError),void("function"==typeof callback&&callback(new Error(noMCUError),null))}if(!streamId){var nostreamIdError="Unable to start RTMP Session stream id is missing";return log.error(nostreamIdError),void("function"==typeof callback&&callback(new Error(nostreamIdError),null))}if(!endpoint){var noEndpointError="Unable to start RTMP Session as Endpoint is missing";return log.error(noEndpointError),void("function"==typeof callback&&callback(new Error(noEndpointError),null))}var rtmpId=self.generateUUID();"function"==typeof callback&&self.once("RTMPState",function(state,RTMPId){callback(RTMPId)},function(state){return state===self.RTMP_STATE.START}),self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.START_RTMP,rid:self._room.id,target:"MCU",mid:self._user.sid,streamId:streamId,endpoint:endpoint,rtmpId:rtmpId}),log.debug(["MCU","RTMP",null,"Starting RTMP Session"])},Skylink.prototype.stopRTMPSession=function(rtmpId,callback){var self=this;if(!self._hasMCU){var noMCUError="Unable to stop RTMP as MCU is not connected";return log.error(noMCUError),void("function"==typeof callback&&callback(new Error(noMCUError),null))}"function"==typeof callback&&self.once("RTMPState",function(state,rtmpId){callback(rtmpId)},function(state){return state===self.RTMP_STATE.STOP}),self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.STOP_RTMP,rid:self._room.id,rtmpId:rtmpId,mid:self._user.sid,target:"MCU"}),log.debug(["MCU","RTMP",null,"Stopping RTMP Session"])},Skylink.prototype._rtmpEventHandler=function(message){var self=this;if(log.debug(["MCU","RTMP",null,"Received RTMP Session message ->"],message),"startSuccess"===message.action)self._rtmpSessions[message.rtmpId]||(log.debug(["MCU","RTMP",message.rtmpId,"Started RTMP Session"]),self._rtmpSessions[message.rtmpId]={active:!0,state:self.RTMP_STATE.START,startedDateTime:(new Date).toISOString(),endedDateTime:null,peerId:message.peerId,streamId:message.streamId},self._trigger("RTMPState",self.RTMP_STATE.START,message.rtmpId,null,null));else if("stopSuccess"===message.action){if(!self._rtmpSessions[message.rtmpId])return void log.error(["MCU","RTMP",message.rtmpId,'Received request of "off" but the session is empty']);log.debug(["MCU","RTMP",message.rtmpId,"Stopped RTMP Session"]),self._rtmpSessions[message.rtmpId].active=!1,self._rtmpSessions[message.rtmpId].state=self.RTMP_STATE.STOP,self._rtmpSessions[message.rtmpId].endedDateTime=(new Date).toISOString(),self._trigger("RTMPState",self.RTMP_STATE.STOP,message.rtmpId,null,null)}else{var rtmpError=new Error(message.error||"Unknown error");if(!self._rtmpSessions[message.rtmpId])return void log.error(["MCU","RTMP",message.rtmpId,"Received error but the session is empty ->"],rtmpError);log.error(["MCU","RTMP",message.rtmpId,"RTMP session failure ->"],rtmpError),self._rtmpSessions[message.rtmpId].state=self.RTMP_STATE.ERROR,self._rtmpSessions[message.rtmpId].error=rtmpError,self._rtmpSessions[message.rtmpId].active&&(log.debug(["MCU","RTMP",message.rtmpId,"Stopped RTMP session abruptly"]),self._rtmpSessions[message.rtmpId].active=!1),self._trigger("RTMPState",self.RTMP_STATE.ERROR,message.rtmpId,null,rtmpError)}},Skylink.prototype._isLowerThanVersion=function(agentVer,requiredVer){for(var partsA=(agentVer||"").split("."),partsB=(requiredVer||"").split("."),i=0;i<partsB.length;i++)if((partsA[i]||"0")<(partsB[i]||"0"))return!0;return!1},Skylink.prototype._acknowledgeAnswer=function(targetMid,isSuccess,error){var self=this;if(self._hasMCU){var statsStateKey=isSuccess?"set_answer_ack":"error_set_answer_ack",answerAckMessage={rid:self._room.id,mid:self._user.sid,target:targetMid,success:isSuccess,type:self._SIG_MESSAGE_TYPE.ANSWER_ACK};self._sendChannelMessage(answerAckMessage),log.debug(["MCU","Remote Description",null,"Answer acknowledgement message sent to MCU via SIG. Message body --\x3e"],answerAckMessage),self._handleNegotiationStats(statsStateKey,targetMid,answerAckMessage,!0,error)}return!1},Skylink.prototype.getUserMedia=function(options,callback){var self=this;if("function"==typeof options)callback=options,options={audio:!0,video:!0};else if("object"!=typeof options||null===options){if(void 0!==options){var invalidOptionsError="Please provide a valid options";return log.error(invalidOptionsError,options),void("function"==typeof callback&&callback(new Error(invalidOptionsError),null))}options={audio:!0,video:!0}}else if(!options.audio&&!options.video){var noConstraintOptionsSelectedError="Please select audio or video";return log.error(noConstraintOptionsSelectedError,options),void("function"==typeof callback&&callback(new Error(noConstraintOptionsSelectedError),null))}self._throttle(function(runFn){if(runFn){if("function"==typeof callback){var mediaAccessSuccessFn=function(stream){self.off("mediaAccessError",mediaAccessErrorFn),callback(null,stream)},mediaAccessErrorFn=function(error){self.off("mediaAccessSuccess",mediaAccessSuccessFn),callback(error,null)};self.once("mediaAccessSuccess",mediaAccessSuccessFn,function(stream,isScreensharing){return!isScreensharing}),self.once("mediaAccessError",mediaAccessErrorFn,function(error,isScreensharing){return!isScreensharing})}var settings=self._parseStreamSettings(options),onSuccessCbFn=function(stream){settings.mutedSettings.shouldAudioMuted&&(self._streamsMutedSettings.audioMuted=!0),settings.mutedSettings.shouldVideoMuted&&(self._streamsMutedSettings.videoMuted=!0),self._onStreamAccessSuccess(stream,settings,!1,!1)},onErrorCbFn=function(error){self._onStreamAccessError(error,settings,!1,!1)};try{if("function"!=typeof(AdapterJS||{}).webRTCReady)return onErrorCbFn(new Error("Failed to call getUserMedia() as AdapterJS is not yet loaded!"));AdapterJS.webRTCReady(function(){navigator.getUserMedia(settings.getUserMediaSettings,onSuccessCbFn,onErrorCbFn)})}catch(error){onErrorCbFn(error)}}else if(self._initOptions.throttlingShouldThrowError){var throttleLimitError="Unable to run as throttle interval has not reached ("+self._initOptions.throttleIntervals.getUserMedia+"ms).";log.error(throttleLimitError),"function"==typeof callback&&callback(new Error(throttleLimitError),null)}},"getUserMedia",self._initOptions.throttleIntervals.getUserMedia)},Skylink.prototype.sendStream=function(options,callback){var self=this,renegotiate=function(newStream,cb){Object.keys(self._peerConnections).length>0||self._hasMCU?self._refreshPeerConnection(Object.keys(self._peerConnections),!1,{},function(err,success){if(err)return log.error("Failed refreshing connections for sendStream() ->",err),void("function"==typeof cb&&cb(new Error("Failed refreshing connections."),null));"function"==typeof cb&&cb(null,newStream)}):"function"==typeof cb&&cb(null,newStream)},performReplaceTracks=function(originalStream,newStream,cb){if(!originalStream)return void renegotiate(newStream,cb);var newStreamHasVideoTrack=Array.isArray(newStream.getVideoTracks())&&newStream.getVideoTracks().length,newStreamHasAudioTrack=Array.isArray(newStream.getAudioTracks())&&newStream.getAudioTracks().length,originalStreamHasVideoTrack=Array.isArray(originalStream.getVideoTracks())&&originalStream.getVideoTracks().length,originalStreamHasAudioTrack=Array.isArray(originalStream.getAudioTracks())&&originalStream.getAudioTracks().length;if(newStreamHasVideoTrack&&!originalStreamHasVideoTrack||newStreamHasAudioTrack&&!originalStreamHasAudioTrack)return void renegotiate(newStream,cb);newStreamHasVideoTrack&&originalStreamHasVideoTrack&&self._replaceTrack(originalStream.getVideoTracks()[0].id,newStream.getVideoTracks()[0]),newStreamHasAudioTrack&&originalStreamHasAudioTrack&&self._replaceTrack(originalStream.getAudioTracks()[0].id,newStream.getAudioTracks()[0])},restartFn=function(originalStream,stream){self._inRoom?(self._streams.screenshare?performReplaceTracks(originalStream,stream,callback):(self._trigger("incomingStream",self._user.sid,stream,!0,self.getPeerInfo(),!1,stream.id||stream.label),self._trigger("peerUpdated",self._user.sid,self.getPeerInfo(),!0)),self._streams.userMedia&&performReplaceTracks(originalStream,stream,callback)):"function"==typeof callback&&callback(null,stream)};if(!("object"==typeof options&&null!==options||AdapterJS&&AdapterJS.WebRTCPlugin&&AdapterJS.WebRTCPlugin.plugin&&["function","object"].indexOf(typeof options)>-1)){var invalidOptionsError="Provided stream settings is invalid";return log.error(invalidOptionsError,options),void("function"==typeof callback&&callback(new Error(invalidOptionsError),null))}if(self._inRoom||log.warn("There are no peers to send stream to as not in room!"),"edge"===AdapterJS.webrtcDetectedBrowser){var edgeNotSupportError="Edge browser currently does not support renegotiation.";return log.error(edgeNotSupportError,options),void("function"==typeof callback&&callback(new Error(edgeNotSupportError),null))}var origStream=null;if(self._streams.userMedia&&(origStream=self._streams.userMedia.stream),self._streams.screenshare&&(origStream=self._streams.screenshare.stream),"function"==typeof options.getAudioTracks||"function"==typeof options.getVideoTracks){var checkActiveTracksFn=function(tracks){for(var t=0;t<tracks.length;t++)if(!(tracks[t].ended||"string"==typeof tracks[t].readyState&&"live"!==tracks[t].readyState))return!0;return!1};if(!checkActiveTracksFn(options.getAudioTracks())&&!checkActiveTracksFn(options.getVideoTracks())){var invalidStreamError="Provided stream object does not have audio or video tracks.";return log.error(invalidStreamError,options),void("function"==typeof callback&&callback(new Error(invalidStreamError),null))}self._onStreamAccessSuccess(options,{settings:{audio:!0,video:!0},getUserMediaSettings:{audio:!0,video:!0}},!1,!1),restartFn(origStream,options)}else self.getUserMedia(options,function(err,stream){if(err)return void("function"==typeof callback&&callback(err,null));restartFn(origStream,stream)})},Skylink.prototype.stopStream=function(){this._streams.userMedia&&this._stopStreams({userMedia:!0})},Skylink.prototype.muteStream=function(options){var self=this;if("object"!=typeof options)return void log.error("Provided settings is not an object");if(!(self._streams.userMedia&&self._streams.userMedia.stream||self._streams.screenshare&&self._streams.screenshare.stream))return void log.warn("No streams are available to mute / unmute!");var audioMuted="boolean"!=typeof options.audioMuted||options.audioMuted,videoMuted="boolean"!=typeof options.videoMuted||options.videoMuted,hasToggledAudio=!1,hasToggledVideo=!1;if(self._streamsMutedSettings.audioMuted!==audioMuted&&(self._streamsMutedSettings.audioMuted=audioMuted,hasToggledAudio=!0),self._streamsMutedSettings.videoMuted!==videoMuted&&(self._streamsMutedSettings.videoMuted=videoMuted,hasToggledVideo=!0),hasToggledVideo||hasToggledAudio){var streamTracksAvailability=self._muteStreams();hasToggledVideo&&self._inRoom&&self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.MUTE_VIDEO,mid:self._user.sid,rid:self._room.id,muted:self._streamsMutedSettings.videoMuted,stamp:(new Date).getTime()}),hasToggledAudio&&self._inRoom&&setTimeout(function(){self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.MUTE_AUDIO,mid:self._user.sid,rid:self._room.id,muted:self._streamsMutedSettings.audioMuted,stamp:(new Date).getTime()})},hasToggledVideo?1050:0),(streamTracksAvailability.hasVideo&&hasToggledVideo||streamTracksAvailability.hasAudio&&hasToggledAudio)&&(self._trigger("localMediaMuted",{audioMuted:!streamTracksAvailability.hasAudio||self._streamsMutedSettings.audioMuted,videoMuted:!streamTracksAvailability.hasVideo||self._streamsMutedSettings.videoMuted}),self._inRoom&&(self._trigger("streamMuted",self._user.sid,self.getPeerInfo(),!0,self._streams.screenshare&&self._streams.screenshare.stream),self._trigger("peerUpdated",self._user.sid,self.getPeerInfo(),!0)))}},Skylink.prototype.enableAudio=function(){this.muteStream({audioMuted:!1,videoMuted:this._streamsMutedSettings.videoMuted})},Skylink.prototype.disableAudio=function(){this.muteStream({audioMuted:!0,videoMuted:this._streamsMutedSettings.videoMuted})},Skylink.prototype.enableVideo=function(){this.muteStream({videoMuted:!1,audioMuted:this._streamsMutedSettings.audioMuted})},Skylink.prototype.disableVideo=function(){this.muteStream({videoMuted:!0,audioMuted:this._streamsMutedSettings.audioMuted})},Skylink.prototype.shareScreen=function(enableAudio,mediaSource,callback){var self=this,enableAudioSettings=!1,useMediaSource=[self.MEDIA_SOURCE.SCREEN],useMediaSourceId=null,checkIfSourceExistsFn=function(val){for(var prop in self.MEDIA_SOURCE)if(self.MEDIA_SOURCE.hasOwnProperty(prop)&&self.MEDIA_SOURCE[prop]===val)return!0;return!1};if(enableAudio&&"string"==typeof enableAudio||enableAudio&&"object"==typeof enableAudio&&enableAudio.sourceId&&enableAudio.mediaSource)checkIfSourceExistsFn("object"==typeof enableAudio?enableAudio.mediaSource:enableAudio)&&(useMediaSource=["object"==typeof enableAudio?enableAudio.mediaSource:enableAudio]),useMediaSourceId="object"==typeof enableAudio?enableAudio.sourceId:null;else if(Array.isArray(enableAudio)){for(var enableAudioArr=[],i=0;i<enableAudio.length;i++)checkIfSourceExistsFn(enableAudio[i])&&enableAudioArr.push(enableAudio[i]);enableAudioArr.length>0&&(useMediaSource=enableAudioArr)}else enableAudio&&"object"==typeof enableAudio?enableAudio.sourceId&&enableAudio.mediaSource||(enableAudioSettings={usedtx:"boolean"==typeof enableAudio.usedtx?enableAudio.usedtx:null,useinbandfec:"boolean"==typeof enableAudio.useinbandfec?enableAudio.useinbandfec:null,stereo:!0===enableAudio.stereo,echoCancellation:!1!==enableAudio.echoCancellation,deviceId:enableAudio.deviceId}):!0===enableAudio?enableAudioSettings=!0===enableAudio&&{usedtx:null,useinbandfec:null,stereo:!1,echoCancellation:!0,deviceId:null}:"function"==typeof enableAudio&&(callback=enableAudio,enableAudio=!1);if(mediaSource&&"string"==typeof mediaSource||mediaSource&&"object"==typeof mediaSource&&mediaSource.sourceId&&mediaSource.mediaSource)checkIfSourceExistsFn("object"==typeof mediaSource?mediaSource.mediaSource:mediaSource)&&(useMediaSource=["object"==typeof mediaSource?mediaSource.mediaSource:mediaSource]),useMediaSourceId="object"==typeof mediaSource?mediaSource.sourceId:null;else if(Array.isArray(mediaSource)){for(var mediaSourceArr=[],i=0;i<mediaSource.length;i++)checkIfSourceExistsFn(mediaSource[i])&&mediaSourceArr.push(mediaSource[i]);mediaSourceArr.length>0&&(useMediaSource=mediaSourceArr)}else"function"==typeof mediaSource&&(callback=mediaSource);useMediaSource.indexOf("audio")>-1&&-1===useMediaSource.indexOf("tab")&&(useMediaSource.splice(useMediaSource.indexOf("audio"),1),0===useMediaSource.length&&(useMediaSource=[self.MEDIA_SOURCE.SCREEN])),self._throttle(function(runFn){if(runFn){var settings={settings:{audio:enableAudioSettings,video:{screenshare:!0,exactConstraints:!1}},getUserMediaSettings:{audio:!1,video:{mediaSource:useMediaSource}}};"plugin"===AdapterJS.webrtcDetectedType&&useMediaSourceId&&(settings.getUserMediaSettings.video.optional=[{screenId:useMediaSourceId}]);var mediaAccessSuccessFn=function(stream){if(self.off("mediaAccessError",mediaAccessErrorFn),self._inRoom){self._trigger("incomingStream",self._user.sid,stream,!0,self.getPeerInfo(),!0,stream.id||stream.label),self._trigger("peerUpdated",self._user.sid,self.getPeerInfo(),!0);var shouldRenegotiate=!0;if(self._streams.userMedia&&self._streams.userMedia.stream&&Array.isArray(self._streams.userMedia.stream.getVideoTracks())&&self._streams.userMedia.stream.getVideoTracks().length&&(shouldRenegotiate=!1),"edge"===AdapterJS.webrtcDetectedBrowser&&(shouldRenegotiate=!0),shouldRenegotiate)Object.keys(self._peerConnections).length>0||self._hasMCU?(stream.wasNegotiated=!0,self._refreshPeerConnection(Object.keys(self._peerConnections),!1,{},function(err,success){if(err)return log.error("Failed refreshing connections for shareScreen() ->",err),void("function"==typeof callback&&callback(new Error("Failed refreshing connections."),null));"function"==typeof callback&&callback(null,stream)})):"function"==typeof callback&&callback(null,stream);else{var gDMVideoTrack=stream.getVideoTracks()[0],gUMVideoTrack=self._streams.userMedia.stream.getVideoTracks()[0];self._replaceTrack(gUMVideoTrack.id,gDMVideoTrack)}}else"function"==typeof callback&&callback(null,stream)},mediaAccessErrorFn=function(error){self.off("mediaAccessSuccess",mediaAccessSuccessFn),"function"==typeof callback&&callback(error,null)};self.once("mediaAccessSuccess",mediaAccessSuccessFn,function(stream,isScreensharing){return isScreensharing}),self.once("mediaAccessError",mediaAccessErrorFn,function(error,isScreensharing){return isScreensharing});var getUserMediaAudioSettings=!!enableAudioSettings&&{echoCancellation:enableAudioSettings.echoCancellation};try{var hasDefaultAudioTrack=!1;enableAudioSettings&&("firefox"===AdapterJS.webrtcDetectedBrowser?(hasDefaultAudioTrack=!0,settings.getUserMediaSettings.audio=getUserMediaAudioSettings):useMediaSource.indexOf("audio")>-1&&useMediaSource.indexOf("tab")>-1&&(hasDefaultAudioTrack=!0,settings.getUserMediaSettings.audio={}));var onSuccessCbFn=function(stream){if(hasDefaultAudioTrack||!enableAudioSettings)return void self._onStreamAccessSuccess(stream,settings,!0,!1);settings.getUserMediaSettings.audio=getUserMediaAudioSettings;var onAudioSuccessCbFn=function(audioStream){try{audioStream.addTrack(stream.getVideoTracks()[0]),self.once("mediaAccessSuccess",function(){self._streams.screenshare.streamClone=stream},function(stream,isScreensharing){return isScreensharing}),self._onStreamAccessSuccess(audioStream,settings,!0,!1)}catch(error){log.error("Failed retrieving audio stream for screensharing stream",error),self._onStreamAccessSuccess(stream,settings,!0,!1)}},onAudioErrorCbFn=function(error){log.error("Failed retrieving audio stream for screensharing stream",error),self._onStreamAccessSuccess(stream,settings,!0,!1)};navigator.getUserMedia({audio:getUserMediaAudioSettings},onAudioSuccessCbFn,onAudioErrorCbFn)},onErrorCbFn=function(error){self._onStreamAccessError(error,settings,!0,!1),"function"==typeof callback&&callback(error,null)};if("function"!=typeof(AdapterJS||{}).webRTCReady)return onErrorCbFn(new Error("Failed to call getUserMedia() as AdapterJS is not yet loaded!"));AdapterJS.webRTCReady(function(){"edge"===AdapterJS.webrtcDetectedBrowser&&"function"==typeof navigator.getDisplayMedia?navigator.getDisplayMedia(settings.getUserMediaSettings).then(function(stream){onSuccessCbFn(stream)}).catch(function(err){onErrorCbFn(err)}):"function"==typeof navigator.mediaDevices.getDisplayMedia?navigator.mediaDevices.getDisplayMedia(settings.getUserMediaSettings).then(function(stream){onSuccessCbFn(stream)}).catch(function(err){onErrorCbFn(err)}):navigator.getUserMedia(settings.getUserMediaSettings,onSuccessCbFn,onErrorCbFn)})}catch(error){self._onStreamAccessError(error,settings,!0,!1)}}else if(self._initOptions.throttlingShouldThrowError){var throttleLimitError="Unable to run as throttle interval has not reached ("+self._initOptions.throttleIntervals.shareScreen+"ms).";log.error(throttleLimitError),"function"==typeof callback&&callback(new Error(throttleLimitError),null)}},"shareScreen",self._initOptions.throttleIntervals.shareScreen)},Skylink.prototype.stopScreen=function(){var self=this;if(self._streams.screenshare){if(self._inRoom)if(self._streams.userMedia&&self._streams.userMedia.stream&&(self._trigger("incomingStream",self._user.sid,self._streams.userMedia.stream,!0,self.getPeerInfo(),!1,self._streams.userMedia.stream.id||self._streams.userMedia.stream.label),self._trigger("peerUpdated",self._user.sid,self.getPeerInfo(),!0)),!0===self._streams.screenshare.stream.wasNegotiated)this._refreshPeerConnection(Object.keys(this._peerConnections),{},!1);else{var gDMVideoTrack=self._streams.screenshare.stream.getVideoTracks()[0],gUMVideoTrack=self._streams.userMedia.stream.getVideoTracks()[0];self._replaceTrack(gDMVideoTrack.id,gUMVideoTrack)}self._stopStreams({screenshare:!0})}},Skylink.prototype.getStreamSources=function(callback){var outputSources={audio:{input:[],output:[]},video:{input:[]}};if("function"!=typeof callback)return log.error("Please provide the callback.");var sourcesListFn=function(sources){sources.forEach(function(sourceItem){var item={deviceId:sourceItem.deviceId||sourceItem.sourceId||"default",label:sourceItem.label,groupId:sourceItem.groupId||null};item.label=item.label||"Source for "+item.deviceId,["audio","audioinput"].indexOf(sourceItem.kind)>-1?outputSources.audio.input.push(item):["video","videoinput"].indexOf(sourceItem.kind)>-1?outputSources.video.input.push(item):"audiooutput"===sourceItem.kind&&outputSources.audio.output.push(item)}),callback(outputSources)};navigator.mediaDevices&&"function"==typeof navigator.mediaDevices.enumerateDevices?navigator.mediaDevices.enumerateDevices().then(sourcesListFn):window.MediaStreamTrack&&"function"==typeof MediaStreamTrack.getSources?MediaStreamTrack.getSources(sourcesListFn):sourcesListFn("function"==typeof navigator.getUserMedia?[{deviceId:"default",kind:"audioinput",label:"Default Audio Track"},{deviceId:"default",kind:"videoinput",label:"Default Video Track"}]:[])},Skylink.prototype.getScreenSources=function(callback){var outputSources={mediaSource:[],mediaSourceInput:[]};return"function"!=typeof callback?log.error("Please provide the callback."):navigator.userAgent.toLowerCase().indexOf("android")>-1?("chrome"===AdapterJS.webrtcDetectedBrowser&&AdapterJS.webrtcDetectedVersion>=59&&(outputSources.mediaSource=["screen"]),void callback(outputSources)):"plugin"===AdapterJS.webrtcDetectedType?void AdapterJS.webRTCReady(function(){if(AdapterJS.WebRTCPlugin.plugin&&AdapterJS.WebRTCPlugin.plugin.isScreensharingAvailable&&AdapterJS.WebRTCPlugin.plugin.HasScreensharingFeature&&(outputSources.mediaSource=["window","screen"],"function"==typeof AdapterJS.WebRTCPlugin.plugin.getScreensharingSources))return void AdapterJS.WebRTCPlugin.plugin.getScreensharingSources(function(sources){sources.forEach(sources,function(sourceItem){var item={sourceId:sourceItem.id||sourceItem.sourceId||"default",label:sourceItem.label,mediaSource:sourceItem.kind||"screen"};item.label=item.label||"Source for "+item.sourceId,outputSources.mediaSourceInput.push(item)}),callback(outputSources)});callback(outputSources)}):(("chrome"===AdapterJS.webrtcDetectedBrowser&&AdapterJS.webrtcDetectedVersion>=34||"firefox"===AdapterJS.webrtcDetectedBrowser&&AdapterJS.webrtcDetectedVersion>=38||"opera"===AdapterJS.webrtcDetectedBrowser&&AdapterJS.webrtcDetectedVersion>=21)&&("opera"!==AdapterJS.webrtcDetectedBrowser||AdapterJS.extensionInfo&&AdapterJS.extensionInfo.opera&&AdapterJS.extensionInfo.opera.extensionId||log.warn("Please ensure that your application allows Opera screensharing!"),outputSources.mediaSource=["window","screen"],"chrome"===AdapterJS.webrtcDetectedBrowser&&AdapterJS.webrtcDetectedVersion>=52||"opera"===AdapterJS.webrtcDetectedBrowser&&AdapterJS.webrtcDetectedVersion>=39?outputSources.mediaSource.push("tab","audio"):"firefox"===AdapterJS.webrtcDetectedBrowser&&outputSources.mediaSource.push("browser","camera","application")),void callback(outputSources))},Skylink.prototype._muteStreams=function(){var self=this,hasVideo=!1,hasAudio=!1,muteFn=function(stream){for(var audioTracks=stream.getAudioTracks(),videoTracks=stream.getVideoTracks(),a=0;a<audioTracks.length;a++)audioTracks[a].enabled=!self._streamsMutedSettings.audioMuted,hasAudio=!0;for(var v=0;v<videoTracks.length;v++)videoTracks[v].enabled=!self._streamsMutedSettings.videoMuted,hasVideo=!0};if(self._streams.userMedia&&self._streams.userMedia.stream&&muteFn(self._streams.userMedia.stream),self._streams.screenshare&&self._streams.screenshare.stream&&muteFn(self._streams.screenshare.stream),self._streams.screenshare&&self._streams.screenshare.streamClone&&muteFn(self._streams.screenshare.streamClone),
"edge"===AdapterJS.webrtcDetectedBrowser)for(var peerId in self._peerConnections)if(self._peerConnections.hasOwnProperty(peerId)&&self._peerConnections[peerId])for(var localStreams=self._peerConnections[peerId].getLocalStreams(),s=0;s<localStreams.length;s++)muteFn(localStreams[s]);return log.debug("Updated Streams muted status ->",self._streamsMutedSettings),{hasVideo:hasVideo,hasAudio:hasAudio}},Skylink.prototype._stopStreams=function(options){var self=this,stopFn=function(stream){var streamId=stream.id||stream.label;log.debug([null,"MediaStream",streamId,"Stopping Stream ->"],stream);try{for(var audioTracks=stream.getAudioTracks(),videoTracks=stream.getVideoTracks(),a=0;a<audioTracks.length;a++)audioTracks[a].stop();for(var v=0;v<videoTracks.length;v++)videoTracks[v].stop()}catch(error){stream.stop()}self._streamsStoppedCbs[streamId]&&(self._streamsStoppedCbs[streamId](),delete self._streamsStoppedCbs[streamId])},stopUserMedia=!1,stopScreenshare=!1,hasStoppedMedia=!1;"object"==typeof options&&(stopUserMedia=!0===options.userMedia,stopScreenshare=!0===options.screenshare),stopUserMedia&&self._streams.userMedia&&(self._streams.userMedia.stream&&stopFn(self._streams.userMedia.stream),self._streams.userMedia=null,hasStoppedMedia=!0),stopScreenshare&&self._streams.screenshare&&(self._streams.screenshare.streamClone&&stopFn(self._streams.screenshare.streamClone),self._streams.screenshare.stream&&stopFn(self._streams.screenshare.stream),self._streams.screenshare=null,hasStoppedMedia=!0),self._inRoom&&hasStoppedMedia&&self._trigger("peerUpdated",self._user.sid,self.getPeerInfo(),!0),log.log("Stopping Streams with settings ->",options)},Skylink.prototype._parseStreamSettings=function(options){var settings={settings:{audio:!1,video:!1},mutedSettings:{shouldAudioMuted:!1,shouldVideoMuted:!1},getUserMediaSettings:{audio:!1,video:!1}};return options.audio&&(settings.settings.audio={stereo:!1,exactConstraints:!!options.useExactConstraints,echoCancellation:!0},settings.getUserMediaSettings.audio={echoCancellation:!0},"object"==typeof options.audio&&("boolean"==typeof options.audio.stereo&&(settings.settings.audio.stereo=options.audio.stereo),"boolean"==typeof options.audio.useinbandfec&&(settings.settings.audio.useinbandfec=options.audio.useinbandfec),"boolean"==typeof options.audio.usedtx&&(settings.settings.audio.usedtx=options.audio.usedtx),"number"==typeof options.audio.maxplaybackrate&&options.audio.maxplaybackrate>=8e3&&options.audio.maxplaybackrate<=48e3&&(settings.settings.audio.maxplaybackrate=options.audio.maxplaybackrate),"boolean"==typeof options.audio.mute&&(settings.mutedSettings.shouldAudioMuted=options.audio.mute),"edge"!==AdapterJS.webrtcDetectedBrowser&&("boolean"==typeof options.audio.echoCancellation&&(settings.settings.audio.echoCancellation=options.audio.echoCancellation,settings.getUserMediaSettings.audio.echoCancellation=options.audio.echoCancellation),Array.isArray(options.audio.optional)&&(settings.settings.audio.optional=clone(options.audio.optional),settings.getUserMediaSettings.audio.optional=clone(options.audio.optional)),options.audio.deviceId&&"string"==typeof options.audio.deviceId&&"firefox"!==AdapterJS.webrtcDetectedBrowser&&(settings.settings.audio.deviceId=options.audio.deviceId,settings.getUserMediaSettings.audio.deviceId=options.useExactConstraints?{exact:options.audio.deviceId}:{ideal:options.audio.deviceId}))),"edge"===AdapterJS.webrtcDetectedBrowser&&(settings.getUserMediaSettings.audio=!0)),options.video&&(settings.settings.video={resolution:clone(this.VIDEO_RESOLUTION.VGA),screenshare:!1,exactConstraints:!!options.useExactConstraints},settings.getUserMediaSettings.video={},"object"==typeof options.video?("boolean"==typeof options.video.mute&&(settings.mutedSettings.shouldVideoMuted=options.video.mute),Array.isArray(options.video.optional)&&(settings.settings.video.optional=clone(options.video.optional),settings.getUserMediaSettings.video.optional=clone(options.video.optional)),options.video.deviceId&&"string"==typeof options.video.deviceId&&(settings.settings.video.deviceId=options.video.deviceId,settings.getUserMediaSettings.video.deviceId=options.useExactConstraints?{exact:options.video.deviceId}:{ideal:options.video.deviceId}),options.video.resolution&&"object"==typeof options.video.resolution&&((options.video.resolution.width&&"object"==typeof options.video.resolution.width||"number"==typeof options.video.resolution.width)&&(settings.settings.video.resolution.width=options.video.resolution.width),(options.video.resolution.height&&"object"==typeof options.video.resolution.height||"number"==typeof options.video.resolution.height)&&(settings.settings.video.resolution.height=options.video.resolution.height)),settings.getUserMediaSettings.video.width="object"==typeof settings.settings.video.resolution.width?settings.settings.video.resolution.width:options.useExactConstraints?{exact:settings.settings.video.resolution.width}:{max:settings.settings.video.resolution.width},settings.getUserMediaSettings.video.height="object"==typeof settings.settings.video.resolution.height?settings.settings.video.resolution.height:options.useExactConstraints?{exact:settings.settings.video.resolution.height}:{max:settings.settings.video.resolution.height},(options.video.frameRate&&"object"==typeof options.video.frameRate||"number"==typeof options.video.frameRate&&"plugin"!==AdapterJS.webrtcDetectedType)&&(settings.settings.video.frameRate=options.video.frameRate,settings.getUserMediaSettings.video.frameRate="object"==typeof settings.settings.video.frameRate?settings.settings.video.frameRate:options.useExactConstraints?{exact:settings.settings.video.frameRate}:{max:settings.settings.video.frameRate}),options.video.facingMode&&["string","object"].indexOf(typeof options.video.facingMode)>-1&&"plugin"===AdapterJS.webrtcDetectedType&&(settings.settings.video.facingMode=options.video.facingMode,settings.getUserMediaSettings.video.facingMode="object"==typeof settings.settings.video.facingMode?settings.settings.video.facingMode:options.useExactConstraints?{exact:settings.settings.video.facingMode}:{max:settings.settings.video.facingMode})):settings.getUserMediaSettings.video={width:options.useExactConstraints?{exact:settings.settings.video.resolution.width}:{max:settings.settings.video.resolution.width},height:options.useExactConstraints?{exact:settings.settings.video.resolution.height}:{max:settings.settings.video.resolution.height}},"edge"===AdapterJS.webrtcDetectedBrowser&&(settings.settings.video={screenshare:!1,exactConstraints:!!options.useExactConstraints},settings.getUserMediaSettings.video=!0)),settings},Skylink.prototype._parseStreamTracksInfo=function(streamKey,callback){var self=this,stream=self._streams[streamKey].stream;if(!stream)return log.warn("Unable to parse stream tracks information as the stream is not defined"),callback();self._streams[streamKey].tracks={audio:null,video:null};var audioTracks=stream.getAudioTracks(),videoTracks=stream.getVideoTracks();if(audioTracks.length>0&&(self._streams[streamKey].tracks.audio={id:audioTracks[0].id||"",label:audioTracks[0].label||"audio_track_0"}),0===videoTracks.length)return callback();self._streams[streamKey].tracks.video={id:videoTracks[0].id||"",label:videoTracks[0].label||"video_track_0",width:null,height:null};var videoElement=document.createElement("video");videoElement.autoplay=!0,videoElement.muted=!0,videoElement.volume=0;var onVideoLoaded=function(){self._streams[streamKey]&&(self._streams[streamKey].tracks.video.width=videoElement.videoWidth,self._streams[streamKey].tracks.video.height=videoElement.videoHeight,videoElement.srcObject=null,callback())};"plugin"===AdapterJS.webrtcDetectedType?setTimeout(onVideoLoaded,1500):videoElement.addEventListener("loadeddata",onVideoLoaded),AdapterJS.attachMediaStream(videoElement,stream)},Skylink.prototype._onStreamAccessSuccess=function(stream,settings,isScreenSharing,isAudioFallback){var self=this,streamId=stream.id||stream.label,streamHasEnded=!1;if(log.log([null,"MediaStream",streamId,"Has access to stream ->"],stream),!isScreenSharing&&self._streams.userMedia?self._stopStreams({userMedia:!0,screenshare:!1}):isScreenSharing&&self._streams.screenshare&&self._stopStreams({userMedia:!1,screenshare:!0}),self._streamsStoppedCbs[streamId]=function(){log.log([null,"MediaStream",streamId,"Stream has ended"]),streamHasEnded=!0,self._trigger("mediaAccessStopped",!!isScreenSharing,!!isAudioFallback,streamId),self._inRoom&&(log.debug([null,"MediaStream",streamId,"Sending Stream ended status to Peers"]),self._sendChannelMessage({type:self._SIG_MESSAGE_TYPE.STREAM,mid:self._user.sid,rid:self._room.id,cid:self._key,streamId:streamId,settings:settings.settings,status:"ended"}),self._trigger("streamEnded",self._user.sid,self.getPeerInfo(),!0,!!isScreenSharing,streamId),isScreenSharing&&self._streams.screenshare&&self._streams.screenshare.stream&&(self._streams.screenshare.stream.id||self._streams.screenshare.stream.label)===streamId?self._streams.screenshare=null:!isScreenSharing&&self._streams.userMedia&&self._streams.userMedia.stream&&(self._streams.userMedia.stream.id||self._streams.userMedia.stream.label)===streamId&&(self._streams.userMedia=null))},["chrome","opera"].indexOf(AdapterJS.webrtcDetectedBrowser)>-1?(stream.oninactive=function(){self._streamsStoppedCbs[streamId]&&(self._streamsStoppedCbs[streamId](),delete self._streamsStoppedCbs[streamId])},isScreenSharing&&stream.getVideoTracks().length>0&&(stream.getVideoTracks()[0].onended=function(){setTimeout(function(){!streamHasEnded&&self._inRoom&&self.stopScreen()},350)})):"firefox"===AdapterJS.webrtcDetectedBrowser?stream.endedInterval=setInterval(function(){void 0===stream.recordedTime&&(stream.recordedTime=0),stream.recordedTime===stream.currentTime?(clearInterval(stream.endedInterval),self._streamsStoppedCbs[streamId]&&(self._streamsStoppedCbs[streamId](),delete self._streamsStoppedCbs[streamId])):stream.recordedTime=stream.currentTime},1e3):stream.onended=function(){self._streamsStoppedCbs[streamId]&&(self._streamsStoppedCbs[streamId](),delete self._streamsStoppedCbs[streamId])},settings.settings.audio&&0===stream.getAudioTracks().length||settings.settings.video&&0===stream.getVideoTracks().length){var tracksNotSameError="Expected audio tracks length with "+(settings.settings.audio?"1":"0")+" and video tracks length with "+(settings.settings.video?"1":"0")+" but received audio tracks length with "+stream.getAudioTracks().length+" and video tracks length with "+stream.getVideoTracks().length;log.warn([null,"MediaStream",streamId,tracksNotSameError]);var requireAudio=!!settings.settings.audio,requireVideo=!!settings.settings.video;settings.settings.audio&&0===stream.getAudioTracks().length&&(settings.settings.audio=!1),settings.settings.video&&0===stream.getVideoTracks().length&&(settings.settings.video=!1),self._trigger("mediaAccessFallback",{error:new Error(tracksNotSameError),diff:{video:{expected:requireVideo?1:0,received:stream.getVideoTracks().length},audio:{expected:requireAudio?1:0,received:stream.getAudioTracks().length}}},self.MEDIA_ACCESS_FALLBACK_STATE.FALLBACKED,!!isScreenSharing,!!isAudioFallback,streamId)}self._streams[isScreenSharing?"screenshare":"userMedia"]={id:streamId,stream:stream,settings:settings.settings,constraints:settings.getUserMediaSettings},self._muteStreams(),self._parseStreamTracksInfo(isScreenSharing?"screenshare":"userMedia",function(){self._trigger("mediaAccessSuccess",stream,!!isScreenSharing,!!isAudioFallback,streamId)})},Skylink.prototype._onStreamAccessError=function(error,settings,isScreenSharing){var self=this;if(!isScreenSharing&&settings.settings.audio&&settings.settings.video&&self._initOptions.audioFallback){log.debug("Fallbacking to retrieve audio only Stream"),self._trigger("mediaAccessFallback",{error:error,diff:null},self.MEDIA_ACCESS_FALLBACK_STATE.FALLBACKING,!1,!0);var onAudioSuccessCbFn=function(stream){self._onStreamAccessSuccess(stream,settings,!1,!0)},onAudioErrorCbFn=function(error){log.error("Failed fallbacking to retrieve audio only Stream ->",error),self._trigger("mediaAccessError",error,!1,!0),self._trigger("mediaAccessFallback",{error:error,diff:null},self.MEDIA_ACCESS_FALLBACK_STATE.ERROR,!1,!0)};return void navigator.getUserMedia({audio:!0},onAudioSuccessCbFn,onAudioErrorCbFn)}isScreenSharing?log.error("Failed retrieving screensharing Stream ->",error):log.error("Failed retrieving camera Stream ->",error),self._trigger("mediaAccessError",error,!!isScreenSharing,!1)},Skylink.prototype._onRemoteStreamAdded=function(targetMid,stream,isScreenSharing){var self=this,streamId=self._peerConnections[targetMid]&&self._peerConnections[targetMid].remoteStreamId||stream.id||stream.label;log.log([targetMid,"MediaStream",streamId,"Received remote stream ->"],stream),isScreenSharing&&log.log([targetMid,"MediaStream",streamId,"Peer is having a screensharing session with user"]),self._trigger("incomingStream",targetMid,stream,!1,self.getPeerInfo(targetMid),isScreenSharing,streamId),self._trigger("peerUpdated",targetMid,self.getPeerInfo(targetMid),!1)},Skylink.prototype._addLocalMediaStreams=function(peerId){var self=this;try{log.log([peerId,null,null,"Adding local stream"]);var pc=self._peerConnections[peerId];if(pc){var offerToReceiveAudio=!(!self._sdpSettings.connection.audio&&"MCU"!==peerId)&&self._getSDPCommonSupports(peerId,pc.remoteDescription).video,offerToReceiveVideo=!(!self._sdpSettings.connection.video&&"MCU"!==peerId)&&self._getSDPCommonSupports(peerId,pc.remoteDescription).audio;if(pc.signalingState!==self.PEER_CONNECTION_STATE.CLOSED){var updateStreamFn=function(updatedStream){if(!updatedStream||(!pc.localStreamId||updatedStream.id!==pc.localStreamId)){if(pc.getSenders().forEach(function(sender){pc.removeTrack(sender)}),!offerToReceiveAudio&&!offerToReceiveVideo)return;updatedStream&&(updatedStream.getTracks().forEach(function(track){"audio"===track.kind&&!offerToReceiveAudio||"video"===track.kind&&!offerToReceiveVideo||pc.addTrack(track,updatedStream)}),pc.localStreamId=updatedStream.id||updatedStream.label,pc.localStream=updatedStream)}};self._streams.screenshare&&self._streams.screenshare.stream?(log.debug([peerId,"MediaStream",null,"Sending screen"],self._streams.screenshare.stream),updateStreamFn(self._streams.screenshare.stream)):self._streams.userMedia&&self._streams.userMedia.stream?(log.debug([peerId,"MediaStream",null,"Sending stream"],self._streams.userMedia.stream),updateStreamFn(self._streams.userMedia.stream)):(log.warn([peerId,"MediaStream",null,"No media to send. Will be only receiving"]),updateStreamFn(null))}else log.warn([peerId,"MediaStream",null,"Not adding any stream as signalingState is closed"])}else log.warn([peerId,"MediaStream",self._mediaStream,"Not adding stream as peerconnection object does not exists"])}catch(error){(error.message||"").indexOf("already added")>-1?log.warn([peerId,null,null,"Not re-adding stream as LocalMediaStream is already added"],error):log.error([peerId,null,null,"Failed adding local stream"],error)}},Skylink.prototype._handleEndedStreams=function(peerId,checkStreamId){var self=this;self._streamsSession[peerId]=self._streamsSession[peerId]||{};var renderEndedFn=function(streamId){if(self._streamsSession[peerId][streamId]){var peerInfo=clone(self.getPeerInfo(peerId));peerInfo.settings.audio=clone(self._streamsSession[peerId][streamId].audio),peerInfo.settings.video=clone(self._streamsSession[peerId][streamId].video);var hasScreenshare=peerInfo.settings.video&&"object"==typeof peerInfo.settings.video&&!!peerInfo.settings.video.screenshare;self._streamsSession[peerId][streamId]=!1,self._trigger("streamEnded",peerId,peerInfo,!1,hasScreenshare,streamId)}};if(checkStreamId)renderEndedFn(checkStreamId);else if(self._peerConnections[peerId])for(var streamId in self._streamsSession[peerId])self._streamsSession[peerId].hasOwnProperty(streamId)&&self._streamsSession[peerId][streamId]&&renderEndedFn(streamId)},Skylink.prototype._setSDPCodecParams=function(targetMid,sessionDescription){var self=this,parseFn=function(type,codecName,samplingRate,settings){var mLine=sessionDescription.sdp.match(new RegExp("m="+type+" .*\r\n","gi"));if(Array.isArray(mLine)&&mLine.length>0){var codecsList=sessionDescription.sdp.match(new RegExp("a=rtpmap:.* "+codecName+"/"+(samplingRate?samplingRate+("audio"===type?"[/]*.*":".*"):".*")+"\r\n","gi"));if(Array.isArray(codecsList)&&codecsList.length>0)for(var i=0;i<codecsList.length;i++){var payload=(codecsList[i].split("a=rtpmap:")[1]||"").split(" ")[0];if(payload){var fmtpLine=sessionDescription.sdp.match(new RegExp("a=fmtp:"+payload+" .*\r\n","gi")),updatedFmtpLine="a=fmtp:"+payload+" ",addedKeys=[];if(Array.isArray(fmtpLine)&&fmtpLine.length>0){for(var fmtpParts=(fmtpLine[0].split("a=fmtp:"+payload+" ")[1]||"").replace(/ /g,"").replace(/\r\n/g,"").split(";"),j=0;j<fmtpParts.length;j++)if(fmtpParts[j]){var keyAndValue=fmtpParts[j].split("=");settings.hasOwnProperty(keyAndValue[0])?updatedFmtpLine+="boolean"==typeof settings[keyAndValue[0]]?settings[keyAndValue[0]]?keyAndValue[0]+"=1;":"":keyAndValue[0]+"="+settings[keyAndValue[0]]+";":updatedFmtpLine+=fmtpParts[j]+";",addedKeys.push(keyAndValue[0])}sessionDescription.sdp=sessionDescription.sdp.replace(fmtpLine[0],"")}for(var key in settings)settings.hasOwnProperty(key)&&-1===addedKeys.indexOf(key)&&(updatedFmtpLine+="boolean"==typeof settings[key]?settings[key]?key+"=1;":"":key+"="+settings[key]+";",addedKeys.push(key));updatedFmtpLine!=="a=fmtp:"+payload+" "&&(sessionDescription.sdp=sessionDescription.sdp.replace(codecsList[i],codecsList[i]+updatedFmtpLine+"\r\n"))}}}};return parseFn("audio",self.AUDIO_CODEC.OPUS,48e3,function(){var opusOptions={},audioSettings=self._streams.screenshare?self._streams.screenshare.settings.audio:self._streams.userMedia?self._streams.userMedia.settings.audio:{};return audioSettings=audioSettings&&"object"==typeof audioSettings?audioSettings:{},"boolean"==typeof self._initOptions.codecParams.audio.opus.stereo?opusOptions.stereo=self._initOptions.codecParams.audio.opus.stereo:"boolean"==typeof audioSettings.stereo&&(opusOptions.stereo=audioSettings.stereo),"boolean"==typeof self._initOptions.codecParams.audio.opus["sprop-stereo"]?opusOptions["sprop-stereo"]=self._initOptions.codecParams.audio.opus["sprop-stereo"]:"boolean"==typeof audioSettings.stereo&&(opusOptions["sprop-stereo"]=audioSettings.stereo),"boolean"==typeof self._initOptions.codecParams.audio.opus.usedtx?opusOptions.usedtx=self._initOptions.codecParams.audio.opus.usedtx:"boolean"==typeof audioSettings.usedtx&&(opusOptions.usedtx=audioSettings.usedtx),"boolean"==typeof self._initOptions.codecParams.audio.opus.useinbandfec?opusOptions.useinbandfec=self._initOptions.codecParams.audio.opus.useinbandfec:"boolean"==typeof audioSettings.useinbandfec&&(opusOptions.useinbandfec=audioSettings.useinbandfec),"number"==typeof self._initOptions.codecParams.audio.opus.maxplaybackrate?opusOptions.maxplaybackrate=self._initOptions.codecParams.audio.opus.maxplaybackrate:"number"==typeof audioSettings.maxplaybackrate&&(opusOptions.maxplaybackrate=audioSettings.maxplaybackrate),"number"==typeof self._initOptions.codecParams.audio.opus.minptime?opusOptions.minptime=self._initOptions.codecParams.audio.opus.minptime:"number"==typeof audioSettings.minptime&&(opusOptions.minptime=audioSettings.minptime),opusOptions}()),parseFn("video",self.VIDEO_CODEC.VP8,null,function(){var vp8Options={};return"number"==typeof self._initOptions.codecParams.video.vp8.maxFr&&(vp8Options["max-fr"]=self._initOptions.codecParams.video.vp8.maxFr),"number"==typeof self._initOptions.codecParams.video.vp8.maxFs&&(vp8Options["max-fs"]=self._initOptions.codecParams.video.vp8.maxFs),vp8Options}()),parseFn("video",self.VIDEO_CODEC.VP9,null,function(){var vp9Options={};return"number"==typeof self._initOptions.codecParams.video.vp9.maxFr&&(vp9Options["max-fr"]=self._initOptions.codecParams.video.vp9.maxFr),"number"==typeof self._initOptions.codecParams.video.vp9.maxFs&&(vp9Options["max-fs"]=self._initOptions.codecParams.video.vp9.maxFs),vp9Options}()),parseFn("video",self.VIDEO_CODEC.H264,null,function(){var h264Options={};return"string"==typeof self._initOptions.codecParams.video.h264.levelAsymmetryAllowed&&(h264Options["profile-level-id"]=self._initOptions.codecParams.video.h264.profileLevelId),"boolean"==typeof self._initOptions.codecParams.video.h264.levelAsymmetryAllowed&&(h264Options["level-asymmetry-allowed"]=self._initOptions.codecParams.video.h264.levelAsymmetryAllowed),"boolean"==typeof self._initOptions.codecParams.video.h264.packetizationMode&&(h264Options["packetization-mode"]=self._initOptions.codecParams.video.h264.packetizationMode),h264Options}()),sessionDescription.sdp},Skylink.prototype._setSDPBitrate=function(targetMid,sessionDescription){var sdpLines=sessionDescription.sdp.split("\r\n"),parseFn=function(type,bw){var mLineType=type,mLineIndex=-1,cLineIndex=-1;"data"===type&&(mLineType="application");for(var i=0;i<sdpLines.length;i++)if(0===sdpLines[i].indexOf("m="+mLineType))mLineIndex=i;else if(mLineIndex>0){if(0===sdpLines[i].indexOf("m="))break;0===sdpLines[i].indexOf("c=")?cLineIndex=i:0!==sdpLines[i].indexOf("b=AS:")&&0!==sdpLines[i].indexOf("b:TIAS:")||(sdpLines.splice(i,1),i--)}return"number"==typeof bw&&bw>0?-1===cLineIndex?void log.error([targetMid,"RTCSessionDesription",sessionDescription.type,'Failed setting "'+type+'" bandwidth as c-line is missing.']):(log.info([targetMid,"RTCSessionDesription",sessionDescription.type,'Limiting maximum sending "'+type+'" bandwidth ->'],bw),void sdpLines.splice(cLineIndex+1,0,"firefox"===window.webrtcDetectedBrowser?"b=TIAS:"+(1e3*bw*(window.webrtcDetectedVersion>52&&window.webrtcDetectedVersion<55?1e3:1)).toFixed(0):"b=AS:"+bw)):void log.warn([targetMid,"RTCSessionDesription",sessionDescription.type,'Not limiting "'+type+'" bandwidth'])},bASAudioBw=this._streamsBandwidthSettings.bAS.audio,bASVideoBw=this._streamsBandwidthSettings.bAS.video,bASDataBw=this._streamsBandwidthSettings.bAS.data,googleXMinBw=this._streamsBandwidthSettings.googleX.min,googleXMaxBw=this._streamsBandwidthSettings.googleX.max;if(this._peerCustomConfigs[targetMid]&&(this._peerCustomConfigs[targetMid].bandwidth&&"object"==typeof this._peerCustomConfigs[targetMid].bandwidth&&("number"==typeof this._peerCustomConfigs[targetMid].bandwidth.audio&&(bASAudioBw=this._peerCustomConfigs[targetMid].bandwidth.audio),"number"==typeof this._peerCustomConfigs[targetMid].bandwidth.video&&(bASVideoBw=this._peerCustomConfigs[targetMid].bandwidth.video),"number"==typeof this._peerCustomConfigs[targetMid].bandwidth.data&&(bASDataBw=this._peerCustomConfigs[targetMid].bandwidth.data)),this._peerCustomConfigs[targetMid].googleXBandwidth&&"object"==typeof this._peerCustomConfigs[targetMid].googleXBandwidth&&("number"==typeof this._peerCustomConfigs[targetMid].googleXBandwidth.min&&(googleXMinBw=this._peerCustomConfigs[targetMid].googleXBandwidth.min),"number"==typeof this._peerCustomConfigs[targetMid].googleXBandwidth.max&&(googleXMaxBw=this._peerCustomConfigs[targetMid].googleXBandwidth.max))),parseFn("audio",bASAudioBw),parseFn("video",bASVideoBw),parseFn("data",bASDataBw),"number"==typeof googleXMinBw||"number"==typeof googleXMaxBw){for(var codec=null,codecRtpMapLineIndex=-1,codecFmtpLineIndex=-1,j=0;j<sdpLines.length;j++)if(0===sdpLines[j].indexOf("m=video"))codec=sdpLines[j].split(" ")[3];else if(codec){if(0===sdpLines[j].indexOf("m="))break;if(0===sdpLines[j].indexOf("a=rtpmap:"+codec+" "))codecRtpMapLineIndex=j;else if(0===sdpLines[j].indexOf("a=fmtp:"+codec+" ")){sdpLines[j]=sdpLines[j].replace(/x-google-(min|max)-bitrate=[0-9]*[;]*/gi,""),codecFmtpLineIndex=j;break}}if(codecRtpMapLineIndex>-1){var xGoogleParams="";"number"==typeof googleXMinBw&&(xGoogleParams+="x-google-min-bitrate="+googleXMinBw+";"),"number"==typeof googleXMaxBw&&(xGoogleParams+="x-google-max-bitrate="+googleXMaxBw+";"),log.info([targetMid,"RTCSessionDesription",sessionDescription.type,"Limiting x-google-bitrate ->"],xGoogleParams),codecFmtpLineIndex>-1?sdpLines[codecFmtpLineIndex]+=(sdpLines[codecFmtpLineIndex].split(" ")[1]?";":"")+xGoogleParams:sdpLines.splice(codecRtpMapLineIndex+1,0,"a=fmtp:"+codec+" "+xGoogleParams)}}return sdpLines.join("\r\n")},Skylink.prototype._setSDPCodec=function(targetMid,sessionDescription,overrideSettings){var self=this,parseFn=function(type,codecSettings){var codec="object"==typeof codecSettings?codecSettings.codec:codecSettings,samplingRate="object"==typeof codecSettings?codecSettings.samplingRate:null,channels="object"==typeof codecSettings?codecSettings.channels:null;if(codec===self["audio"===type?"AUDIO_CODEC":"VIDEO_CODEC"].AUTO)return void log.warn([targetMid,"RTCSessionDesription",sessionDescription.type,'Not preferring any codec for "'+type+'" streaming. Using browser selection.']);var mLine=sessionDescription.sdp.match(new RegExp("m="+type+" .*\r\n","gi"));if(!(Array.isArray(mLine)&&mLine.length>0))return void log.error([targetMid,"RTCSessionDesription",sessionDescription.type,'Not preferring any codec for "'+type+'" streaming as m= line is not found.']);var setLineFn=function(codecsList,isSROk,isChnlsOk){if(Array.isArray(codecsList)&&codecsList.length>0){isSROk||(samplingRate=null),isChnlsOk||(channels=null),log.info([targetMid,"RTCSessionDesription",sessionDescription.type,'Preferring "'+codec+'" (samplingRate: '+(samplingRate||"n/a")+", channels: "+(channels||"n/a")+') for "'+type+'" streaming.']);var line=mLine[0],lineParts=line.replace("\r\n","").split(" ");line=lineParts[0]+" "+lineParts[1]+" "+lineParts[2]+" ",lineParts.splice(0,3);for(var i=0;i<codecsList.length;i++){var parts=(codecsList[i].split("a=rtpmap:")[1]||"").split(" ");parts.length<2||(line+=parts[0]+" ")}for(var j=0;j<lineParts.length;j++)line.indexOf(" "+lineParts[j])>0?(lineParts.splice(j,1),j--):sessionDescription.sdp.match(new RegExp("a=rtpmap:"+lineParts[j]+" "+codec+"/.*\r\n","gi"))&&(line+=lineParts[j]+" ",lineParts.splice(j,1),j--);return line+=lineParts.join(" ")+"\r\n",sessionDescription.sdp=sessionDescription.sdp.replace(mLine[0],line),!0}};if(samplingRate){if("audio"===type&&channels&&setLineFn(sessionDescription.sdp.match(new RegExp("a=rtpmap:.* "+codec+"/"+samplingRate+(1===channels?"[/1]*":"/"+channels)+"\r\n","gi")),!0,!0))return;if(setLineFn(sessionDescription.sdp.match(new RegExp("a=rtpmap:.* "+codec+"/"+samplingRate+"[/]*.*\r\n","gi")),!0))return}"audio"===type&&channels&&setLineFn(sessionDescription.sdp.match(new RegExp("a=rtpmap:.* "+codec+"/.*/"+channels+"\r\n","gi")),!1,!0)||setLineFn(sessionDescription.sdp.match(new RegExp("a=rtpmap:.* "+codec+"/.*\r\n","gi")))};return parseFn("audio",overrideSettings?overrideSettings.audio:self._initOptions.audioCodec),parseFn("video",overrideSettings?overrideSettings.video:self._initOptions.videoCodec),sessionDescription.sdp},Skylink.prototype._removeSDPFirefoxH264Pref=function(targetMid,sessionDescription){return log.info([targetMid,"RTCSessionDesription",sessionDescription.type,"Removing Firefox experimental H264 flag to ensure interopability reliability"]),sessionDescription.sdp.replace(/a=fmtp:0 profile-level-id=0x42e00c;packetization-mode=1\r\n/g,"")},Skylink.prototype._removeSDPUnknownAptRtx=function(targetMid,sessionDescription){for(var mediaLines=(sessionDescription.sdp.split("\r\n"),sessionDescription.sdp.split("m=")),formatRtx=function(str){return(str.match(/a=rtpmap:.*\ rtx\/.*\r\n/gi)||[]).forEach(function(line){var payload=(line.split("a=rtpmap:")[1]||"").split(" ")[0]||"",fmtpLine=(str.match(new RegExp("a=fmtp:"+payload+" .*\r\n","gi"))||[])[0];if(!fmtpLine)return void(str=str.replace(new RegExp(line,"g"),""));var codecPayload=(fmtpLine.split(" apt=")[1]||"").replace(/\r\n/gi,"");str.match(new RegExp("a=rtpmap:"+codecPayload+" .*\r\n","gi"))||(str=str.replace(new RegExp(line,"g"),""),str=str.replace(new RegExp(fmtpLine,"g"),""))}),str},formatFmtpRtcpFb=function(str){return(str.match(/a=(fmtp|rtcp-fb):.*\ rtx\/.*\r\n/gi)||[]).forEach(function(line){var payload=(line.split("a="+(line.indexOf("rtcp")>0?"rtcp-fb":"fmtp"))[1]||"").split(" ")[0]||"";str.match(new RegExp("a=rtpmap:"+payload+" .*\r\n","gi"))||(str=str.replace(new RegExp(line,"g"),""))}),str},m=0;m<mediaLines.length;m++)mediaLines[m]=formatRtx(mediaLines[m]),mediaLines[m]=formatFmtpRtcpFb(mediaLines[m]);return mediaLines.join("m=")},Skylink.prototype._removeSDPCodecs=function(targetMid,sessionDescription){var audioSettings=this.getPeerInfo().settings.audio,parseFn=function(type,codec){var payloadList=sessionDescription.sdp.match(new RegExp("a=rtpmap:(\\d*)\\ "+codec+".*","gi"));if(!(Array.isArray(payloadList)&&payloadList.length>0))return void log.warn([targetMid,"RTCSessionDesription",sessionDescription.type,'Not removing "'+codec+'" as it does not exists.']);for(var i=0;i<payloadList.length;i++){var payload=payloadList[i].split(" ")[0].split(":")[1];log.info([targetMid,"RTCSessionDesription",sessionDescription.type,'Removing "'+codec+'" payload ->'],payload),sessionDescription.sdp=sessionDescription.sdp.replace(new RegExp("a=rtpmap:"+payload+"\\ .*\\r\\n","g"),""),sessionDescription.sdp=sessionDescription.sdp.replace(new RegExp("a=fmtp:"+payload+"\\ .*\\r\\n","g"),""),sessionDescription.sdp=sessionDescription.sdp.replace(new RegExp("a=rtpmap:\\d+ rtx\\/\\d+\\r\\na=fmtp:\\d+ apt="+payload+"\\r\\n","g"),"");for(var sdpLines=sessionDescription.sdp.split("\r\n"),j=0;j<sdpLines.length;j++)if(0===sdpLines[j].indexOf("m="+type)){var parts=sdpLines[j].split(" ");parts.indexOf(payload)>=3&&parts.splice(parts.indexOf(payload),1),sdpLines[j]=parts.join(" ");break}sessionDescription.sdp=sdpLines.join("\r\n")}};return this._initOptions.disableVideoFecCodecs&&(this._hasMCU?log.warn([targetMid,"RTCSessionDesription",sessionDescription.type,'Not removing "ulpfec" or "red" codecs as connected to MCU to prevent connectivity issues.']):(parseFn("video","red"),parseFn("video","ulpfec"))),this._initOptions.disableComfortNoiseCodec&&audioSettings&&"object"==typeof audioSettings&&audioSettings.stereo&&parseFn("audio","CN"),"edge"===window.webrtcDetectedBrowser&&"edge"!==(((this._peerInformations[targetMid]||{}).agent||{}).name||"unknown").name&&(sessionDescription.sdp=sessionDescription.sdp.replace(/a=rtcp-fb:.*\ x-message\ .*\r\n/gi,"")),sessionDescription.sdp},Skylink.prototype._removeSDPREMBPackets=function(targetMid,sessionDescription){return this._initOptions.disableREMB?(log.info([targetMid,"RTCSessionDesription",sessionDescription.type,"Removing REMB packets."]),sessionDescription.sdp.replace(/a=rtcp-fb:\d+ goog-remb\r\n/g,"")):sessionDescription.sdp},Skylink.prototype._getSDPSelectedCodec=function(targetMid,sessionDescription,type,beSilentOnLogs){var codecInfo={name:null,implementation:null,clockRate:null,channels:null,payloadType:null,params:null};return sessionDescription&&sessionDescription.sdp?(sessionDescription.sdp.split("m=").forEach(function(mediaItem,index){if(0!==index&&0===mediaItem.indexOf(type+" ")){var codecs=(mediaItem.split("\r\n")[0]||"").split(" ");codecs.splice(0,3);for(var i=0;i<codecs.length;i++){var match=mediaItem.match(new RegExp("a=rtpmap:"+codecs[i]+".*\r\n","gi"));if(match){var parts=((match[0]||"").replace(/\r\n/g,"").split(" ")[1]||"").split("/");if(!(["red","ulpfec","telephone-event","cn","rtx"].indexOf(parts[0].toLowerCase())>-1)){codecInfo.name=parts[0],codecInfo.clockRate=parseInt(parts[1],10)||0,codecInfo.channels=parseInt(parts[2]||"1",10)||1,codecInfo.payloadType=parseInt(codecs[i],10),codecInfo.params="";(mediaItem.match(new RegExp("a=fmtp:"+codecs[i]+".*\r\n","gi"))||[]).forEach(function(paramItem){codecInfo.params+=paramItem.replace(new RegExp("a=fmtp:"+codecs[i],"gi"),"").replace(/\ /g,"").replace(/\r\n/g,"")});break}}}}}),beSilentOnLogs||log.debug([targetMid,"RTCSessionDesription",sessionDescription.type,'Parsing session description "'+type+'" codecs ->'],codecInfo),codecInfo):codecInfo},
Skylink.prototype._removeSDPFilteredCandidates=function(targetMid,sessionDescription){return"MCU"===targetMid&&sessionDescription.type===this.HANDSHAKE_PROGRESS.ANSWER&&"firefox"===window.webrtcDetectedBrowser&&(sessionDescription.sdp=sessionDescription.sdp.replace(/ generation 0/g,""),sessionDescription.sdp=sessionDescription.sdp.replace(/ udp /g," UDP ")),this._initOptions.forceTURN&&this._hasMCU?(log.warn([targetMid,"RTCSessionDesription",sessionDescription.type,"Not filtering ICE candidates as TURN connections are enforced as MCU is present (and act as a TURN itself) so filtering of ICE candidate flags are not honoured"]),sessionDescription.sdp):(this._initOptions.filterCandidatesType.host&&(log.info([targetMid,"RTCSessionDesription",sessionDescription.type,'Removing "host" ICE candidates.']),sessionDescription.sdp=sessionDescription.sdp.replace(/a=candidate:.*host.*\r\n/g,"")),this._initOptions.filterCandidatesType.srflx&&(log.info([targetMid,"RTCSessionDesription",sessionDescription.type,'Removing "srflx" ICE candidates.']),sessionDescription.sdp=sessionDescription.sdp.replace(/a=candidate:.*srflx.*\r\n/g,"")),this._initOptions.filterCandidatesType.relay&&(log.info([targetMid,"RTCSessionDesription",sessionDescription.type,'Removing "relay" ICE candidates.']),sessionDescription.sdp=sessionDescription.sdp.replace(/a=candidate:.*relay.*\r\n/g,"")),sessionDescription.sdp)},Skylink.prototype._getCodecsSupport=function(callback){var self=this;if(self._currentCodecSupport)return void callback(null);if(self._currentCodecSupport={audio:{},video:{}},"AppleWebKit"===AdapterJS.webrtcDetectedType)return self._currentCodecSupport.audio={opus:["48000/2"]},self._currentCodecSupport.video={h264:["48000"]},callback(null);try{if("edge"===window.webrtcDetectedBrowser){for(var codecs=RTCRtpSender.getCapabilities().codecs,i=0;i<codecs.length;i++)if(["audio","video"].indexOf(codecs[i].kind)>-1&&codecs[i].name){var codec=codecs[i].name.toLowerCase();self._currentCodecSupport[codecs[i].kind][codec]=codecs[i].clockRate+(codecs[i].numChannels>1?"/"+codecs[i].numChannels:"")}callback(null)}else{var pc=new RTCPeerConnection(null),offerConstraints="plugin"!==AdapterJS.webrtcDetectedType?{offerToReceiveAudio:!0,offerToReceiveVideo:!0}:{mandatory:{OfferToReceiveVideo:!0,OfferToReceiveAudio:!0}};try{var channel=pc.createDataChannel("test");self._binaryChunkType=channel.binaryType||self._binaryChunkType,self._binaryChunkType=self._binaryChunkType.toLowerCase().indexOf("array")>-1?self.DATA_TRANSFER_DATA_TYPE.ARRAY_BUFFER:self._binaryChunkType;for(var prop in self.DATA_TRANSFER_DATA_TYPE)if(self.DATA_TRANSFER_DATA_TYPE.hasOwnProperty(prop)&&self._binaryChunkType.toLowerCase()===self.DATA_TRANSFER_DATA_TYPE[prop].toLowerCase()){self._binaryChunkType=self.DATA_TRANSFER_DATA_TYPE[prop];break}}catch(e){}pc.createOffer(function(offer){self._currentCodecSupport=self._getSDPCodecsSupport(null,offer),callback(null)},function(error){callback(error)},offerConstraints)}}catch(error){callback(error)}},Skylink.prototype._handleSDPConnectionSettings=function(targetMid,sessionDescription,direction){var self=this;if(!self._sdpSessions[targetMid])return sessionDescription.sdp;var sessionDescriptionStr=sessionDescription.sdp;"remote"!==direction||self.getPeerInfo(targetMid).config.enableIceTrickle||(sessionDescriptionStr=sessionDescriptionStr.replace(/a=end-of-candidates\r\n/g,""));var sdpLines=sessionDescriptionStr.split("\r\n"),peerAgent=((self._peerInformations[targetMid]||{}).agent||{}).name||"",mediaType=(self._peerInformations[targetMid],""),bundleLineIndex=-1,bundleLineMids=[],mLineIndex=-1,settings=clone(self._sdpSettings);if("MCU"===targetMid&&(settings.connection.audio=!0,settings.connection.video=!0,settings.connection.data=!0),self._hasMCU){var peerStreamSettings=clone(self.getPeerInfo(targetMid)).settings||{};settings.direction.audio.receive="MCU"===targetMid||!!peerStreamSettings.audio,settings.direction.audio.send="MCU"===targetMid,settings.direction.video.receive="MCU"===targetMid||!!peerStreamSettings.video,settings.direction.video.send="MCU"===targetMid}if("remote"===direction){var offerCodecs=self._getSDPCommonSupports(targetMid,sessionDescription);offerCodecs.audio||(settings.connection.audio=!1),offerCodecs.video||(settings.connection.video=!1)}self._sdpSessions[targetMid][direction].mLines=[],self._sdpSessions[targetMid][direction].bundleLine="",self._sdpSessions[targetMid][direction].connection={audio:null,video:null,data:null};for(var i=0;i<sdpLines.length;i++){if(0===sdpLines[i].indexOf("a=group:BUNDLE"))self._sdpSessions[targetMid][direction].bundleLine=sdpLines[i],bundleLineIndex=i;else if(0===sdpLines[i].indexOf("m=")&&(mediaType=(sdpLines[i].split("m=")[1]||"").split(" ")[0]||"",mediaType="application"===mediaType?"data":mediaType,mLineIndex++,self._sdpSessions[targetMid][direction].mLines[mLineIndex]=sdpLines[i],!settings.connection[mediaType])){if(log.log([targetMid,"RTCSessionDesription",sessionDescription.type,"Removing rejected m="+mediaType+" line ->"],sdpLines[i]),self._peerConnectionConfig.bundlePolicy===self.BUNDLE_POLICY.MAX_BUNDLE&&bundleLineIndex>-1&&0===mLineIndex&&("remote"===direction?sessionDescription.type===this.HANDSHAKE_PROGRESS.OFFER:sessionDescription.type===this.HANDSHAKE_PROGRESS.ANSWER)){log.warn([targetMid,"RTCSessionDesription",sessionDescription.type,"Not removing rejected m="+mediaType+" line ->"],sdpLines[i]),settings.connection[mediaType]=!0,["audio","video"].indexOf(mediaType)>-1&&(settings.direction[mediaType].send=!1,settings.direction[mediaType].receive=!1);continue}if("edge"===window.webrtcDetectedBrowser){sdpLines.splice(i,1),i--;continue}if("remote"===direction||sessionDescription.type===this.HANDSHAKE_PROGRESS.ANSWER){var parts=sdpLines[i].split(" ");parts[1]=0,sdpLines[i]=parts.join(" ");continue}}if("remote"!==direction||0!==sdpLines[i].indexOf("a=candidate:")||self.getPeerInfo(targetMid).config.enableIceTrickle||sdpLines[i+1]&&(0===sdpLines[i+1].indexOf("a=candidate:")||0===sdpLines[i+1].indexOf("a=end-of-candidates"))||(log.info([targetMid,"RTCSessionDesription",sessionDescription.type,"Appending end-of-candidates signal for non-trickle ICE connection."]),sdpLines.splice(i+1,0,"a=end-of-candidates"),i++),mediaType)if(settings.connection[mediaType]){if(0===sdpLines[i].indexOf("a=mid:"))bundleLineMids.push(sdpLines[i].split("a=mid:")[1]||"");else if(mediaType&&["a=sendrecv","a=sendonly","a=recvonly"].indexOf(sdpLines[i])>-1){if(-1===["audio","video"].indexOf(mediaType)){self._sdpSessions[targetMid][direction].connection.data=sdpLines[i];continue}if("local"===direction)settings.direction[mediaType].send&&!settings.direction[mediaType].receive?sdpLines[i]=sdpLines[i].indexOf("send")>-1?"a=sendonly":"a=inactive":!settings.direction[mediaType].send&&settings.direction[mediaType].receive?sdpLines[i]=sdpLines[i].indexOf("recv")>-1?"a=recvonly":"a=inactive":settings.direction[mediaType].send||settings.direction[mediaType].receive||(sdpLines[i]="a=inactive"),self._hasMCU||"firefox"===window.webrtcDetectedBrowser||"firefox"!==peerAgent||sessionDescription.type!==self.HANDSHAKE_PROGRESS.OFFER||"a=recvonly"!==sdpLines[i]||(log.warn([targetMid,"RTCSessionDesription",sessionDescription.type,"Overriding any original settings to receive only to send and receive to resolve chrome BUNDLE errors."]),sdpLines[i]="a=sendrecv",settings.direction[mediaType].send=!0,settings.direction[mediaType].receive=!0);else if(sessionDescription.type===self.HANDSHAKE_PROGRESS.ANSWER){var localOfferRes=self._sdpSessions[targetMid].local.connection[mediaType];"a=sendonly"===localOfferRes?sdpLines[i]=-1===["a=inactive","a=recvonly"].indexOf(sdpLines[i])?"a=sendonly"===sdpLines[i]?"a=inactive":"a=recvonly":sdpLines[i]:"a=recvonly"===localOfferRes?sdpLines[i]=-1===["a=inactive","a=sendonly"].indexOf(sdpLines[i])?"a=recvonly"===sdpLines[i]?"a=inactive":"a=sendonly":sdpLines[i]:"a=inactive"===localOfferRes&&(sdpLines[i]="a=inactive")}self._sdpSessions[targetMid][direction].connection[mediaType]=sdpLines[i]}}else sdpLines.splice(i,1),i--;(sdpLines[i]||"").replace(/\n|\r|\s|\ /gi,"")||(sdpLines.splice(i,1),i--)}return bundleLineIndex>-1&&(self._peerConnectionConfig.bundlePolicy===self.BUNDLE_POLICY.MAX_BUNDLE?sdpLines[bundleLineIndex]="a=group:BUNDLE "+bundleLineMids.join(" "):self._peerConnectionConfig.bundlePolicy===self.BUNDLE_POLICY.NONE&&sdpLines.splice(bundleLineIndex,1)),"edge"!==window.webrtcDetectedBrowser&&(sdpLines[sdpLines.length-1].replace(/\n|\r|\s/gi,"")?sdpLines.push(""):sdpLines[sdpLines.length-1]=""),log.info([targetMid,"RTCSessionDesription",sessionDescription.type,"Handling connection lines and direction ->"],settings),sdpLines.join("\r\n")},Skylink.prototype._getSDPFingerprint=function(targetMid,sessionDescription,beSilentOnLogs){var fingerprint={fingerprint:null,fingerprintAlgorithm:null,derBase64:null};if(!sessionDescription||!sessionDescription.sdp)return fingerprint;for(var sdpLines=sessionDescription.sdp.split("\r\n"),i=0;i<sdpLines.length;i++)if(0===sdpLines[i].indexOf("a=fingerprint")){var parts=sdpLines[i].replace("a=fingerprint:","").split(" ");fingerprint.fingerprint=parts[1],fingerprint.fingerprintAlgorithm=parts[0];break}return beSilentOnLogs||log.debug([targetMid,"RTCSessionDesription",sessionDescription.type,"Parsing session description fingerprint ->"],fingerprint),fingerprint},Skylink.prototype._renderSDPOutput=function(targetMid,sessionDescription){var self=this,localStream=null,localStreamId=null;if(sessionDescription&&sessionDescription.sdp){if(!self._peerConnections[targetMid])return sessionDescription.sdp;self._peerConnections[targetMid].localStream&&(localStream=self._peerConnections[targetMid].localStream,localStreamId=self._peerConnections[targetMid].localStreamId||self._peerConnections[targetMid].localStream.id);var sdpLines=(self._initOptions.enableIceTrickle?sessionDescription.sdp:sessionDescription.sdp.replace(/a=end-of-candidates\r\n/g,"")).split("\r\n");self._peerInformations[targetMid];if(localStream)for(var mediaType="",i=0;i<sdpLines.length;i++)if(0===sdpLines[i].indexOf("m="))mediaType=(sdpLines[i].split("m=")[1]||"").split(" ")[0]||"",mediaType=-1===["audio","video"].indexOf(mediaType)?"":mediaType;else if(mediaType)if(0===sdpLines[i].indexOf("a=msid:")){var msidParts=sdpLines[i].split(" ");msidParts[0]="a=msid:"+localStreamId,sdpLines[i]=msidParts.join(" ")}else if(0===sdpLines[i].indexOf("a=ssrc:")){var ssrcParts=null;if(sdpLines[i].indexOf(" msid:")>0?ssrcParts=sdpLines[i].split(" msid:"):sdpLines[i].indexOf(" mslabel:")>0&&(ssrcParts=sdpLines[i].split(" mslabel:")),ssrcParts){var ssrcMsidParts=(ssrcParts[1]||"").split(" ");ssrcMsidParts[0]=localStreamId,ssrcParts[1]=ssrcMsidParts.join(" "),sdpLines[i].indexOf(" msid:")>0?sdpLines[i]=ssrcParts.join(" msid:"):sdpLines[i].indexOf(" mslabel:")>0&&(sdpLines[i]=ssrcParts.join(" mslabel:"))}}if(!self._initOptions.enableIceTrickle){log.info([targetMid,"RTCSessionDesription",sessionDescription.type,"Appending end-of-candidates signal for non-trickle ICE connection."]);for(var e=0;e<sdpLines.length;e++)0===sdpLines[e].indexOf("a=candidate:")&&(sdpLines[e+1]&&(0===sdpLines[e+1].indexOf("a=candidate:")||0===sdpLines[e+1].indexOf("a=end-of-candidates"))||(sdpLines.splice(e+1,0,"a=end-of-candidates"),e++))}if(sessionDescription.type===this.HANDSHAKE_PROGRESS.ANSWER&&this._sdpSessions[targetMid]){for(var mLineIndex=-1,j=0;j<sdpLines.length;j++)if(0===sdpLines[j].indexOf("a=group:BUNDLE")&&this._sdpSessions[targetMid].remote.bundleLine&&this._peerConnectionConfig.bundlePolicy===this.BUNDLE_POLICY.MAX_BUNDLE)sdpLines[j]=this._sdpSessions[targetMid].remote.bundleLine;else if(0===sdpLines[j].indexOf("m=")){mLineIndex++;var compareA=sdpLines[j].split(" "),compareB=(this._sdpSessions[targetMid].remote.mLines[mLineIndex]||"").split(" ");compareA[0]&&compareB[0]&&compareA[0]!==compareB[0]&&(compareB[1]=0,log.info([targetMid,"RTCSessionDesription",sessionDescription.type,"Appending middle rejected m= line ->"],compareB.join(" ")),sdpLines.splice(j,0,compareB.join(" ")),j++,mLineIndex++)}for(;this._sdpSessions[targetMid].remote.mLines[mLineIndex+1];){mLineIndex++;var appendIndex=sdpLines.length;sdpLines[appendIndex-1].replace(/\s/gi,"")||(appendIndex-=1);var parts=(this._sdpSessions[targetMid].remote.mLines[mLineIndex]||"").split(" ");parts[1]=0,log.info([targetMid,"RTCSessionDesription",sessionDescription.type,"Appending later rejected m= line ->"],parts.join(" ")),sdpLines.splice(appendIndex,0,parts.join(" "))}}return"edge"!==window.webrtcDetectedBrowser||sessionDescription.type!==this.HANDSHAKE_PROGRESS.OFFER||sdpLines[sdpLines.length-1].replace(/\s/gi,"")||(log.info([targetMid,"RTCSessionDesription",sessionDescription.type,"Removing last empty space for Edge browsers"]),sdpLines.splice(sdpLines.length-1,1)),log.info([targetMid,"RTCSessionDescription",sessionDescription.type,"Formatted output ->"],sdpLines.join("\r\n")),sdpLines.join("\r\n")}},Skylink.prototype._parseSDPMediaStreamIDs=function(targetMid,sessionDescription){if(this._peerConnections[targetMid]){if(!sessionDescription||!sessionDescription.sdp)return void(this._peerConnections[targetMid].remoteStreamId=null);for(var sdpLines=sessionDescription.sdp.split("\r\n"),currentStreamId=null,i=0;i<sdpLines.length;i++){if(0===sdpLines[i].indexOf("a=msid:")){currentStreamId=(sdpLines[i].split("a=msid:")[1]||"").split(" ")[0];break}if(0===sdpLines[i].indexOf("a=ssrc:")&&sdpLines[i].indexOf(" msid:")>0){currentStreamId=(sdpLines[i].split(" msid:")[1]||"").split(" ")[0];break}}currentStreamId?currentStreamId!==this._peerConnections[targetMid].remoteStreamId?(log.info([targetMid,"RTCSessionDesription",sessionDescription.type,"New remote stream is sent ->"],currentStreamId),this._peerConnections[targetMid].remoteStreamId=currentStreamId):log.info([targetMid,"RTCSessionDesription",sessionDescription.type,"Same remote stream is sent ->"],currentStreamId):(log.info([targetMid,"RTCSessionDesription",sessionDescription.type,"No remote stream is sent."]),this._peerConnections[targetMid].remoteStreamId=null)}},Skylink.prototype._getSDPICECandidates=function(targetMid,sessionDescription,beSilentOnLogs){var candidates={host:[],srflx:[],relay:[]};return sessionDescription&&sessionDescription.sdp?(sessionDescription.sdp.split("m=").forEach(function(mediaItem,index){if(0!==index){var sdpMid=((mediaItem.match(/a=mid:.*\r\n/gi)||[])[0]||"").replace(/a=mid:/gi,"").replace(/\r\n/,""),sdpMLineIndex=index-1;(mediaItem.match(/a=candidate:.*\r\n/gi)||[]).forEach(function(item){var canType=(item.split(" ")[7]||"host").replace(/\r\n/g,"");candidates[canType]=candidates[canType]||[],candidates[canType].push(new RTCIceCandidate({sdpMid:sdpMid,sdpMLineIndex:sdpMLineIndex,candidate:(item.split("a=")[1]||"").replace(/\r\n/g,"")}))})}}),beSilentOnLogs||log.debug([targetMid,"RTCSessionDesription",sessionDescription.type,"Parsing session description ICE candidates ->"],candidates),candidates):candidates},Skylink.prototype._getSDPMediaSSRC=function(targetMid,sessionDescription,beSilentOnLogs){var ssrcs={audio:0,video:0};return sessionDescription&&sessionDescription.sdp?(sessionDescription.sdp.split("m=").forEach(function(mediaItem,index){if(0!==index){var mediaType=mediaItem.split(" ")[0]||"",ssrcLine=(mediaItem.match(/a=ssrc:.*\r\n/)||[])[0];"number"==typeof ssrcs[mediaType]&&ssrcLine&&(ssrcs[mediaType]=parseInt((ssrcLine.split("a=ssrc:")[1]||"").split(" ")[0],10)||0)}}),beSilentOnLogs||log.debug([targetMid,"RTCSessionDesription",sessionDescription.type,"Parsing session description media SSRCs ->"],ssrcs),ssrcs):ssrcs},Skylink.prototype._getSDPCodecsSupport=function(targetMid,sessionDescription){var codecs={audio:{},video:{}};if(!sessionDescription||!sessionDescription.sdp)return codecs;for(var sdpLines=sessionDescription.sdp.split("\r\n"),mediaType="",i=0;i<sdpLines.length;i++)if(0!==sdpLines[i].indexOf("m=")){if(0===sdpLines[i].indexOf("a=rtpmap:")){var parts=(sdpLines[i].split(" ")[1]||"").split("/"),codec=(parts[0]||"").toLowerCase(),info=parts[1]+(parts[2]?"/"+parts[2]:"");if(["ulpfec","red","telephone-event","cn","rtx"].indexOf(codec)>-1)continue;codecs[mediaType][codec]=codecs[mediaType][codec]||[],-1===codecs[mediaType][codec].indexOf(info)&&codecs[mediaType][codec].push(info)}}else mediaType=(sdpLines[i].split("m=")[1]||"").split(" ")[0];return log.info([targetMid||null,"RTCSessionDescription",sessionDescription.type,"Parsed codecs support ->"],codecs),codecs},Skylink.prototype._getSDPCommonSupports=function(targetMid,sessionDescription){var self=this,offer={audio:!1,video:!1};if(!targetMid||!sessionDescription||!sessionDescription.sdp){if(offer.video=!(!self._currentCodecSupport.video.h264&&!self._currentCodecSupport.video.vp8),offer.audio=!!self._currentCodecSupport.audio.opus,targetMid){var peerAgent=((self._peerInformations[targetMid]||{}).agent||{}).name||"";AdapterJS.webrtcDetectedBrowser===peerAgent&&(offer.video=Object.keys(self._currentCodecSupport.video).length>0,offer.audio=Object.keys(self._currentCodecSupport.audio).length>0)}return offer}var remoteCodecs=self._getSDPCodecsSupport(targetMid,sessionDescription),localCodecs=self._currentCodecSupport;for(var ac in localCodecs.audio)if(localCodecs.audio.hasOwnProperty(ac)&&localCodecs.audio[ac]&&remoteCodecs.audio[ac]){offer.audio=!0;break}for(var vc in localCodecs.video)if(localCodecs.video.hasOwnProperty(vc)&&localCodecs.video[vc]&&remoteCodecs.video[vc]){offer.video=!0;break}return offer},Skylink.prototype._setSCTPport=function(targetMid,sessionDescription){var self=this;if("firefox"===AdapterJS.webrtcDetectedBrowser&&AdapterJS.webrtcDetectedVersion>=63&&!0===self._hasMCU){for(var sdpLines=sessionDescription.sdp.split("\r\n"),mLineType="application",mLineIndex=-1,sdpType=sessionDescription.type,i=0;i<sdpLines.length;i++)if(0===sdpLines[i].indexOf("m="+mLineType))mLineIndex=i;else if(mLineIndex>0){if(0===sdpLines[i].indexOf("m="))break;if("offer"===sdpType){self._mline=sdpLines[mLineIndex];break}if("answer"===sdpType){sdpLines[mLineIndex]=self._mline,sdpLines.splice(mLineIndex+1,0,"a=sctp-port:5000");break}}return sdpLines.join("\r\n")}return sessionDescription.sdp},Skylink.prototype._setOriginalDTLSRole=function(sessionDescription,isRemote){var self=this,sdpType=sessionDescription.type,role=null,aSetupPattern=null,invertRoleMap={active:"passive",passive:"active"};null===self._originalDTLSRole&&"offer"!==sdpType&&(aSetupPattern=sessionDescription.sdp.match(/a=setup:([a-z]+)/))&&(role=aSetupPattern[1],self._originalDTLSRole=isRemote?invertRoleMap[role]:role)},Skylink.prototype._modifyDTLSRole=function(sessionDescription){var self=this,sdpType=sessionDescription.type;if(null!==self._originalDTLSRole&&"offer"!==sdpType)return sessionDescription.sdp=sessionDescription.sdp.replace(/a=setup:[a-z]+/g,"a=setup:"+self._originalDTLSRole),sessionDescription.sdp},"undefined"!=typeof exports?module.exports={Skylink:Skylink,SkylinkLogs:SkylinkLogs}:globals?(globals.Skylink=Skylink,globals.SkylinkLogs=SkylinkLogs):window&&(window.Skylink=Skylink,window.SkylinkLogs=SkylinkLogs)}(this);