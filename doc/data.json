{
    "project": {
        "name": "skylinkjs",
        "description": "SkylinkJS is an open-source client-side library for your web-browser that enables any website to easily leverage the capabilities of WebRTC and its direct data streaming powers between peers for audio/video conferencing or file transfer.",
        "version": "0.6.14",
        "url": "https://temasys.github.io/"
    },
    "files": {
        "source/template/header.js": {
            "name": "source/template/header.js",
            "modules": {},
            "classes": {
                "Skylink": 1
            },
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/data-channel.js": {
            "name": "source/data-channel.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/data-process.js": {
            "name": "source/data-process.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/data-transfer.js": {
            "name": "source/data-transfer.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/ice-candidate.js": {
            "name": "source/ice-candidate.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/ice-connection.js": {
            "name": "source/ice-connection.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/peer-connection.js": {
            "name": "source/peer-connection.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/peer-data.js": {
            "name": "source/peer-data.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/peer-handshake.js": {
            "name": "source/peer-handshake.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/peer-privileged.js": {
            "name": "source/peer-privileged.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/room-connection.js": {
            "name": "source/room-connection.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/room-init.js": {
            "name": "source/room-init.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/skylink-debug.js": {
            "name": "source/skylink-debug.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/skylink-events.js": {
            "name": "source/skylink-events.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/socket-channel.js": {
            "name": "source/socket-channel.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/socket-message.js": {
            "name": "source/socket-message.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/stream-media.js": {
            "name": "source/stream-media.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        },
        "source/stream-sdp.js": {
            "name": "source/stream-sdp.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Skylink": 1
            },
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "Skylink": {
            "name": "Skylink",
            "shortname": "Skylink",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "source/template/header.js",
            "line": 120,
            "description": "<h2>Prerequisites on using Skylink</h2>\nBefore using any Skylink functionalities, you will need to authenticate your App Key using\n  the <a href=\"#method_init\">`init()` method</a>.\n\nTo manage or create App Keys, you may access the [Skylink Developer Portal here](https://console.temasys.io).\n\nTo view the list of supported browsers, visit [the list here](\nhttps://github.com/Temasys/SkylinkJS#supported-browsers).\n\nHere are some articles to help you get started:\n- [How to setup a simple video call](https://temasys.com.sg/getting-started-with-webrtc-and-skylinkjs/)\n- [How to setup screensharing](https://temasys.com.sg/screensharing-with-skylinkjs/)\n- [How to create a chatroom like feature](https://temasys.com.sg/building-a-simple-peer-to-peer-webrtc-chat/)\n\nHere are some demos you may use to aid your development:\n- Getaroom.io [[Demo](https://getaroom.io) / [Source code](https://github.com/Temasys/getaroom)]\n- Creating a component [[Link](https://github.com/Temasys/skylink-call-button)]\n\nYou may see the example below in the <a href=\"#\">Constructor tab</a> to have a general idea how event subscription\n  and the ordering of <a href=\"#method_init\"><code>init()</code></a> and\n  <a href=\"#method_joinRoom\"><code>joinRoom()</code></a> methods should be called.\n\nIf you have any issues, you may find answers to your questions in the FAQ section on [our support portal](\nhttp://support.temasys.com.sg), asks questions, request features or raise bug tickets as well.\n\nIf you would like to contribute to our SkylinkJS codebase, see [the contributing README](\nhttps://github.com/Temasys/SkylinkJS/blob/master/CONTRIBUTING.md).\n\n[See License (Apache 2.0)](https://github.com/Temasys/SkylinkJS/blob/master/LICENSE)",
            "is_constructor": 1,
            "example": [
                "\n  // Here's a simple example on how you can start using Skylink.\n  var skylinkDemo = new Skylink();\n\n  // Subscribe all events first as a general guideline\n  skylinkDemo.on(\"incomingStream\", function (peerId, stream, peerInfo, isSelf) {\n    if (isSelf) {\n      attachMediaStream(document.getElementById(\"selfVideo\"), stream);\n    } else {\n      var peerVideo = document.createElement(\"video\");\n      peerVideo.id = peerId;\n      peerVideo.autoplay = \"autoplay\";\n      document.getElementById(\"peersVideo\").appendChild(peerVideo);\n      attachMediaStream(peerVideo, stream);\n    }\n  });\n\n  skylinkDemo.on(\"peerLeft\", function (peerId, peerInfo, isSelf) {\n    if (!isSelf) {\n      var peerVideo = document.getElementById(peerId);\n      // do a check if peerVideo exists first\n      if (peerVideo) {\n        document.getElementById(\"peersVideo\").removeChild(peerVideo);\n      } else {\n        console.error(\"Peer video for \" + peerId + \" is not found.\");\n      }\n    }\n  });\n\n // init() should always be called first before other methods other than event methods like on() or off().\n skylinkDemo.init(\"YOUR_APP_KEY_HERE\", function (error, success) {\n   if (success) {\n     skylinkDemo.joinRoom(\"my_room\", {\n       userData: \"My Username\",\n       audio: true,\n       video: true\n     });\n   }\n });"
            ],
            "since": "0.5.0"
        }
    },
    "classitems": [
        {
            "file": "source/template/header.js",
            "line": 5,
            "description": "Polyfill for Object.keys() from Mozilla\nFrom https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys",
            "class": "Skylink"
        },
        {
            "file": "source/template/header.js",
            "line": 45,
            "description": "Polyfill for Date.getISOString() from Mozilla\nFrom https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString",
            "class": "Skylink"
        },
        {
            "file": "source/template/header.js",
            "line": 69,
            "description": "Polyfill for addEventListener() from Eirik Backer @eirikbacker (github.com).\nFrom https://gist.github.com/eirikbacker/2864711\nMIT Licensed",
            "class": "Skylink"
        },
        {
            "file": "source/template/header.js",
            "line": 103,
            "description": "Global function that clones an object.",
            "class": "Skylink"
        },
        {
            "file": "source/template/header.js",
            "line": 201,
            "description": "Contains the current version of Skylink Web SDK.",
            "itemtype": "attribute",
            "name": "VERSION",
            "type": "String",
            "readonly": "",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/template/header.js",
            "line": 211,
            "description": "Function that generates an <a href=\"https://en.wikipedia.org/wiki/Universally_unique_identifier\">UUID</a> (Unique ID).",
            "itemtype": "method",
            "name": "generateUUID",
            "return": {
                "description": "Returns a generated UUID (Unique ID).",
                "type": "String"
            },
            "since": "0.5.9",
            "class": "Skylink"
        },
        {
            "file": "source/data-channel.js",
            "line": 1,
            "description": "The list of Datachannel connection states.",
            "itemtype": "attribute",
            "name": "DATA_CHANNEL_STATE",
            "params": [
                {
                    "name": "CONNECTING",
                    "description": "<small>Value <code>\"connecting\"</code></small>\n  The value of the state when Datachannel is attempting to establish a connection.",
                    "type": "String"
                },
                {
                    "name": "OPEN",
                    "description": "<small>Value <code>\"open\"</code></small>\n  The value of the state when Datachannel has established a connection.",
                    "type": "String"
                },
                {
                    "name": "CLOSING",
                    "description": "<small>Value <code>\"closing\"</code></small>\n  The value of the state when Datachannel connection is closing.",
                    "type": "String"
                },
                {
                    "name": "CLOSED",
                    "description": "<small>Value <code>\"closed\"</code></small>\n  The value of the state when Datachannel connection has closed.",
                    "type": "String"
                },
                {
                    "name": "ERROR",
                    "description": "<small>Value <code>\"error\"</code></small>\n  The value of the state when Datachannel connection has errors.",
                    "type": "String"
                }
            ],
            "type": "JSON",
            "readonly": "",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/data-channel.js",
            "line": 27,
            "description": "The list of Datachannel types.",
            "itemtype": "attribute",
            "name": "DATA_CHANNEL_TYPE",
            "params": [
                {
                    "name": "MESSAGING",
                    "description": "<small>Value <code>\"messaging\"</code></small>\n  The value of the Datachannel type that is used only for messaging in\n  <a href=\"#method_sendP2PMessage\"><code>sendP2PMessage()</code> method</a>.\n  <small>However for Peers that do not support simultaneous data transfers, this Datachannel\n  type will be used to do data transfers (1 at a time).</small>\n  <small>Each Peer connections will only have one of this Datachannel type and the\n  connection will only close when the Peer connection is closed.</small>",
                    "type": "String"
                },
                {
                    "name": "DATA",
                    "description": "<small>Value <code>\"data\"</code></small>\n  The value of the Datachannel type that is used only for a data transfer in\n  <a href=\"#method_sendURLData\"><code>sendURLData()</code> method</a> and\n  <a href=\"#method_sendBlobData\"><code>sendBlobData()</code> method</a>.\n  <small>The connection will close after the data transfer has been completed or terminated.</small>",
                    "type": "String"
                }
            ],
            "type": "JSON",
            "readonly": "",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/data-channel.js",
            "line": 52,
            "description": "Stores the flag if Peers should have any Datachannel connections.",
            "itemtype": "attribute",
            "name": "_enableDataChannel",
            "default": "true",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "since": "0.3.0",
            "class": "Skylink"
        },
        {
            "file": "source/data-channel.js",
            "line": 63,
            "description": "Stores the list of Peer Datachannel connections.",
            "itemtype": "attribute",
            "name": "_dataChannels",
            "params": [
                {
                    "name": "(#peerId)",
                    "description": "The list of Datachannels associated with Peer ID.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "<#channelLabel>",
                            "description": "The Datachannel connection.\n  The property name <code>\"main\"</code> is reserved for messaging Datachannel type.",
                            "type": "RTCDataChannel"
                        }
                    ]
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.2.0",
            "class": "Skylink"
        },
        {
            "file": "source/data-channel.js",
            "line": 76,
            "description": "Function that starts a Datachannel connection with Peer.",
            "itemtype": "method",
            "name": "_createDataChannel",
            "access": "private",
            "tagname": "",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/data-channel.js",
            "line": 241,
            "description": "Function that sends data over the Datachannel connection.",
            "itemtype": "method",
            "name": "_sendDataChannelMessage",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/data-channel.js",
            "line": 299,
            "description": "Function that stops the Datachannel connection and removes object references.",
            "itemtype": "method",
            "name": "_closeDataChannel",
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/data-process.js",
            "line": 1,
            "description": "<blockquote class=\"info\">\n  Currently, we do not support Blob or ArrayBuffer data type of transfers, but we\n  will look into implementing it in the future.\n</blockquote>\nThe list of supported data transfer data types.",
            "itemtype": "attribute",
            "name": "DATA_TRANSFER_DATA_TYPE",
            "params": [
                {
                    "name": "BINARY_STRING",
                    "description": "<small>Value <code>\"binaryString\"</code></small>\n  The value of the transfer type that sends all data packets as string\n  (or converts them into string) when transferring data over the Datachannel connection.",
                    "type": "String"
                }
            ],
            "type": "JSON",
            "readonly": "",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/data-process.js",
            "line": 22,
            "description": "Stores the data chunk size for Blob transfers.",
            "itemtype": "attribute",
            "name": "_CHUNK_FILE_SIZE",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "readonly": "",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/data-process.js",
            "line": 33,
            "description": "Stores the data chunk size for Blob transfers transferring from/to\n  Firefox browsers due to limitation tested in the past in some PCs (linx predominatly).",
            "itemtype": "attribute",
            "name": "_MOZ_CHUNK_FILE_SIZE",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "readonly": "",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/data-process.js",
            "line": 45,
            "description": "Stores the data chunk size for data URI string transfers.",
            "itemtype": "attribute",
            "name": "_CHUNK_DATAURL_SIZE",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "readonly": "",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/data-process.js",
            "line": 56,
            "description": "Function that converts Base64 string into Blob object.\nThis is referenced from devnull69@stackoverflow.com #6850276.",
            "itemtype": "method",
            "name": "_base64ToBlob",
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/data-process.js",
            "line": 76,
            "description": "Function that converts a Blob object into Base64 string.",
            "itemtype": "method",
            "name": "_blobToBase64",
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/data-process.js",
            "line": 93,
            "description": "Function that chunks Blob object based on the data chunk size provided.\nIf provided Blob object size is lesser than or equals to the chunk size, it should return an array\n  of length of <code>1</code>.",
            "itemtype": "method",
            "name": "_chunkBlobData",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/data-process.js",
            "line": 125,
            "description": "Function that chunks large string into string chunks based on the data chunk size provided.\nIf provided string length is lesser than or equals to the chunk size, it should return an array\n  of length of <code>1</code>.",
            "itemtype": "method",
            "name": "_chunkDataURL",
            "access": "private",
            "tagname": "",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/data-process.js",
            "line": 159,
            "description": "Function that assembles the data string chunks into a large string.",
            "itemtype": "method",
            "name": "_assembleDataURL",
            "access": "private",
            "tagname": "",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 1,
            "description": "<blockquote class=\"info\">\n  Note that this is used only for SDK developer purposes.<br>\n  Current version: <code>0.1.0</code>\n</blockquote>\nThe value of the current version of the data transfer protocol.",
            "itemtype": "attribute",
            "name": "DT_PROTOCOL_VERSION",
            "type": "String",
            "readonly": "",
            "since": "0.5.10",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 15,
            "description": "The list of data transfers directions.",
            "itemtype": "attribute",
            "name": "DATA_TRANSFER_TYPE",
            "params": [
                {
                    "name": "UPLOAD",
                    "description": "<small>Value <code>\"upload\"</code></small>\n  The value of the data transfer direction when User is uploading data to Peer.",
                    "type": "String"
                },
                {
                    "name": "DOWNLOAD",
                    "description": "<small>Value <code>\"download\"</code></small>\n  The value of the data transfer direction when User is downloading data from Peer.",
                    "type": "String"
                }
            ],
            "type": "JSON",
            "readonly": "",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 32,
            "description": "The list of data transfers session types.",
            "itemtype": "attribute",
            "name": "DATA_TRANSFER_SESSION_TYPE",
            "params": [
                {
                    "name": "BLOB",
                    "description": "<small>Value <code>\"blob\"</code></small>\n  The value of the session type for\n  <a href=\"#method_sendURLData\"><code>sendURLData()</code> method</a> data transfer.",
                    "type": "String"
                },
                {
                    "name": "DATA_URL",
                    "description": "<small>Value <code>\"dataURL\"</code></small>\n  The value of the session type for\n  <a href=\"#method_sendBlobData\"><code>method_sendBlobData()</code> method</a> data transfer.",
                    "type": "String"
                }
            ],
            "type": "JSON",
            "readonly": "",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 51,
            "description": "The list of data transfer states.",
            "itemtype": "attribute",
            "name": "DATA_TRANSFER_STATE",
            "params": [
                {
                    "name": "UPLOAD_REQUEST",
                    "description": "<small>Value <code>\"request\"</code></small>\n  The value of the state when receiving an upload data transfer request from Peer to User.\n  <small>At this stage, the upload data transfer request from Peer may be accepted or rejected with the\n  <a href=\"#method_acceptDataTransfer\"><code>acceptDataTransfer()</code> method</a>.</small>",
                    "type": "String"
                },
                {
                    "name": "UPLOAD_STARTED",
                    "description": "<small>Value <code>\"uploadStarted\"</code></small>\n  The value of the state when the data transfer request has been accepted\n  and data transfer will start uploading data to Peer.\n  <small>At this stage, the data transfer may be terminated with the\n  <a href=\"#method_cancelDataTransfer\"><code>cancelDataTransfer()</code> method</a>.</small>",
                    "type": "String"
                },
                {
                    "name": "DOWNLOAD_STARTED",
                    "description": "<small>Value <code>\"downloadStarted\"</code></small>\n  The value of the state when the data transfer request has been accepted\n  and data transfer will start downloading data from Peer.\n  <small>At this stage, the data transfer may be terminated with the\n  <a href=\"#method_cancelDataTransfer\"><code>cancelDataTransfer()</code> method</a>.</small>",
                    "type": "String"
                },
                {
                    "name": "REJECTED",
                    "description": "<small>Value <code>\"rejected\"</code></small>\n  The value of the state when upload data transfer request to Peer has been rejected and terminated.",
                    "type": "String"
                },
                {
                    "name": "UPLOADING",
                    "description": "<small>Value <code>\"uploading\"</code></small>\n  The value of the state when data transfer is uploading data to Peer.",
                    "type": "String"
                },
                {
                    "name": "DOWNLOADING",
                    "description": "<small>Value <code>\"downloading\"</code></small>\n  The value of the state when data transfer is downloading data from Peer.",
                    "type": "String"
                },
                {
                    "name": "UPLOAD_COMPLETED",
                    "description": "<small>Value <code>\"uploadCompleted\"</code></small>\n  The value of the state when data transfer has uploaded successfully to Peer.",
                    "type": "String"
                },
                {
                    "name": "DOWNLOAD_COMPLETED",
                    "description": "<small>Value <code>\"downloadCompleted\"</code></small>\n  The value of the state when data transfer has downloaded successfully from Peer.",
                    "type": "String"
                },
                {
                    "name": "CANCEL",
                    "description": "<small>Value <code>\"cancel\"</code></small>\n  The value of the state when data transfer has been terminated from / to Peer.",
                    "type": "String"
                },
                {
                    "name": "ERROR",
                    "description": "<small>Value <code>\"error\"</code></small>\n  The value of the state when data transfer has errors and has been terminated.",
                    "type": "String"
                }
            ],
            "type": "JSON",
            "readonly": "",
            "since": "0.4.0",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 100,
            "description": "Stores the fixed delimiter that concats the Datachannel label and actual transfer ID.",
            "itemtype": "attribute",
            "name": "_TRANSFER_DELIMITER",
            "type": "String",
            "readonly": "",
            "access": "private",
            "tagname": "",
            "since": "0.5.10",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 111,
            "description": "Stores the list of data transfer protocols.",
            "itemtype": "attribute",
            "name": "_DC_PROTOCOL_TYPE",
            "params": [
                {
                    "name": "WRQ",
                    "description": "The protocol to initiate data transfer.",
                    "type": "String"
                },
                {
                    "name": "ACK",
                    "description": "The protocol to request for data transfer chunk.\n  Give <code>-1</code> to reject the request at the beginning and <code>0</code> to accept\n  the data transfer request.",
                    "type": "String"
                },
                {
                    "name": "CANCEL",
                    "description": "The protocol to terminate data transfer.",
                    "type": "String"
                },
                {
                    "name": "ERROR",
                    "description": "The protocol when data transfer has errors and has to be terminated.",
                    "type": "String"
                },
                {
                    "name": "MESSAGE",
                    "description": "The protocol that is used to send P2P messages.",
                    "type": "String"
                }
            ],
            "type": "JSON",
            "readonly": "",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 135,
            "description": "Stores the list of types of SDKs that do not support simultaneous data transfers.",
            "itemtype": "attribute",
            "name": "_INTEROP_MULTI_TRANSFERS",
            "type": "Array",
            "readonly": "",
            "access": "private",
            "tagname": "",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 146,
            "description": "Stores the list of uploading data transfers chunks to Peers.",
            "itemtype": "attribute",
            "name": "_uploadDataTransfers",
            "params": [
                {
                    "name": "<#transferId>",
                    "description": "The uploading data transfer chunks.",
                    "type": "Array"
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.4.1",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 157,
            "description": "Stores the list of uploading data transfer sessions to Peers.",
            "itemtype": "attribute",
            "name": "_uploadDataSessions",
            "params": [
                {
                    "name": "<#transferId>",
                    "description": "The uploading data transfer session.",
                    "type": "JSON"
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.4.1",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 168,
            "description": "Stores the list of downloading data transfers chunks to Peers.",
            "itemtype": "attribute",
            "name": "_downloadDataTransfers",
            "params": [
                {
                    "name": "<#transferId>",
                    "description": "The downloading data transfer chunks.",
                    "type": "Array"
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.4.1",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 179,
            "description": "Stores the list of downloading data transfer sessions to Peers.",
            "itemtype": "attribute",
            "name": "_downloadDataSessions",
            "params": [
                {
                    "name": "<#transferId>",
                    "description": "The downloading data transfer session.",
                    "type": "JSON"
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.4.1",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 190,
            "description": "Stores the list of data transfer \"wait-for-response\" timeouts.",
            "itemtype": "attribute",
            "name": "_dataTransfersTimeout",
            "params": [
                {
                    "name": "<#transferId>",
                    "description": "The data transfer session \"wait-for-response\" timeout.",
                    "type": "Object"
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.4.1",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 201,
            "description": "<blockquote class=\"info\">\n  Note that Android and iOS SDKs do not support simultaneous data transfers.\n</blockquote>\nFunction that starts an uploading data transfer from User to Peers.",
            "itemtype": "method",
            "name": "sendBlobData",
            "params": [
                {
                    "name": "data",
                    "description": "The Blob object.",
                    "type": "Blob"
                },
                {
                    "name": "timeout",
                    "description": "The timeout to wait for response from Peer.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "60"
                },
                {
                    "name": "targetPeerId",
                    "description": "The target Peer ID to start data transfer with.\n- When provided as an Array, it will start uploading data transfers with all connections\n  with all the Peer IDs provided.\n- When not provided, it will start uploading data transfers with all the currently connected Peers in the Room.",
                    "type": "String|Array",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "The callback function fired when request has completed.\n  <small>Function parameters signature is <code>function (error, success)</code></small>\n  <small>Function request completion is determined by the <a href=\"#event_dataTransferState\">\n  <code>dataTransferState</code> event</a> triggering <code>state</code> parameter payload\n  as <code>UPLOAD_COMPLETED</code> for all Peers targeted for request success.</small>",
                    "type": "Function",
                    "optional": true,
                    "props": [
                        {
                            "name": "error",
                            "description": "The error result in request.\n  <small>Defined as <code>null</code> when there are no errors in request</small>",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "transferId",
                                    "description": "<blockquote class=\"info\">\n  <b>Deprecation Warning!</b> This property has been deprecated.\n  Please use <code>callback.error.transferInfo.transferId</code> instead.\n  </blockquote> The data transfer ID.\n  <small>Defined only for single targeted Peer data transfer.</small>",
                                    "type": "String"
                                },
                                {
                                    "name": "state",
                                    "description": "<blockquote class=\"info\">\n  <b>Deprecation Warning!</b> This property has been deprecated.\n  Please use <a href=\"#event_dataTransferState\"><code>dataTransferState</code>\n  event</a> instead. </blockquote> The data transfer state that resulted in error.\n  <small>Defined only for single targeted Peer data transfer.</small> [Rel: Skylink.DATA_TRANSFER_STATE]",
                                    "type": "String"
                                },
                                {
                                    "name": "peerId",
                                    "description": "<blockquote class=\"info\">\n  <b>Deprecation Warning!</b> This property has been deprecated.\n  Please use <code>callback.error.listOfPeers</code> instead.\n  </blockquote> The targeted Peer ID for data transfer.\n  <small>Defined only for single targeted Peer data transfer.</small>",
                                    "type": "String"
                                },
                                {
                                    "name": "isPrivate",
                                    "description": "<blockquote class=\"info\">\n  <b>Deprecation Warning!</b> This property has been deprecated.\n  Please use <code>callback.error.transferInfo.isPrivate</code> instead.\n  </blockquote> The flag if data transfer is targeted or not, basing\n  off the <code>targetPeerId</code> parameter being defined.\n  <small>Defined only for single targeted Peer data transfer.</small>",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "error",
                                    "description": "<blockquote class=\"info\">\n  <b>Deprecation Warning!</b> This property has been deprecated.\n  Please use <code>callback.error.transferErrors</code> instead.\n  </blockquote> The error received that resulted in error.\n  <small>Defined only for single targeted Peer data transfer.</small>",
                                    "type": "Error|String"
                                },
                                {
                                    "name": "listOfPeers",
                                    "description": "The list Peer IDs targeted for the data transfer.",
                                    "type": "Array"
                                },
                                {
                                    "name": "transferErrors",
                                    "description": "The list of data transfer errors.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "transferErrors.#peerId",
                                    "description": "The data transfer error associated\n  with the Peer ID defined in <code>#peerId</code> property.\n  <small>If <code>#peerId</code> value is <code>\"self\"</code>, it means that it is the error when there\n  are no Peer connections to start data transfer with.</small>",
                                    "type": "Error|String"
                                },
                                {
                                    "name": "transferInfo",
                                    "description": "The data transfer information.\n  <small>Object signature matches the <code>transferInfo</code> parameter payload received in the\n  <a href=\"#event_dataTransferState\"><code>dataTransferState</code> event</a>.</small>",
                                    "type": "JSON"
                                }
                            ]
                        },
                        {
                            "name": "success",
                            "description": "The success result in request.\n  <small>Defined as <code>null</code> when there are errors in request</small>",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "transferId",
                                    "description": "<blockquote class=\"info\">\n  <b>Deprecation Warning!</b> This property has been deprecated.\n  Please use <code>callback.success.transferInfo.transferId</code> instead.\n  </blockquote> The data transfer ID.",
                                    "type": "String"
                                },
                                {
                                    "name": "state",
                                    "description": "<blockquote class=\"info\">\n  <b>Deprecation Warning!</b> This property has been deprecated.\n  Please use <a href=\"#event_dataTransferState\"><code>dataTransferState</code>\n  event</a> instead. </blockquote> The data transfer state that resulted in error.\n  <small>Defined only for single targeted Peer data transfer.</small> [Rel: Skylink.DATA_TRANSFER_STATE]",
                                    "type": "String"
                                },
                                {
                                    "name": "peerId",
                                    "description": "<blockquote class=\"info\">\n  <b>Deprecation Warning!</b> This property has been deprecated.\n  Please use <code>callback.success.listOfPeers</code> instead.\n  </blockquote> The targeted Peer ID for data transfer.\n  <small>Defined only for single targeted Peer data transfer.</small>",
                                    "type": "String"
                                },
                                {
                                    "name": "isPrivate",
                                    "description": "<blockquote class=\"info\">\n  <b>Deprecation Warning!</b> This property has been deprecated.\n  Please use <code>callback.success.transferInfo.isPrivate</code> instead.\n  </blockquote> The flag if data transfer is targeted or not, basing\n  off the <code>targetPeerId</code> parameter being defined.\n  <small>Defined only for single targeted Peer data transfer.</small>",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "listOfPeers",
                                    "description": "The list Peer IDs targeted for the data transfer.",
                                    "type": "Array"
                                },
                                {
                                    "name": "transferInfo",
                                    "description": "The data transfer information.\n  <small>Object signature matches the <code>transferInfo</code> parameter payload received in the\n  <a href=\"#event_dataTransferState\"><code>dataTransferState</code> event</a>.</small>",
                                    "type": "JSON"
                                }
                            ]
                        }
                    ]
                }
            ],
            "trigger": "<ol class=\"desc-seq\">\n  <li>When Peer supports simultaneous data transfers, <ol>\n  <li><a href=\"#event_dataChannelState\"><code>dataChannelState</code> event</a> triggers parameter payload\n  <code>state</code> as <code>CONNECTING</code> and <code>channelType</code> as <code>DATA</code>.</li>\n  <li><a href=\"#event_dataChannelState\"><code>dataChannelState</code> event</a> triggers parameter payload\n  <code>state</code> as <code>OPEN</code> and <code>channelType</code> as <code>DATA</code>.</li></ol>\n  <small>For Peers that do not support simultaneous data transfers, the\n  <a href=\"#event_dataChannelState\"><code>dataChannelState</code> event</a> must trigger parameter payload\n  <code>state</code> as <code>OPEN</code> and <code>channelType</code> as <code>MESSAGING</code>.</small></li>\n  <li><a href=\"#event_incomingDataRequest\"><code>incomingDataRequest</code> event</a> triggers parameter payload\n  <code>isSelf</code> value as <code>true</code>.</li>\n  <li>When Peers accepts the uploading data transfer request from User <ol>\n  <li><a href=\"#event_dataTransferState\"><code>dataTransferState</code> event</a> triggers parameter payload\n  <code>state</code> as <code>UPLOAD_STARTED</code>.\n  <small>For Peers, the parameter payload <code>state</code> is <code>DOWNLOAD_STARTED</code>.</small></li>\n  <li>When data transfer is still uploading, <a href=\"#event_dataTransferState\"><code>dataTransferState</code>\n  event</a> triggers parameter payload <code>state</code> as <code>UPLOADING</code>.\n  <small>For Peers, the parameter payload <code>state</code> is <code>DOWNLOADING</code>.</small></li>\n  <li>When response has timed out from Peer (based on the <code>timeout</code> parameter configured in the method),\n  <a href=\"#event_dataTransferState\"><code>dataTransferState</code> event</a> triggers parameter payload\n  <code>state</code> as <code>ERROR</code> and data transfer has been terminated.</li>\n  <li><a href=\"#event_dataTransferState\"><code>dataTransferState</code>\n  event</a> triggers parameter payload <code>state</code> as <code>UPLOAD_COMPLETED</code>.\n  <small>For Peers, the parameter payload <code>state</code> is <code>DOWNLOAD_COMPLETED</code>.\n  </small></li></ol></li>\n  <li>When Peers rejects the uploading data transfer request from User <ol>\n  <li><a href=\"#event_dataTransferState\"><code>dataTransferState</code> event</a> triggers parameter payload\n  <code>state</code> as <code>REJECTED</code></li></ol></li></ol>",
            "example": [
                "\n&lt;body&gt;\n &lt;input type=\"radio\" name=\"timeout\" onchange=\"setTransferTimeout(0)\"&gt; 1s timeout (Default)\n &lt;input type=\"radio\" name=\"timeout\" onchange=\"setTransferTimeout(120)\"&gt; 2s timeout\n &lt;input type=\"radio\" name=\"timeout\" onchange=\"setTransferTimeout(300)\"&gt; 5s timeout\n &lt;hr&gt;\n &lt;input type=\"file\" onchange=\"uploadFile(this.Files[0], this.getAttribute('data'))\" data=\"peerId\"&gt;\n &lt;input type=\"file\" onchange=\"uploadFileGroup(this.Files[0], this.getAttribute('data').split(',')))\" data=\"peerIdA,peerIdB\"&gt;\n &lt;input type=\"file\" onchange=\"uploadFileAll(this.Files[0])\" data=\"\"&gt;\n &lt;script&gt;\n   var transferTimeout = 0;\n\n   function setTransferTimeout (timeout) {\n     transferTimeout = timeout;\n   }\n\n   // Example 1: Upload data to a Peer\n   function uploadFile (file, peerId) {\n     var cb = function (error, success) {\n       if (error) return;\n       console.info(\"File has been transferred to '\" + peerId + \"' successfully\");\n     };\n     if (transferTimeout > 0) {\n       skylinkDemo.sendBlobData(file, peerId, transferTimeout, cb);\n     } else {\n       skylinkDemo.sendBlobData(file, peerId, cb);\n     }\n   }\n\n   // Example 2: Upload data to a list of Peers\n   function uploadFileGroup (file, peerIds) {\n     var cb = function (error, success) {\n       var listOfPeers = error ? error.listOfPeers : success.listOfPeers;\n       var listOfPeersErrors = error ? error.transferErrors : {};\n       for (var i = 0; i < listOfPeers.length; i++) {\n         if (listOfPeersErrors[listOfPeers[i]]) {\n           console.error(\"Failed file transfer to '\" + listOfPeers[i] + \"'\");\n         } else {\n           console.info(\"File has been transferred to '\" + listOfPeers[i] + \"' successfully\");\n         }\n       }\n     };\n     if (transferTimeout > 0) {\n       skylinkDemo.sendBlobData(file, peerIds, transferTimeout, cb);\n     } else {\n       skylinkDemo.sendBlobData(file, peerIds, cb);\n     }\n   }\n\n   // Example 2: Upload data to a list of Peers\n   function uploadFileAll (file) {\n     var cb = function (error, success) {\n       var listOfPeers = error ? error.listOfPeers : success.listOfPeers;\n       var listOfPeersErrors = error ? error.transferErrors : {};\n       for (var i = 0; i < listOfPeers.length; i++) {\n         if (listOfPeersErrors[listOfPeers[i]]) {\n           console.error(\"Failed file transfer to '\" + listOfPeers[i] + \"'\");\n         } else {\n           console.info(\"File has been transferred to '\" + listOfPeers[i] + \"' successfully\");\n         }\n       }\n     };\n     if (transferTimeout > 0) {\n       skylinkDemo.sendBlobData(file, transferTimeout, cb);\n     } else {\n       skylinkDemo.sendBlobData(file, cb);\n     }\n   }\n&lt;/script&gt;\n&lt;/body&gt;"
            ],
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 528,
            "description": "<blockquote class=\"info\">\n  <b>Deprecation Warning!</b> This method has been deprecated, please use <a href=\"#method_acceptDataTransfer\">\n  <code>acceptDataTransfer()</code> method</a> instead.\n</blockquote>\nFunction that accepts or rejects an upload data transfer request from Peer to User.\n<small>Parameter signature follows <a href=\"#method_acceptDataTransfer\">\n<code>acceptDataTransfer()</code> method</a>.</small>",
            "itemtype": "method",
            "name": "respondBlobRequest",
            "example": [
                "\n  // Example 1: Accept Peer upload data transfer request\n  skylinkDemo.on(\"incomingDataRequest\", function (transferId, peerId, transferInfo, isSelf) {\n     if (!isSelf) {\n       skylinkDemo.respondBlobRequest(peerId, transferId, true);\n     }\n  });\n\n  // Example 2: Reject Peer upload data transfer request\n  skylinkDemo.on(\"incomingDataRequest\", function (transferId, peerId, transferInfo, isSelf) {\n     if (!isSelf) {\n       skylinkDemo.respondBlobRequest(peerId, transferId, false);\n     }\n  });"
            ],
            "deprecated": true,
            "deprecationMessage": "true",
            "trigger": "<small>Event sequence follows <a href=\"#method_acceptDataTransfer\">\n<code>acceptDataTransfer()</code> method</a>.</small>",
            "since": "0.5.0",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 558,
            "description": "Function that accepts or rejects an upload data transfer request from Peer to User.",
            "itemtype": "method",
            "name": "acceptDataTransfer",
            "params": [
                {
                    "name": "peerId",
                    "description": "The Peer ID.",
                    "type": "String"
                },
                {
                    "name": "transferId",
                    "description": "The data transfer ID.",
                    "type": "String"
                },
                {
                    "name": "accept",
                    "description": "The flag if User accepts the upload data transfer request from Peer.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "example": [
                "\n  // Example 1: Accept Peer upload data transfer request\n  skylinkDemo.on(\"incomingDataRequest\", function (transferId, peerId, transferInfo, isSelf) {\n     if (!isSelf) {\n       skylinkDemo.acceptDataTransfer(peerId, transferId, true);\n     }\n  });\n\n  // Example 2: Reject Peer upload data transfer request\n  skylinkDemo.on(\"incomingDataRequest\", function (transferId, peerId, transferInfo, isSelf) {\n     if (!isSelf) {\n       skylinkDemo.acceptDataTransfer(peerId, transferId, false);\n     }\n  });"
            ],
            "trigger": "<ol class=\"desc-seq\">\n  <li>When User accepts the uploading data transfer request from Peer,\n  <a href=\"#event_dataTransferState\"><code>dataTransferState</code> event</a> triggers parameter payload\n  <code>state</code> as <code>DOWNLOAD_STARTED</code>.\n  <li>When User rejects the uploading data transfer request from Peer,\n  <li><a href=\"#event_dataTransferState\"><code>dataTransferState</code> event</a> triggers parameter payload\n  <code>state</code> as <code>REJECTED</code></li></ol>",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 660,
            "description": "<blockquote class=\"info\">\n  <b>Deprecation Warning!</b> This method has been deprecated, please use <a href=\"#method_cancelDataTransfer\">\n  <code>method_cancelDataTransfer()</code> method</a> instead.\n</blockquote>\nFunction that terminates a currently uploading / downloading data transfer from / to Peer.\n<small>Parameter signature follows <a href=\"#method_cancelDataTransfer\">\n<code>cancelDataTransfer()</code> method</a>.</small>",
            "itemtype": "method",
            "name": "cancelBlobTransfer",
            "trigger": "<small>Event sequence follows <a href=\"#method_cancelDataTransfer\">\n<code>cancelDataTransfer()</code> method</a>.</small>",
            "example": [
                "\n  // Example 1: Cancel Peer data transfer\n  var transferSessions = {};\n\n  skylinkDemo.on(\"dataTransferState\", function (state, transferId, peerId) {\n    if ([skylinkDemo.DATA_TRANSFER_STATE.DOWNLOAD_STARTED,\n      skylinkDemo.DATA_TRANSFER_STATE.UPLOAD_STARTED].indexOf(state) > -1) {\n      if (!Array.isArray(transferSessions[transferId])) {\n        transferSessions[transferId] = [];\n      }\n      transferSessions[transferId].push(peerId);\n    } else {\n      transferSessions[transferId].splice(transferSessions[transferId].indexOf(peerId), 1);\n    }\n  });\n\n  function cancelTransfer (peerId, transferId) {\n    skylinkDemo.cancelBlobTransfer(peerId, transferId);\n  }"
            ],
            "deprecated": true,
            "deprecationMessage": "true",
            "since": "0.5.7",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 697,
            "description": "Function that terminates a currently uploading / downloading data transfer from / to Peer.",
            "itemtype": "method",
            "name": "cancelDataTransfer",
            "params": [
                {
                    "name": "peerId",
                    "description": "The Peer ID.",
                    "type": "String"
                },
                {
                    "name": "transferId",
                    "description": "The data transfer ID.",
                    "type": "String"
                }
            ],
            "example": [
                "\n  // Example 1: Cancel Peer data transfer\n  var transferSessions = {};\n\n  skylinkDemo.on(\"dataTransferState\", function (state, transferId, peerId) {\n    if ([skylinkDemo.DATA_TRANSFER_STATE.DOWNLOAD_STARTED,\n      skylinkDemo.DATA_TRANSFER_STATE.UPLOAD_STARTED].indexOf(state) > -1) {\n      if (!Array.isArray(transferSessions[transferId])) {\n        transferSessions[transferId] = [];\n      }\n      transferSessions[transferId].push(peerId);\n    } else {\n      transferSessions[transferId].splice(transferSessions[transferId].indexOf(peerId), 1);\n    }\n  });\n\n  function cancelTransfer (peerId, transferId) {\n    skylinkDemo.cancelDataTransfer(peerId, transferId);\n  }"
            ],
            "trigger": "<ol class=\"desc-seq\">\n <li><a href=\"#event_dataTransferState\"><code>dataTransferState</code> event</a> triggers\n parameter payload <code>state</code> as <code>CANCEL</code>.</li>\n </ol>",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 804,
            "description": "Function that sends a message to Peers via the Datachannel connection.\n<small>Consider using <a href=\"#method_sendURLData\"><code>sendURLData()</code> method</a> if you are\nsending large strings to Peers.</small>",
            "itemtype": "method",
            "name": "sendP2PMessage",
            "params": [
                {
                    "name": "message",
                    "description": "The message.",
                    "type": "String|JSON"
                },
                {
                    "name": "targetPeerId",
                    "description": "The target Peer ID to send message to.\n- When provided as an Array, it will send the message to only Peers which IDs are in the list.\n- When not provided, it will broadcast the message to all connected Peers in the Room.",
                    "type": "String|Array",
                    "optional": true
                }
            ],
            "trigger": "<ol class=\"desc-seq\">\n <li><a href=\"#event_incomingMessage\"><code>incomingMessage</code> event</a> triggers\n parameter payload <code>isSelf</code> value as <code>true</code>\n <small>Note that the <a href=\"#event_dataChannelState\"><code>dataChannelState</code> event</a>\n must trigger parameter payload <code>state</code> as <code>OPEN</code> and\n <code>channelType</code> as <code>MESSAGING</code> for targeted Peers or the message\n will not be sent.</small></li></ol>",
            "example": [
                "\n  // Example 1: Sending m\n  skylinkDemo.on(\"dataChannelState\", function (state, peerId, error, channelName, channelType) {\n     if (state === skylinkDemo.DATA_CHANNEL_STATE.OPEN &&\n       channelType === skylinkDemo.DATA_CHANNEL_TYPE.MESSAGING) {\n       skylinkDemo.sendP2PMessage(\"test\", peerId);\n     }\n  });\n\n  // Example 1: Broadcasting to all Peers\n  skylinkDemo.sendP2PMessage(\"Hi all!\");\n\n  // Example 2: Sending to specific Peers\n  var peersInExclusiveParty = [];\n\n  skylinkDemo.on(\"peerJoined\", function (peerId, peerInfo, isSelf) {\n    if (isSelf) return;\n    if (peerInfo.userData.exclusive) {\n      peersInExclusiveParty[peerId] = false;\n    }\n  });\n\n  skylinkDemo.on(\"dataChannelState\", function (state, peerId, error, channelName, channelType) {\n     if (state === skylinkDemo.DATA_CHANNEL_STATE.OPEN &&\n       channelType === skylinkDemo.DATA_CHANNEL_TYPE.MESSAGING) {\n       peersInExclusiveParty[peerId] = true;\n     }\n  });\n\n  function updateExclusivePartyStatus (message) {\n    skylinkDemo.sendP2PMessage(message, peersInExclusiveParty);\n  }"
            ],
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 930,
            "description": "<blockquote class=\"info\">\n  Currently, the Android and iOS SDKs do not support this type of data transfer.\n</blockquote>\nFunction that starts an uploading string data transfer from User to Peers.",
            "itemtype": "method",
            "name": "sendURLData",
            "params": [
                {
                    "name": "data",
                    "description": "The data string to transfer to Peer.\n  <small>Parameter signature follows <a href=\"#method_sendBlobData\">\n  <code>sendBlobData()</code> method</a> except <code>data</code> parameter.</small>",
                    "type": "String"
                }
            ],
            "trigger": "<small>Event sequence follows <a href=\"#method_sendBlobData\">\n<code>sendBlobData()</code> method</a>.</small>",
            "example": [
                "\n&lt;body&gt;\n &lt;input type=\"radio\" name=\"timeout\" onchange=\"setTransferTimeout(0)\"&gt; 1s timeout (Default)\n &lt;input type=\"radio\" name=\"timeout\" onchange=\"setTransferTimeout(120)\"&gt; 2s timeout\n &lt;input type=\"radio\" name=\"timeout\" onchange=\"setTransferTimeout(300)\"&gt; 5s timeout\n &lt;hr&gt;\n &lt;input type=\"file\" onchange=\"showImage(this.Files[0], this.getAttribute('data'))\" data=\"peerId\"&gt;\n &lt;input type=\"file\" onchange=\"showImageGroup(this.Files[0], this.getAttribute('data').split(',')))\" data=\"peerIdA,peerIdB\"&gt;\n &lt;input type=\"file\" onchange=\"showImageAll(this.Files[0])\" data=\"\"&gt;\n &lt;image id=\"target-1\" src=\"\"&gt;\n &lt;image id=\"target-2\" src=\"\"&gt;\n &lt;image id=\"target-3\" src=\"\"&gt;\n &lt;script&gt;\n   var transferTimeout = 0;\n\n   function setTransferTimeout (timeout) {\n     transferTimeout = timeout;\n   }\n\n   function retrieveImageDataURL(file, cb) {\n     var fr = new FileReader();\n     fr.onload = function () {\n       cb(fr.result);\n     };\n     fr.readAsDataURL(files[0]);\n   }\n\n   // Example 1: Send image data URL to a Peer\n   function showImage (file, peerId) {\n     var cb = function (error, success) {\n       if (error) return;\n       console.info(\"Image has been transferred to '\" + peerId + \"' successfully\");\n     };\n     retrieveImageDataURL(file, function (str) {\n       if (transferTimeout > 0) {\n         skylinkDemo.sendURLData(str, peerId, transferTimeout, cb);\n       } else {\n         skylinkDemo.sendURLData(str, peerId, cb);\n       }\n       document.getElementById(\"target-1\").src = str;\n     });\n   }\n\n   // Example 2: Send image data URL to a list of Peers\n   function showImageGroup (file, peerIds) {\n     var cb = function (error, success) {\n       var listOfPeers = error ? error.listOfPeers : success.listOfPeers;\n       var listOfPeersErrors = error ? error.transferErrors : {};\n       for (var i = 0; i < listOfPeers.length; i++) {\n         if (listOfPeersErrors[listOfPeers[i]]) {\n           console.error(\"Failed image transfer to '\" + listOfPeers[i] + \"'\");\n         } else {\n           console.info(\"Image has been transferred to '\" + listOfPeers[i] + \"' successfully\");\n         }\n       }\n     };\n     retrieveImageDataURL(file, function (str) {\n       if (transferTimeout > 0) {\n         skylinkDemo.sendURLData(str, peerIds, transferTimeout, cb);\n       } else {\n         skylinkDemo.sendURLData(str, peerIds, cb);\n       }\n       document.getElementById(\"target-2\").src = str;\n     });\n   }\n\n   // Example 2: Send image data URL to a list of Peers\n   function uploadFileAll (file) {\n     var cb = function (error, success) {\n       var listOfPeers = error ? error.listOfPeers : success.listOfPeers;\n       var listOfPeersErrors = error ? error.transferErrors : {};\n       for (var i = 0; i < listOfPeers.length; i++) {\n         if (listOfPeersErrors[listOfPeers[i]]) {\n           console.error(\"Failed image transfer to '\" + listOfPeers[i] + \"'\");\n         } else {\n           console.info(\"Image has been transferred to '\" + listOfPeers[i] + \"' successfully\");\n         }\n       }\n     };\n     retrieveImageDataURL(file, function (str) {\n       if (transferTimeout > 0) {\n         skylinkDemo.sendURLData(str, transferTimeout, cb);\n       } else {\n         skylinkDemo.sendURLData(str, cb);\n       }\n       document.getElementById(\"target-3\").src = str;\n     });\n   }\n&lt;/script&gt;\n&lt;/body&gt;"
            ],
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 1180,
            "description": "Function that sets the data transfer \"wait-for-response\" timeout.\nWhen there is not response after timeout, the data transfer will be terminated.",
            "itemtype": "method",
            "name": "_setDataChannelTimeout",
            "access": "private",
            "tagname": "",
            "since": "0.5.0",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 1226,
            "description": "Function that stops and clears the data transfer \"wait-for-response\" timeout.",
            "itemtype": "method",
            "name": "_clearDataChannelTimeout",
            "access": "private",
            "tagname": "",
            "since": "0.5.0",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 1244,
            "description": "Function that starts a data transfer to Peer.\nThis will open a new data type of Datachannel connection with Peer if\n  simultaneous data transfers is supported by Peer.",
            "itemtype": "method",
            "name": "_sendBlobDataToPeer",
            "access": "private",
            "tagname": "",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 1460,
            "description": "Function that handles the data received from Datachannel and\n  routes to the relevant data transfer protocol handler.",
            "itemtype": "method",
            "name": "_dataChannelProtocolHandler",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 1527,
            "description": "Function that handles the \"WRQ\" data transfer protocol.",
            "itemtype": "method",
            "name": "_WRQProtocolHandler",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 1581,
            "description": "Function that handles the \"ACK\" data transfer protocol.",
            "itemtype": "method",
            "name": "_ACKProtocolHandler",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 1728,
            "description": "Function that handles the \"MESSAGE\" data transfer protocol.",
            "itemtype": "method",
            "name": "_MESSAGEProtocolHandler",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 1748,
            "description": "Function that handles the \"ERROR\" data transfer protocol.",
            "itemtype": "method",
            "name": "_ERRORProtocolHandler",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 1788,
            "description": "Function that handles the \"CANCEL\" data transfer protocol.",
            "itemtype": "method",
            "name": "_CANCELProtocolHandler",
            "access": "private",
            "tagname": "",
            "since": "0.5.0",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 1867,
            "description": "Function that handles the data transfer chunk received.",
            "itemtype": "method",
            "name": "_DATAProtocolHandler",
            "access": "private",
            "tagname": "",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/data-transfer.js",
            "line": 2092,
            "description": "Function that start the data transfer with the list of targeted Peer IDs provided.\nAt this stage, it will open a new Datachannel connection if simultaneous data transfers is\n  supported by Peer, or it will using the messaging type Datachannel connection.\nNote that 1 data transfer can occur at a time in 1 Datachannel connection.",
            "itemtype": "method",
            "name": "_startDataTransfer",
            "access": "private",
            "tagname": "",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/ice-candidate.js",
            "line": 1,
            "description": "<blockquote class=\"info\">\n  Learn more about how ICE works in this\n  <a href=\"https://temasys.com.sg/ice-what-is-this-sorcery/\">article here</a>.\n</blockquote>\nThe list of Peer connection ICE gathering states.",
            "itemtype": "attribute",
            "name": "CANDIDATE_GENERATION_STATE",
            "params": [
                {
                    "name": "GATHERING",
                    "description": "<small>Value <code>\"gathering\"</code></small>\n  The value of the state when Peer connection is gathering ICE candidates.\n  <small>These ICE candidates are sent to Peer for its connection to check for a suitable matching\n  pair of ICE candidates to establish an ICE connection for stream audio, video and data.\n  See <a href=\"#event_iceConnectionState\"><code>iceConnectionState</code> event</a> for ICE connection status.</small>\n  <small>This state cannot happen until Peer connection remote <code>\"offer\"</code> / <code>\"answer\"</code>\n  session description is set. See <a href=\"#event_peerConnectionState\">\n  <code>peerConnectionState</code> event</a> for session description exchanging status.</small>",
                    "type": "String"
                },
                {
                    "name": "COMPLETED",
                    "description": "<small>Value <code>\"completed\"</code></small>\n  The value of the state when Peer connection gathering of ICE candidates has completed.",
                    "type": "String"
                }
            ],
            "type": "JSON",
            "readonly": "",
            "since": "0.4.1",
            "class": "Skylink"
        },
        {
            "file": "source/ice-candidate.js",
            "line": 29,
            "description": "Stores the list of buffered ICE candidates that is received before\n  remote session description is received and set.",
            "itemtype": "attribute",
            "name": "_peerCandidatesQueue",
            "params": [
                {
                    "name": "<#peerId>",
                    "description": "The list of the Peer connection buffered ICE candidates received.",
                    "type": "Array",
                    "props": [
                        {
                            "name": "<#index>",
                            "description": "The Peer connection buffered ICE candidate received.",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.5.1",
            "class": "Skylink"
        },
        {
            "file": "source/ice-candidate.js",
            "line": 42,
            "description": "Stores the list of Peer connection ICE candidates.",
            "itemtype": "attribute",
            "name": "_gatheredCandidates",
            "params": [
                {
                    "name": "<#peerId>",
                    "description": "The list of the Peer connection ICE candidates.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "sending",
                            "description": "The list of the Peer connection ICE candidates sent.",
                            "type": "JSON"
                        },
                        {
                            "name": "receiving",
                            "description": "The list of the Peer connection ICE candidates received.",
                            "type": "JSON"
                        }
                    ]
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.14",
            "class": "Skylink"
        },
        {
            "file": "source/ice-candidate.js",
            "line": 55,
            "description": "Function that handles the Peer connection gathered ICE candidate to be sent.",
            "itemtype": "method",
            "name": "_onIceCandidate",
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/ice-candidate.js",
            "line": 156,
            "description": "Function that buffers the Peer connection ICE candidate when received\n  before remote session description is received and set.",
            "itemtype": "method",
            "name": "_addIceCandidateToQueue",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/ice-candidate.js",
            "line": 172,
            "description": "Function that handles when the Peer connection received ICE candidate\n  has been added or processed successfully.\nSeparated in a function to prevent jshint errors.",
            "itemtype": "method",
            "name": "_onAddIceCandidateSuccess",
            "access": "private",
            "tagname": "",
            "since": "0.5.9",
            "class": "Skylink"
        },
        {
            "file": "source/ice-candidate.js",
            "line": 185,
            "description": "Function that handles when the Peer connection received ICE candidate\n  has failed adding or processing.\nSeparated in a function to prevent jshint errors.",
            "itemtype": "method",
            "name": "_onAddIceCandidateFailure",
            "access": "private",
            "tagname": "",
            "since": "0.5.9",
            "class": "Skylink"
        },
        {
            "file": "source/ice-candidate.js",
            "line": 198,
            "description": "Function that adds all the Peer connection buffered ICE candidates received.\nThis should be called only after the remote session description is received and set.",
            "itemtype": "method",
            "name": "_addIceCandidateFromQueue",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/ice-connection.js",
            "line": 1,
            "description": "<blockquote class=\"info\">\n  Learn more about how ICE works in this\n  <a href=\"https://temasys.com.sg/ice-what-is-this-sorcery/\">article here</a>.\n</blockquote>\nThe list of Peer connection ICE connection states.",
            "itemtype": "attribute",
            "name": "ICE_CONNECTION_STATE",
            "params": [
                {
                    "name": "CHECKING",
                    "description": "<small>Value <code>\"checking\"</code></small>\n  The value of the state when Peer connection is checking for a suitable matching pair of\n  ICE candidates to establish ICE connection.\n  <small>ICE candidates are exchanged from <a href=\"#event_candidateGenerationState\">\n  <code>candidateGenerationState</code> event</a>.</small>",
                    "type": "String"
                },
                {
                    "name": "CONNECTED",
                    "description": "<small>Value <code>\"connected\"</code></small>\n  The value of the state when Peer connection has found a suitable matching pair of\n  ICE candidates to establish ICE connection but is still checking for a better\n  suitable matching pair of ICE candidates for the best ICE connectivity.\n  <small>At this state, ICE connection is already established and audio, video and\n  data streaming has already started.</small>",
                    "type": "String"
                },
                {
                    "name": "COMPLETED",
                    "description": "<small>Value <code>\"completed\"</code></small>\n  The value of the state when Peer connection has found the best suitable matching pair\n  of ICE candidates to establish ICE connection and checking has stopped.\n  <small>At this state, ICE connection is already established and audio, video and\n  data streaming has already started. This may happpen after <code>CONNECTED</code>.</small>",
                    "type": "String"
                },
                {
                    "name": "FAILED",
                    "description": "<small>Value <code>\"failed\"</code></small>\n  The value of the state when Peer connection ICE connection has failed.",
                    "type": "String"
                },
                {
                    "name": "DISCONNECTED",
                    "description": "<small>Value <code>\"disconnected\"</code></small>\n  The value of the state when Peer connection ICE connection is disconnected.\n  <small>At this state, the Peer connection may attempt to revive the ICE connection.\n  This may happen due to flaky network conditions.</small>",
                    "type": "String"
                },
                {
                    "name": "CLOSED",
                    "description": "<small>Value <code>\"closed\"</code></small>\n  The value of the state when Peer connection ICE connection has closed.\n  <small>This happens when Peer connection is closed and no streaming can occur at this stage.</small>",
                    "type": "String"
                },
                {
                    "name": "TRICKLE_FAILED",
                    "description": "<small>Value <code>\"trickeFailed\"</code></small>\n  The value of the state when Peer connection ICE connection has failed during trickle ICE.\n  <small>Trickle ICE is enabled in <a href=\"#method_init\"><code>init()</code> method</a>\n  <code>enableIceTrickle</code> option.</small>",
                    "type": "String"
                }
            ],
            "type": "JSON",
            "readonly": "",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/ice-connection.js",
            "line": 53,
            "description": "<blockquote class=\"info\">\n  Note that configuring the protocol may not necessarily result in the desired network transports protocol\n  used in the actual TURN network traffic as it depends which protocol the browser selects and connects with.\n  This simply configures the TURN ICE server urls <code?transport=(protocol)</code> query option when constructing\n  the Peer connection. When all protocols are selected, the ICE servers urls are duplicated with all protocols.\n</blockquote>\nThe list of TURN network transport protocols options when constructing Peer connections\nconfigured in the <a href=\"#method_init\"><code>init()</code> method</a>.\n<small>Example <code>.urls</code> inital input: [<code>\"turn:server.com?transport=tcp\"</code>,\n<code>\"turn:server1.com:3478\"</code>, <code>\"turn:server.com?transport=udp\"</code>]</small>",
            "itemtype": "attribute",
            "name": "TURN_TRANSPORT",
            "params": [
                {
                    "name": "TCP",
                    "description": "<small>Value  <code>\"tcp\"</code></small>\n  The value of the option to configure using only TCP network transport protocol.\n  <small>Example <code>.urls</code> output: [<code>\"turn:server.com?transport=tcp\"</code>,\n  <code>\"turn:server1.com:3478?transport=tcp\"</code>]</small>",
                    "type": "String"
                },
                {
                    "name": "UDP",
                    "description": "<small>Value  <code>\"udp\"</code></small>\n  The value of the option to configure using only UDP network transport protocol.\n  <small>Example <code>.urls</code> output: [<code>\"turn:server.com?transport=udp\"</code>,\n  <code>\"turn:server1.com:3478?transport=udp\"</code>]</small>",
                    "type": "String"
                },
                {
                    "name": "ANY",
                    "description": "<small>Value  <code>\"any\"</code></small>\n  The value of the option to configure using any network transport protocols configured from the Signaling server.\n  <small>Example <code>.urls</code> output: [<code>\"turn:server.com?transport=tcp\"</code>,\n  <code>\"turn:server1.com:3478\"</code>, <code>\"turn:server.com?transport=udp\"</code>]</small>",
                    "type": "String"
                },
                {
                    "name": "NONE",
                    "description": "<small>Value <code>\"none\"</code></small>\n  The value of the option to not configure using any network transport protocols.\n  <small>Example <code>.urls</code> output: [<code>\"turn:server.com\"</code>, <code>\"turn:server1.com:3478\"</code>]</small>\n  <small>Configuring this does not mean that no protocols will be used, but\n  rather removing <code>?transport=(protocol)</code> query option in\n  the TURN ICE server <code>.urls</code> when constructing the Peer connection.</small>",
                    "type": "String"
                },
                {
                    "name": "ALL",
                    "description": "<small>Value  <code>\"all\"</code></small>\n  The value of the option to configure using both TCP and UDP network transport protocols.\n  <small>Example <code>.urls</code> output: [<code>\"turn:server.com?transport=tcp\"</code>,\n  <code>\"turn:server.com?transport=udp\"</code>, <code>\"turn:server1.com:3478?transport=tcp\"</code>,\n  <code>\"turn:server1.com:3478?transport=udp\"</code>]</small>",
                    "type": "String"
                }
            ],
            "type": "JSON",
            "readonly": "",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/ice-connection.js",
            "line": 101,
            "description": "Stores the flag that indicates if Peer connections should trickle ICE.",
            "itemtype": "attribute",
            "name": "_enableIceTrickle",
            "type": "Boolean",
            "default": "true",
            "access": "private",
            "tagname": "",
            "since": "0.3.0",
            "class": "Skylink"
        },
        {
            "file": "source/ice-connection.js",
            "line": 112,
            "description": "Stores the flag that indicates if STUN ICE servers should be used when constructing Peer connection.",
            "itemtype": "attribute",
            "name": "_enableSTUN",
            "type": "Boolean",
            "default": "true",
            "access": "private",
            "tagname": "",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/ice-connection.js",
            "line": 123,
            "description": "Stores the flag that indicates if TURN ICE servers should be used when constructing Peer connection.",
            "itemtype": "attribute",
            "name": "_enableTURN",
            "type": "Boolean",
            "default": "true",
            "access": "private",
            "tagname": "",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/ice-connection.js",
            "line": 134,
            "description": "Stores the flag that indicates if public STUN ICE servers should be used when constructing Peer connection.",
            "itemtype": "attribute",
            "name": "_usePublicSTUN",
            "type": "Boolean",
            "default": "true",
            "access": "private",
            "tagname": "",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/ice-connection.js",
            "line": 145,
            "description": "Stores the option for the TURN protocols to use.\nThis should configure the TURN ICE servers urls <code>?transport=protocol</code> flag.",
            "itemtype": "attribute",
            "name": "_TURNTransport",
            "type": "String",
            "default": "\"any\"",
            "access": "private",
            "tagname": "",
            "required": 1,
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/ice-connection.js",
            "line": 158,
            "description": "Stores the list of Peer connections ICE failures counter.",
            "itemtype": "attribute",
            "name": "_ICEConnectionFailures",
            "params": [
                {
                    "name": "<#peerId>",
                    "description": "The Peer connection ICE failures counter.",
                    "type": "Number"
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.5.8",
            "class": "Skylink"
        },
        {
            "file": "source/ice-connection.js",
            "line": 169,
            "description": "Function that filters and configures the ICE servers received from Signaling\n  based on the <code>init()</code> configuration and returns the updated\n  list of ICE servers to be used when constructing Peer connection.",
            "itemtype": "method",
            "name": "_setIceServers",
            "access": "private",
            "tagname": "",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/peer-connection.js",
            "line": 1,
            "description": "<blockquote class=\"info\">\n  Learn more about how ICE works in this\n  <a href=\"https://temasys.com.sg/ice-what-is-this-sorcery/\">article here</a>.\n</blockquote>\nThe list of Peer connection session description exchanging states.",
            "itemtype": "attribute",
            "name": "PEER_CONNECTION_STATE",
            "params": [
                {
                    "name": "STABLE",
                    "description": "<small>Value <code>\"stable\"</code></small>\n  The value of the state when there is no session description being exchanged between Peer connection.",
                    "type": "String"
                },
                {
                    "name": "HAVE_LOCAL_OFFER",
                    "description": "<small>Value <code>\"have-local-offer\"</code></small>\n  The value of the state when local <code>\"offer\"</code> session description is set.\n  <small>This should transition to <code>STABLE</code> state after remote <code>\"answer\"</code>\n  session description is set.</small>\n  <small>See <a href=\"#event_handshakeProgress\"><code>handshakeProgress</code> event</a> for a more\n  detailed exchanging of session description states.</small>",
                    "type": "String"
                },
                {
                    "name": "HAVE_REMOTE_OFFER",
                    "description": "<small>Value <code>\"have-remote-offer\"</code></small>\n  The value of the state when remote <code>\"offer\"</code> session description is set.\n  <small>This should transition to <code>STABLE</code> state after local <code>\"answer\"</code>\n  session description is set.</small>\n  <small>See <a href=\"#event_handshakeProgress\"><code>handshakeProgress</code> event</a> for a more\n  detailed exchanging of session description states.</small>",
                    "type": "String"
                },
                {
                    "name": "CLOSED",
                    "description": "<small>Value <code>\"closed\"</code></small>\n  The value of the state when Peer connection is closed and no session description can be exchanged and set.",
                    "type": "String"
                }
            ],
            "type": "JSON",
            "readonly": "",
            "since": "0.5.0",
            "class": "Skylink"
        },
        {
            "file": "source/peer-connection.js",
            "line": 36,
            "description": "The list of <a href=\"#method_getConnectionStatus\"><code>getConnectionStatus()</code>\nmethod</a> retrieval states.",
            "itemtype": "attribute",
            "name": "GET_CONNECTION_STATUS_STATE",
            "params": [
                {
                    "name": "RETRIEVING",
                    "description": "<small>Value <code>0</code></small>\n  The value of the state when <code>getConnectionStatus()</code> is retrieving the Peer connection stats.",
                    "type": "Number"
                },
                {
                    "name": "RETRIEVE_SUCCESS",
                    "description": "<small>Value <code>1</code></small>\n  The value of the state when <code>getConnectionStatus()</code> has retrieved the Peer connection stats successfully.",
                    "type": "Number"
                },
                {
                    "name": "RETRIEVE_ERROR",
                    "description": "<small>Value <code>-1</code></small>\n  The value of the state when <code>getConnectionStatus()</code> has failed retrieving the Peer connection stats.",
                    "type": "Number"
                }
            ],
            "type": "JSON",
            "readonly": "",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/peer-connection.js",
            "line": 57,
            "description": "<blockquote class=\"info\">\n As there are more features getting implemented, there will be eventually more different types of\n server Peers.\n</blockquote>\nThe list of available types of server Peer connections.",
            "itemtype": "attribute",
            "name": "SERVER_PEER_TYPE",
            "params": [
                {
                    "name": "MCU",
                    "description": "<small>Value <code>\"mcu\"</code></small>\n  The value of the server Peer type that is used for MCU connection.",
                    "type": "String"
                }
            ],
            "type": "JSON",
            "readonly": "",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/peer-connection.js",
            "line": 76,
            "description": "Stores the restart initiated timestamp to throttle the <code>refreshConnection</code> functionality.",
            "itemtype": "attribute",
            "name": "_lastRestart",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "since": "0.5.9",
            "class": "Skylink"
        },
        {
            "file": "source/peer-connection.js",
            "line": 86,
            "description": "Stores the global number of Peer connection retries that would increase the wait-for-response timeout\n  for the Peer connection health timer.",
            "itemtype": "attribute",
            "name": "_retryCount",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "since": "0.5.10",
            "class": "Skylink"
        },
        {
            "file": "source/peer-connection.js",
            "line": 97,
            "description": "Stores the list of the Peer connections.",
            "itemtype": "attribute",
            "name": "_peerConnections",
            "params": [
                {
                    "name": "<#peerId>",
                    "description": "The Peer connection.",
                    "type": "Object"
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/peer-connection.js",
            "line": 108,
            "description": "<blockquote class=\"info\">\n  For MCU enabled Peer connections, the restart functionality may differ, you may learn more about how to workaround\n  it <a href=\"http://support.temasys.com.sg/support/discussions/topics/12000002853\">in this article here</a>.<br>\n  For restarts with Peers connecting from Android or iOS SDKs, restarts might not work as written in\n  <a href=\"http://support.temasys.com.sg/support/discussions/topics/12000005188\">in this article here</a>.<br>\n  Note that this functionality should be used when Peer connection stream freezes during a connection,\n  and is throttled when invoked many times in less than 3 seconds interval.\n</blockquote>\nFunction that refreshes Peer connections to update with the current streaming.",
            "itemtype": "method",
            "name": "refreshConnection",
            "params": [
                {
                    "name": "targetPeerId",
                    "description": "The target Peer ID to refresh connection with.\n- When provided as an Array, it will refresh all connections with all the Peer IDs provided.\n- When not provided, it will refresh all the currently connected Peers in the Room.",
                    "type": "String|Array",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "The callback function fired when request has completed.\n  <small>Function parameters signature is <code>function (error, success)</code></small>\n  <small>Function request completion is determined by the <a href=\"#event_peerRestart\">\n  <code>peerRestart</code> event</a> triggering <code>isSelfInitiateRestart</code> parameter payload\n  value as <code>true</code> for all Peers targeted for request success.</small>",
                    "type": "Function",
                    "optional": true,
                    "props": [
                        {
                            "name": "error",
                            "description": "The error result in request.\n  <small>Defined as <code>null</code> when there are no errors in request</small>",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "listOfPeers",
                                    "description": "The list of Peer IDs targeted.",
                                    "type": "Array"
                                },
                                {
                                    "name": "refreshErrors",
                                    "description": "The list of Peer connection refresh errors.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "refreshErrors.#peerId",
                                    "description": "The Peer connection refresh error associated\n  with the Peer ID defined in <code>#peerId</code> property.\n  <small>If <code>#peerId</code> value is <code>\"self\"</code>, it means that it is the error when there\n  is no Peer connections to refresh with.</small>",
                                    "type": "Error|String"
                                }
                            ]
                        },
                        {
                            "name": "success",
                            "description": "The success result in request.\n  <small>Defined as <code>null</code> when there are errors in request</small>",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "listOfPeers",
                                    "description": "The list of Peer IDs targeted.",
                                    "type": "Array"
                                }
                            ]
                        }
                    ]
                }
            ],
            "trigger": "<b class=\"desc-seq-header\">&#8594; For Peer connections without MCU enabled:</b>\n  <ol class=\"desc-seq\"><li><a href=\"#event_peerRestart\"><code>peerRestart</code> event</a> triggers parameter\n  payload <code>isSelfInitiateRestart</code> as <code>true</code> for all targeted Peer connections.</li></ol>\n  <b class=\"desc-seq-header\">&#8594; For Peer connections with MCU enabled:</b> <ol class=\"desc-seq\">\n  <li><ol><li><a href=\"#event_peerRestart\"><code>peerRestart</code> event</a> triggers parameter\n  payload <code>isSelfInitiateRestart</code> as <code>true</code> for all targeted Peer connections.</li>\n  <li><a href=\"#event_serverPeerRestart\"><code>serverPeerRestart</code> event</a> triggers parameter\n  payload <code>serverPeerType</code> as <code>MCU</code>.</li></ol></li>\n  <li>Invokes <a href=\"#method_joinRoom\"><code>joinRoom()</code> method</a>.<small><code>refreshConnection</code>\n  will retain the User session information except the Peer ID will be a different assigned ID due to restarting\n  the Room session.</small></li></ol>",
            "example": [
                "\n  // Example 1: Refreshing a Peer connection\n  function refreshFrozenVideoStream (peerId) {\n    skylinkDemo.refreshConnection(peerId, function (error, success) {\n      if (error) return;\n      console.log(\"Refreshing connection for '\" + peerId + \"'\");\n    });\n  }\n\n  // Example 2: Refreshing a list of Peer connections\n  function refreshFrozenVideoStreamGroup (peerIdA, peerIdB) {\n    skylinkDemo.refreshConnection([peerIdA, peerIdB], function (error, success) {\n      if (error) {\n        if (error.transferErrors[peerIdA]) {\n          console.error(\"Failed refreshing connection for '\" + peerIdA + \"'\");\n        } else {\n          console.log(\"Refreshing connection for '\" + peerIdA + \"'\");\n        }\n        if (error.transferErrors[peerIdB]) {\n          console.error(\"Failed refreshing connection for '\" + peerIdB + \"'\");\n        } else {\n          console.log(\"Refreshing connection for '\" + peerIdB + \"'\");\n        }\n      } else {\n        console.log(\"Refreshing connection for '\" + peerIdA + \"' and '\" + peerIdB + \"'\");\n      }\n    });\n  }\n\n  // Example 3: Refreshing all Peer connections\n  function refreshFrozenVideoStreamAll () {\n    skylinkDemo.refreshConnection(function (error, success) {\n      if (error) {\n        for (var i = 0; i < error.listOfPeers.length; i++) {\n          if (error.refreshErrors[error.listOfPeers[i]]) {\n            console.error(\"Failed refreshing connection for '\" + error.listOfPeers[i] + \"'\");\n          } else {\n            console.info(\"Refreshing connection for '\" + error.listOfPeers[i] + \"'\");\n          }\n        }\n      } else {\n        console.log(\"Refreshing connection for all Peers\", success.listOfPeers);\n      }\n    });\n  }"
            ],
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/peer-connection.js",
            "line": 317,
            "description": "Function that retrieves Peer connection bandwidth and ICE connection stats.",
            "itemtype": "method",
            "name": "getConnectionStatus",
            "params": [
                {
                    "name": "targetPeerId",
                    "description": "The target Peer ID to retrieve connection stats from.\n- When provided as an Array, it will retrieve all connection stats from all the Peer IDs provided.\n- When not provided, it will retrieve all connection stats from the currently connected Peers in the Room.",
                    "type": "String|Array",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "The callback function fired when request has completed.\n  <small>Function parameters signature is <code>function (error, success)</code></small>\n  <small>Function request completion is determined by the <a href=\"#event_getConnectionStatusStateChange\">\n  <code>getConnectionStatusStateChange</code> event</a> triggering <code>state</code> parameter payload\n  value as <code>RETRIEVE_SUCCESS</code> for all Peers targeted for request success.</small>\n  [Rel: Skylink.GET_CONNECTION_STATUS_STATE]",
                    "type": "Function",
                    "optional": true,
                    "props": [
                        {
                            "name": "error",
                            "description": "The error result in request.\n  <small>Defined as <code>null</code> when there are no errors in request</small>",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "listOfPeers",
                                    "description": "The list of Peer IDs targeted.",
                                    "type": "Array"
                                },
                                {
                                    "name": "retrievalErrors",
                                    "description": "The list of Peer connection stats retrieval errors.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "retrievalErrors.#peerId",
                                    "description": "The Peer connection stats retrieval error associated\n  with the Peer ID defined in <code>#peerId</code> property.\n  <small>If <code>#peerId</code> value is <code>\"self\"</code>, it means that it is the error when there\n  are no Peer connections to refresh with.</small>",
                                    "type": "Error|String"
                                },
                                {
                                    "name": "connectionStats",
                                    "description": "The list of Peer connection stats.\n  <small>These are the Peer connection stats that has been managed to be successfully retrieved.</small>",
                                    "type": "JSON"
                                },
                                {
                                    "name": "connectionStats.#peerId",
                                    "description": "The Peer connection stats associated with\n  the Peer ID defined in <code>#peerId</code> property.\n  <small>Object signature matches the <code>stats</code> parameter payload received in the\n  <a href=\"#event_getConnectionStatusStateChange\"><code>getConnectionStatusStateChange</code> event</a>.</small>",
                                    "type": "JSON"
                                }
                            ]
                        },
                        {
                            "name": "success",
                            "description": "The success result in request.\n  <small>Defined as <code>null</code> when there are errors in request</small>",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "listOfPeers",
                                    "description": "The list of Peer IDs targeted.",
                                    "type": "Array"
                                },
                                {
                                    "name": "connectionStats",
                                    "description": "The list of Peer connection stats.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "connectionStats.#peerId",
                                    "description": "The Peer connection stats associated with\n  the Peer ID defined in <code>#peerId</code> property.\n  <small>Object signature matches the <code>stats</code> parameter payload received in the\n  <a href=\"#event_getConnectionStatusStateChange\"><code>getConnectionStatusStateChange</code> event</a>.</small>",
                                    "type": "JSON"
                                }
                            ]
                        }
                    ]
                }
            ],
            "trigger": "<ol class=\"desc-seq\">\n  <li><a href=\"#event_getConnectionStatusStateChange\"><code>getConnectionStatusStateChange</code> event</a>\n  triggers parameter payload <code>state</code> value as <code>RETRIEVING</code>.</li>\n  <li><ol><li>When retrieval of Peer connection stats is successful, <a href=\"#event_getConnectionStatusStateChange\">\n  <code>getConnectionStatusStateChange</code> event</a> triggers parameter payload\n  <code>state</code> value as <code>RETRIEVE_SUCCESS</code>.</li>\n  <li>When retrieval of Peer connection stats had failed, <a href=\"#event_getConnectionStatusStateChange\">\n  <code>getConnectionStatusStateChange</code> event</a> triggers parameter payload\n  <code>state</code> value as <code>RETRIEVE_ERROR</code>.</li></ol></li></ol>",
            "example": [
                "\n  // Example 1: Retrieve a Peer connection stats\n  function startBWStatsInterval (peerId) {\n    setInterval(function () {\n      skylinkDemo.getConnectionStatus(peerId, function (error, success) {\n        if (error) return;\n        var sendVideoBytes  = success.connectionStats[peerId].video.sending.bytes;\n        var sendAudioBytes  = success.connectionStats[peerId].audio.sending.bytes;\n        var recvVideoBytes  = success.connectionStats[peerId].video.receiving.bytes;\n        var recvAudioBytes  = success.connectionStats[peerId].audio.receiving.bytes;\n        var localCandidate  = success.connectionStats[peerId].selectedCandidate.local;\n        var remoteCandidate = success.connectionStats[peerId].selectedCandidate.remote;\n        console.log(\"Sending audio (\" + sendAudioBytes + \"bps) video (\" + sendVideoBytes + \")\");\n        console.log(\"Receiving audio (\" + recvAudioBytes + \"bps) video (\" + recvVideoBytes + \")\");\n        console.log(\"Local candidate: \" + localCandidate.ipAddress + \":\" + localCandidate.portNumber +\n          \"?transport=\" + localCandidate.transport + \" (type: \" + localCandidate.candidateType + \")\");\n        console.log(\"Remote candidate: \" + remoteCandidate.ipAddress + \":\" + remoteCandidate.portNumber +\n          \"?transport=\" + remoteCandidate.transport + \" (type: \" + remoteCandidate.candidateType + \")\");\n      });\n    }, 1000);\n  }\n\n  // Example 2: Retrieve a list of Peer connection stats\n  function printConnStats (peerId, data) {\n    if (!data.connectionStats[peerId]) return;\n    var sendVideoBytes  = data.connectionStats[peerId].video.sending.bytes;\n    var sendAudioBytes  = data.connectionStats[peerId].audio.sending.bytes;\n    var recvVideoBytes  = data.connectionStats[peerId].video.receiving.bytes;\n    var recvAudioBytes  = data.connectionStats[peerId].audio.receiving.bytes;\n    var localCandidate  = data.connectionStats[peerId].selectedCandidate.local;\n    var remoteCandidate = data.connectionStats[peerId].selectedCandidate.remote;\n    console.log(peerId + \" - Sending audio (\" + sendAudioBytes + \"bps) video (\" + sendVideoBytes + \")\");\n    console.log(peerId + \" - Receiving audio (\" + recvAudioBytes + \"bps) video (\" + recvVideoBytes + \")\");\n    console.log(peerId + \" - Local candidate: \" + localCandidate.ipAddress + \":\" + localCandidate.portNumber +\n      \"?transport=\" + localCandidate.transport + \" (type: \" + localCandidate.candidateType + \")\");\n    console.log(peerId + \" - Remote candidate: \" + remoteCandidate.ipAddress + \":\" + remoteCandidate.portNumber +\n      \"?transport=\" + remoteCandidate.transport + \" (type: \" + remoteCandidate.candidateType + \")\");\n  }\n\n  function startBWStatsInterval (peerIdA, peerIdB) {\n    setInterval(function () {\n      skylinkDemo.getConnectionStatus([peerIdA, peerIdB], function (error, success) {\n        if (error) {\n          printConnStats(peerIdA, error.connectionStats);\n          printConnStats(peerIdB, error.connectionStats);\n        } else {\n          printConnStats(peerIdA, success.connectionStats);\n          printConnStats(peerIdB, success.connectionStats);\n        }\n      });\n    }, 1000);\n  }\n\n  // Example 3: Retrieve all Peer connection stats\n  function printConnStats (listOfPeers, data) {\n    listOfPeers.forEach(function (peerId) {\n      if (!data.connectionStats[peerId]) return;\n      var sendVideoBytes  = data.connectionStats[peerId].video.sending.bytes;\n      var sendAudioBytes  = data.connectionStats[peerId].audio.sending.bytes;\n      var recvVideoBytes  = data.connectionStats[peerId].video.receiving.bytes;\n      var recvAudioBytes  = data.connectionStats[peerId].audio.receiving.bytes;\n      var localCandidate  = data.connectionStats[peerId].selectedCandidate.local;\n      var remoteCandidate = data.connectionStats[peerId].selectedCandidate.remote;\n      console.log(peerId + \" - Sending audio (\" + sendAudioBytes + \"bps) video (\" + sendVideoBytes + \")\");\n      console.log(peerId + \" - Receiving audio (\" + recvAudioBytes + \"bps) video (\" + recvVideoBytes + \")\");\n      console.log(peerId + \" - Local candidate: \" + localCandidate.ipAddress + \":\" + localCandidate.portNumber +\n        \"?transport=\" + localCandidate.transport + \" (type: \" + localCandidate.candidateType + \")\");\n      console.log(peerId + \" - Remote candidate: \" + remoteCandidate.ipAddress + \":\" + remoteCandidate.portNumber +\n        \"?transport=\" + remoteCandidate.transport + \" (type: \" + remoteCandidate.candidateType + \")\");\n    });\n  }\n\n  function startBWStatsInterval (peerIdA, peerIdB) {\n    setInterval(function () {\n      skylinkDemo.getConnectionStatus(function (error, success) {\n        if (error) {\n          printConnStats(error.listOfPeers, error.connectionStats);\n        } else {\n          printConnStats(success.listOfPeers, success.connectionStats);\n        }\n      });\n    }, 1000);\n  }"
            ],
            "since": "0.6.14",
            "class": "Skylink"
        },
        {
            "file": "source/peer-connection.js",
            "line": 724,
            "description": "Function that starts the Peer connection session.\nRemember to remove previous method of reconnection (re-creating the Peer connection - destroy and create connection).",
            "itemtype": "method",
            "name": "_addPeer",
            "access": "private",
            "tagname": "",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/peer-connection.js",
            "line": 776,
            "description": "Function that re-negotiates a Peer connection.\nWe currently do not implement the ICE restart functionality.\nRemember to remove previous method of reconnection (re-creating the Peer connection - destroy and create connection).",
            "itemtype": "method",
            "name": "_restartPeerConnection",
            "access": "private",
            "tagname": "",
            "since": "0.5.8",
            "class": "Skylink"
        },
        {
            "file": "source/peer-connection.js",
            "line": 906,
            "description": "Function that ends the Peer connection session.",
            "itemtype": "method",
            "name": "_removePeer",
            "access": "private",
            "tagname": "",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/peer-connection.js",
            "line": 962,
            "description": "Function that creates the Peer connection.",
            "itemtype": "method",
            "name": "_createPeerConnection",
            "access": "private",
            "tagname": "",
            "since": "0.5.1",
            "class": "Skylink"
        },
        {
            "file": "source/peer-connection.js",
            "line": 1101,
            "description": "// resend if failed\nif (iceConnectionState === self.ICE_CONNECTION_STATE.FAILED) {\n  log.debug([targetMid, 'RTCIceConnectionState', null,\n    'Ice connection state failed. Re-negotiating connection']);\n  self._removePeer(targetMid);\n  self._sendChannelMessage({\n    type: self._SIG_MESSAGE_TYPE.WELCOME,\n    mid: self._user.sid,\n    rid: self._room.id,\n    agent: window.webrtcDetectedBrowser,\n    version: window.webrtcDetectedVersion,\n    userInfo: self.getPeerInfo(),\n    target: targetMid,\n    restartNego: true,\n    hsPriority: -1\n  });",
            "class": "Skylink"
        },
        {
            "file": "source/peer-connection.js",
            "line": 1164,
            "description": "Function that handles the <code>_restartPeerConnection</code> scenario\n  for MCU enabled Peer connections.\nThis is implemented currently by making the user leave and join the Room again.\nThe Peer ID will not stay the same though.",
            "itemtype": "method",
            "name": "_restartMCUConnection",
            "access": "private",
            "tagname": "",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/peer-data.js",
            "line": 1,
            "description": "Stores the list of Peers session information.",
            "itemtype": "attribute",
            "name": "_peerInformations",
            "params": [
                {
                    "name": "<#peerId>",
                    "description": "The Peer session information.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "userData",
                            "description": "The Peer custom data.",
                            "type": "JSON|String"
                        },
                        {
                            "name": "settings",
                            "description": "The Peer streaming information.",
                            "type": "JSON"
                        },
                        {
                            "name": "mediaStatus",
                            "description": "The Peer streaming muted status.",
                            "type": "JSON"
                        },
                        {
                            "name": "agent",
                            "description": "The Peer agent information.",
                            "type": "JSON"
                        }
                    ]
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.3.0",
            "class": "Skylink"
        },
        {
            "file": "source/peer-data.js",
            "line": 16,
            "description": "Stores the Signaling user credentials from the API response required for connecting to the Signaling server.",
            "itemtype": "attribute",
            "name": "_user",
            "params": [
                {
                    "name": "uid",
                    "description": "The API result \"username\".",
                    "type": "String"
                },
                {
                    "name": "token",
                    "description": "The API result \"userCred\".",
                    "type": "String"
                },
                {
                    "name": "timeStamp",
                    "description": "The API result \"timeStamp\".",
                    "type": "String"
                },
                {
                    "name": "sid",
                    "description": "The Signaling server receive user Peer ID.",
                    "type": "String"
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/peer-data.js",
            "line": 30,
            "description": "Stores the User custom data.\nBy default, if no custom user data is set, it is an empty string <code>\"\"</code>.",
            "itemtype": "attribute",
            "name": "_userData",
            "type": "JSON|String",
            "default": "\"\"",
            "access": "private",
            "tagname": "",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/peer-data.js",
            "line": 42,
            "description": "Function that overwrites the User current custom data.",
            "itemtype": "method",
            "name": "setUserData",
            "params": [
                {
                    "name": "userData",
                    "description": "The updated custom data.",
                    "type": "JSON|String"
                }
            ],
            "trigger": "<ol class=\"desc-seq\">\n  <li>If User is in Room, <a href=\"#event_peerUpdated\"><code>peerUpdated</code> event</a> triggers.</li></ol>",
            "example": [
                "\n  // Example 1: Set/Update User custom data before joinRoom()\n  var userData = \"beforejoin\";\n\n  skylinkDemo.setUserData(userData);\n\n  skylinkDemo.joinRoom(function (error, success) {\n     if (error) return;\n     if (success.peerInfo.userData === userData) {\n       console.log(\"User data is sent\");\n     }\n  });\n\n  // Example 2: Update User custom data after joinRoom()\n  var userData = \"afterjoin\";\n\n  skylinkDemo.joinRoom(function (error, success) {\n    if (error) return;\n    skylinkDemo.setUserData(userData);\n    if (skylinkDemo.getPeerInfo().userData === userData) {\n      console.log(\"User data is updated and sent\");\n    }\n  });"
            ],
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/peer-data.js",
            "line": 93,
            "description": "Function that returns the User / Peer current custom data.",
            "itemtype": "method",
            "name": "getUserData",
            "params": [
                {
                    "name": "peerId",
                    "description": "The Peer ID to return the current custom data from.\n- When not provided or that the Peer ID is does not exists, it will return\n  the User current custom data.",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "The User / Peer current custom data.",
                "type": "JSON|String"
            },
            "example": [
                "\n  // Example 1: Get Peer current custom data\n  var peerUserData = skylinkDemo.getUserData(peerId);\n\n  // Example 2: Get User current custom data\n  var userUserData = skylinkDemo.getUserData();"
            ],
            "since": "0.5.10",
            "class": "Skylink"
        },
        {
            "file": "source/peer-data.js",
            "line": 123,
            "description": "Function that returns the User / Peer current session information.",
            "itemtype": "method",
            "name": "getPeerInfo",
            "params": [
                {
                    "name": "peerId",
                    "description": "The Peer ID to return the current session information from.\n- When not provided or that the Peer ID is does not exists, it will return\n  the User current session information.",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "The User / Peer current session information.\n  <small>Object signature matches the <code>peerInfo</code> parameter payload received in the\n  <a href=\"#event_peerJoined\"><code>peerJoined</code> event</a>.</small>",
                "type": "JSON"
            },
            "example": [
                "\n  // Example 1: Get Peer current session information\n  var peerPeerInfo = skylinkDemo.getPeerInfo(peerId);\n\n  // Example 2: Get User current session information\n  var userPeerInfo = skylinkDemo.getPeerInfo();"
            ],
            "since": "0.4.0",
            "class": "Skylink"
        },
        {
            "file": "source/peer-data.js",
            "line": 193,
            "description": "Function that parses the User custom data provided.",
            "itemtype": "method",
            "name": "_parseUserData",
            "access": "private",
            "tagname": "",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/peer-handshake.js",
            "line": 1,
            "description": "The list of Peer connection states.",
            "itemtype": "attribute",
            "name": "HANDSHAKE_PROGRESS",
            "params": [
                {
                    "name": "ENTER",
                    "description": "<small>Value <code>\"enter\"</code></small>\n  The value of the connection state when Peer has just entered the Room.\n  <small>At this stage, <a href=\"#event_peerJoined\"><code>peerJoined</code> event</a>\n  is triggered.</small>",
                    "type": "String"
                },
                {
                    "name": "WELCOME",
                    "description": "<small>Value <code>\"welcome\"</code></small>\n  The value of the connection state when Peer is aware that User has entered the Room.\n  <small>At this stage, <a href=\"#event_peerJoined\"><code>peerJoined</code> event</a>\n  is triggered and Peer connection may commence.</small>",
                    "type": "String"
                },
                {
                    "name": "OFFER",
                    "description": "<small>Value <code>\"offer\"</code></small>\n  The value of the connection state when Peer connection has set the local / remote <code>\"offer\"</code>\n  session description to start streaming connection.",
                    "type": "String"
                },
                {
                    "name": "ANSWER",
                    "description": "<small>Value <code>\"answer\"</code></small>\n  The value of the connection state when Peer connection has set the local / remote <code>\"answer\"</code>\n  session description to establish streaming connection.",
                    "type": "String"
                },
                {
                    "name": "ERROR",
                    "description": "<small>Value <code>\"error\"</code></small>\n  The value of the connection state when Peer connection has failed to establish streaming connection.\n  <small>This happens when there are errors that occurs in creating local <code>\"offer\"</code> /\n  <code>\"answer\"</code>, or when setting remote / local <code>\"offer\"</code> / <code>\"answer\"</code>.</small>",
                    "type": "String"
                }
            ],
            "type": "JSON",
            "readonly": "",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/peer-handshake.js",
            "line": 35,
            "description": "Stores the list of Peer connection health timers.\nThis timers sets a timeout which checks and waits if Peer connection is successfully established,\n  or else it will attempt to re-negotiate with the Peer connection again.",
            "itemtype": "attribute",
            "name": "_peerConnectionHealthTimers",
            "params": [
                {
                    "name": "<#peerId>",
                    "description": "The Peer connection health timer.",
                    "type": "Object"
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/peer-handshake.js",
            "line": 48,
            "description": "Stores the list of Peer connection \"healthy\" flags, which indicates if Peer connection is\n  successfully established, and when the health timers expires, it will clear the timer\n  and not attempt to re-negotiate with the Peer connection again.",
            "itemtype": "attribute",
            "name": "_peerConnectionHealth",
            "params": [
                {
                    "name": "<#peerId>",
                    "description": "The flag that indicates if Peer connection has been successfully established.",
                    "type": "Boolean"
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/peer-handshake.js",
            "line": 60,
            "description": "Stores the User connection priority weight.\nIf Peer has a higher connection weight, it will do the offer from its Peer connection first.",
            "itemtype": "attribute",
            "name": "_peerPriorityWeight",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "since": "0.5.0",
            "class": "Skylink"
        },
        {
            "file": "source/peer-handshake.js",
            "line": 71,
            "description": "Function that creates the Peer connection offer session description.",
            "itemtype": "method",
            "name": "_doOffer",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/peer-handshake.js",
            "line": 169,
            "description": "Function that creates the Peer connection answer session description.\nThis comes after receiving and setting the offer session description.",
            "itemtype": "method",
            "name": "_doAnswer",
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/peer-handshake.js",
            "line": 209,
            "description": "Function that starts the Peer connection health timer.\nTo count as a \"healthy\" successful established Peer connection, the\n  ICE connection state has to be \"connected\" or \"completed\",\n  messaging Datachannel type state has to be \"opened\" (if Datachannel is enabled)\n  and Signaling state has to be \"stable\".\nShould consider dropping of counting messaging Datachannel type being opened as\n  it should not involve the actual Peer connection for media (audio/video) streaming.",
            "itemtype": "method",
            "name": "_startPeerConnectionHealthCheck",
            "access": "private",
            "tagname": "",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/peer-handshake.js",
            "line": 295,
            "description": "Function that stops the Peer connection health timer.\nThis happens when Peer connection has been successfully established or when\n  Peer leaves the Room.",
            "itemtype": "method",
            "name": "_stopPeerConnectionHealthCheck",
            "access": "private",
            "tagname": "",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/peer-handshake.js",
            "line": 320,
            "description": "Function that sets the local session description and sends to Peer.\nIf trickle ICE is disabled, the local session description will be sent after\n  ICE gathering has been completed.",
            "itemtype": "method",
            "name": "_setLocalAndSendMessage",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/peer-privileged.js",
            "line": 1,
            "description": "<blockquote class=\"info\">\n  Note that this feature requires <code>\"isPrivileged\"</code> flag to be enabled for the App Key\n  provided in the <a href=\"#method_init\"><code>init()</code> method</a>, as only Users connecting using\n  the App Key with this flag enabled (which we call privileged Users / Peers) can retrieve the list of\n  Peer IDs from Rooms within the same App space.\n  <a href=\"http://support.temasys.com.sg/support/solutions/articles/12000012342-what-is-a-privileged-key-\">\n  Read more about privileged App Key feature here</a>.\n</blockquote>\nThe list of <a href=\"#method_getPeers\"><code>getPeers()</code> method</a> retrieval states.",
            "itemtype": "attribute",
            "name": "GET_PEERS_STATE",
            "params": [
                {
                    "name": "ENQUIRED",
                    "description": "<small>Value <code>\"enquired\"</code></small>\n  The value of the state when <code>getPeers()</code> is retrieving the list of Peer IDs\n  from Rooms within the same App space from the Signaling server.",
                    "type": "String"
                },
                {
                    "name": "RECEIVED",
                    "description": "<small>Value <code>\"received\"</code></small>\n  The value of the state when <code>getPeers()</code> has retrieved the list of Peer IDs\n  from Rooms within the same App space from the Signaling server successfully.",
                    "type": "String"
                }
            ],
            "type": "JSON",
            "readonly": "",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/peer-privileged.js",
            "line": 28,
            "description": "<blockquote class=\"info\">\n  Note that this feature requires <code>\"isPrivileged\"</code> flag to be enabled and\n  <code>\"autoIntroduce\"</code> flag to be disabled for the App Key provided in the\n  <a href=\"#method_init\"><code>init()</code> method</a>, as only Users connecting using\n  the App Key with this flag enabled (which we call privileged Users / Peers) can retrieve the list of\n  Peer IDs from Rooms within the same App space.\n  <a href=\"http://support.temasys.com.sg/support/solutions/articles/12000012342-what-is-a-privileged-key-\">\n  Read more about privileged App Key feature here</a>.\n</blockquote>\nThe list of <a href=\"#method_introducePeer\"><code>introducePeer</code> method</a> Peer introduction request states.",
            "itemtype": "attribute",
            "name": "INTRODUCE_STATE",
            "params": [
                {
                    "name": "INTRODUCING",
                    "description": "<small>Value <code>\"enquired\"</code></small>\n  The value of the state when introduction request for the selected pair of Peers has been made to the Signaling server.",
                    "type": "String"
                },
                {
                    "name": "ERROR",
                    "description": "<small>Value <code>\"error\"</code></small>\n  The value of the state when introduction request made to the Signaling server\n  for the selected pair of Peers has failed.",
                    "type": "String"
                }
            ],
            "readonly": "",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/peer-privileged.js",
            "line": 54,
            "description": "Stores the flag that indicates if \"autoIntroduce\" is enabled.\nIf enabled, the Peers connecting the same Room will receive each others \"enter\" message ping.",
            "itemtype": "attribute",
            "name": "_autoIntroduce",
            "type": "Boolean",
            "default": "true",
            "access": "private",
            "tagname": "",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/peer-privileged.js",
            "line": 66,
            "description": "Stores the flag that indicates if \"isPrivileged\" is enabled.\nIf enabled, the User has Privileged features which has the ability to retrieve the list of\n  Peers in the same App space with <code>getPeers()</code> method\n  and introduce Peers to each other with <code>introducePeer</code> method.",
            "itemtype": "attribute",
            "name": "isPrivileged",
            "type": "Boolean",
            "default": "false",
            "access": "private",
            "tagname": "",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/peer-privileged.js",
            "line": 80,
            "description": "Stores the list of Peers retrieved from the Signaling from <code>getPeers()</code> method.",
            "itemtype": "attribute",
            "name": "_peerList",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/peer-privileged.js",
            "line": 90,
            "description": "<blockquote class=\"info\">\n  Note that this feature requires <code>\"isPrivileged\"</code> flag to be enabled for the App Key\n  provided in the <a href=\"#method_init\"><code>init()</code> method</a>, as only Users connecting using\n  the App Key with this flag enabled (which we call privileged Users / Peers) can retrieve the list of\n  Peer IDs from Rooms within the same App space.\n  <a href=\"http://support.temasys.com.sg/support/solutions/articles/12000012342-what-is-a-privileged-key-\">\n  Read more about privileged App Key feature here</a>.\n</blockquote>\nFunction that retrieves the list of Peer IDs from Rooms within the same App space.",
            "itemtype": "method",
            "name": "getPeers",
            "params": [
                {
                    "name": "showAll",
                    "description": "The flag if Signaling server should also return the list of privileged Peer IDs.\n<small>By default, the Signaling server does not include the list of privileged Peer IDs in the return result.</small>",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "callback",
                    "description": "The callback function fired when request has completed.\n  <small>Function parameters signature is <code>function (error, success)</code></small>\n  <small>Function request completion is determined by the <a href=\"#event_getPeersStateChange\">\n  <code>getPeersStateChange</code> event</a> triggering <code>state</code> parameter payload value as\n  <code>RECEIVED</code> for request success.</small>\n  [Rel: Skylink.GET_PEERS_STATE]",
                    "type": "Function",
                    "optional": true,
                    "props": [
                        {
                            "name": "error",
                            "description": "The error result in request.\n  <small>Defined as <code>null</code> when there are no errors in request</small>\n  <small>Object signature is the <code>getPeers()</code> error when retrieving list of Peer IDs from Rooms\n  within the same App space.</small>",
                            "type": "Error|String"
                        },
                        {
                            "name": "success",
                            "description": "The success result in request.\n  <small>Defined as <code>null</code> when there are errors in request</small>\n  <small>Object signature matches the <code>peerList</code> parameter payload received in the\n  <a href=\"#event_getPeersStateChange\"><code>getPeersStateChange</code> event</a>.</small>",
                            "type": "JSON"
                        }
                    ]
                }
            ],
            "trigger": "<ol class=\"desc-seq\">\n  <li><a href=\"#event_getPeersStateChange\"><code>getPeersStateChange</code> event</a> triggers parameter\n  payload <code>state</code> value as <code>ENQUIRED</code>.</li><li><ol>\n  <li>When retrieval of the list of Peer IDs from Rooms within the same App space is successful,\n  <a href=\"#event_getPeersStateChange\"><code>getPeersStateChange</code> event</a> triggers parameter\n  payload <code>state</code> value as <code>RECEIVED</code>.</li></ol></li></ol>",
            "example": [
                "\n  // Example 1: Retrieving the un-privileged Peers\n  skylinkDemo.joinRoom(function (jRError, jRSuccess) {\n    if (jRError) return;\n    skylinkDemo.getPeers(function (error, success) {\n       if (error) return;\n       console.log(\"The list of only un-privileged Peers in the same App space ->\", success);\n    });\n  });\n\n  // Example 2: Retrieving the all Peers (privileged or un-privileged)\n  skylinkDemo.joinRoom(function (jRError, jRSuccess) {\n    if (jRError) return;\n    skylinkDemo.getPeers(true, function (error, success) {\n       if (error) return;\n       console.log(\"The list of all Peers in the same App space ->\", success);\n    });\n  });"
            ],
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/peer-privileged.js",
            "line": 180,
            "description": "<blockquote class=\"info\">\n  Note that this feature requires <code>\"isPrivileged\"</code> flag to be enabled and\n  <code>\"autoIntroduce\"</code> flag to be disabled for the App Key provided in the\n  <a href=\"#method_init\"><code>init()</code> method</a>, as only Users connecting using\n  the App Key with this flag enabled (which we call privileged Users / Peers) can retrieve the list of\n  Peer IDs from Rooms within the same App space.\n  <a href=\"http://support.temasys.com.sg/support/solutions/articles/12000012342-what-is-a-privileged-key-\">\n  Read more about privileged App Key feature here</a>.\n</blockquote>\nFunction that selects and introduces a pair of Peers to start connection with each other.",
            "itemtype": "method",
            "name": "introducePeer",
            "params": [
                {
                    "name": "sendingPeerId",
                    "description": "The Peer ID to be connected with <code>receivingPeerId</code>.",
                    "type": "String"
                },
                {
                    "name": "receivingPeerId",
                    "description": "The Peer ID to be connected with <code>sendingPeerId</code>.",
                    "type": "String"
                }
            ],
            "trigger": "<ol class=\"desc-seq\"><li><ol>\n  <li>When introduction request for the selected pair of Peers has been made to the Signaling server,\n  <a href=\"#event_introduceStateChange\"><code>introduceStateChange</code> event</a> triggers parameter\n  payload <code>state</code> value as <code>INTRODUCING</code>.</li>\n  <li>When introduction request made for the selected pair of Peers to the Signaling server has failed,\n  <a href=\"#event_introduceStateChange\"><code>introduceStateChange</code> event</a> triggers parameter\n  payload <code>state</code> value as <code>ERROR</code>.</li></ol></li></ol>",
            "example": [
                "\n  // Example 1: Introduce a pair of Peers\n  skylinkDemo.on(\"introduceStateChange\", function (state, privilegedPeerId, sendingPeerId, receivingPeerId) {\n\t   if (state === skylinkDemo.INTRODUCE_STATE.INTRODUCING) {\n      console.log(\"Peer '\" + sendingPeerId + \"' has been introduced to '\" + receivingPeerId + \"'\");\n    }\n  });\n\n  skylinkDemo.joinRoom(function (jRError, jRSuccess) {\n    if (jRError) return;\n    skylinkDemo.getPeers(function (gPError, gPSuccess) {\n       if (gPError) return;\n       skylinkDemo.introducePeer(gPSuccess.roomName[0], gPSuccess.roomName[1]);\n    });\n  });"
            ],
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/room-connection.js",
            "line": 1,
            "description": "The list of Signaling server reaction states during <a href=\"#method_joinRoom\"><code>joinRoom()</code> method</a>.",
            "itemtype": "attribute",
            "name": "SYSTEM_ACTION",
            "params": [
                {
                    "name": "WARNING",
                    "description": "<small>Value <code>\"warning\"</code></small>\n  The value of the state when Room session is about to end.",
                    "type": "String"
                },
                {
                    "name": "REJECT",
                    "description": "<small>Value <code>\"reject\"</code></small>\n  The value of the state when Room session has failed to start or has ended.",
                    "type": "String"
                }
            ],
            "type": "JSON",
            "readonly": "",
            "since": "0.5.1",
            "class": "Skylink"
        },
        {
            "file": "source/room-connection.js",
            "line": 18,
            "description": "The list of Signaling server reaction states reason of action code during\n<a href=\"#method_joinRoom\"><code>joinRoom()</code> method</a>.",
            "itemtype": "attribute",
            "name": "SYSTEM_ACTION_REASON",
            "params": [
                {
                    "name": "CREDENTIALS_EXPIRED",
                    "description": "<small>Value <code>\"oldTimeStamp\"</code></small>\n  The value of the reason code when Room session token has expired.\n  <small>Happens during <a href=\"#method_joinRoom\"><code>joinRoom()</code> method</a> request.</small>\n  <small>Results with: <code>REJECT</code></small>",
                    "type": "String"
                },
                {
                    "name": "CREDENTIALS_ERROR",
                    "description": "<small>Value <code>\"credentialError\"</code></small>\n  The value of the reason code when Room session token provided is invalid.\n  <small>Happens during <a href=\"#method_joinRoom\"><code>joinRoom()</code> method</a> request.</small>",
                    "type": "String"
                },
                {
                    "name": "DUPLICATED_LOGIN",
                    "description": "<small>Value <code>\"duplicatedLogin\"</code></small>\n  The value of the reason code when Room session token has been used already.\n  <small>Happens during <a href=\"#method_joinRoom\"><code>joinRoom()</code> method</a> request.</small>\n  <small>Results with: <code>REJECT</code></small>",
                    "type": "String"
                },
                {
                    "name": "ROOM_NOT_STARTED",
                    "description": "<small>Value <code>\"notStart\"</code></small>\n  The value of the reason code when Room session has not started.\n  <small>Happens during <a href=\"#method_joinRoom\"><code>joinRoom()</code> method</a> request.</small>\n  <small>Results with: <code>REJECT</code></small>",
                    "type": "String"
                },
                {
                    "name": "EXPIRED",
                    "description": "<small>Value <code>\"expired\"</code></small>\n  The value of the reason code when Room session has ended already.\n  <small>Happens during <a href=\"#method_joinRoom\"><code>joinRoom()</code> method</a> request.</small>\n  <small>Results with: <code>REJECT</code></small>",
                    "type": "String"
                },
                {
                    "name": "ROOM_LOCKED",
                    "description": "<small>Value <code>\"locked\"</code></small>\n  The value of the reason code when Room is locked.\n  <small>Happens during <a href=\"#method_joinRoom\"><code>joinRoom()</code> method</a> request.</small>\n  <small>Results with: <code>REJECT</code></small>",
                    "type": "String"
                },
                {
                    "name": "FAST_MESSAGE",
                    "description": "<small>Value <code>\"fastmsg\"</code></small>\n   The value of the reason code when User is flooding socket messages to the Signaling server\n   that is sent too quickly within less than a second interval.\n   <small>Happens after Room session has started. This can be caused by various methods like\n   <a href=\"#method_sendMessage\"><code>sendMessage()</code> method</a>,\n   <a href=\"#method_setUserData\"><code>setUserData()</code> method</a>,\n   <a href=\"#method_muteStream\"><code>muteStream()</code> method</a>,\n   <a href=\"#method_enableAudio\"><code>enableAudio()</code> method</a>,\n   <a href=\"#method_enableVideo\"><code>enableVideo()</code> method</a>,\n   <a href=\"#method_disableAudio\"><code>disableAudio()</code> method</a> and\n   <a href=\"#method_disableVideo\"><code>disableVideo()</code> method</a></small>\n   <small>Results with: <code>WARNING</code></small>",
                    "type": "String"
                },
                {
                    "name": "ROOM_CLOSING",
                    "description": "<small>Value <code>\"toClose\"</code></small>\n   The value of the reason code when Room session is ending.\n   <small>Happens after Room session has started. This serves as a prerequisite warning before\n   <code>ROOM_CLOSED</code> occurs.</small>\n   <small>Results with: <code>WARNING</code></small>",
                    "type": "String"
                },
                {
                    "name": "ROOM_CLOSED",
                    "description": "<small>Value <code>\"roomclose\"</code></small>\n   The value of the reason code when Room session has just ended.\n   <small>Happens after Room session has started.</small>\n   <small>Results with: <code>REJECT</code></small>",
                    "type": "String"
                },
                {
                    "name": "SERVER_ERROR",
                    "description": "<small>Value <code>\"serverError\"</code></small>\n   The value of the reason code when Room session fails to start due to some technical errors.\n   <small>Happens during <a href=\"#method_joinRoom\"><code>joinRoom()</code> method</a> request.</small>\n   <small>Results with: <code>REJECT</code></small>",
                    "type": "String"
                },
                {
                    "name": "KEY_ERROR",
                    "description": "<small>Value <code>\"keyFailed\"</code></small>\n   The value of the reason code when Room session fails to start due to some technical error pertaining to\n   App Key initialization.\n   <small>Happens during <a href=\"#method_joinRoom\"><code>joinRoom()</code> method</a> request.</small>\n   <small>Results with: <code>REJECT</code></small>",
                    "type": "String"
                }
            ],
            "type": "JSON",
            "readonly": "",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/room-connection.js",
            "line": 94,
            "description": "Stores the current Room name that User is connected to.",
            "itemtype": "attribute",
            "name": "_selectedRoom",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.3.0",
            "class": "Skylink"
        },
        {
            "file": "source/room-connection.js",
            "line": 104,
            "description": "Stores the flag that indicates if Room is locked.",
            "itemtype": "attribute",
            "name": "_roomLocked",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/room-connection.js",
            "line": 114,
            "description": "Stores the flag that indicates if User is connected to the Room.",
            "itemtype": "attribute",
            "name": "_inRoom",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "since": "0.4.0",
            "class": "Skylink"
        },
        {
            "file": "source/room-connection.js",
            "line": 124,
            "description": "Function that starts the Room session.",
            "itemtype": "method",
            "name": "joinRoom",
            "params": [
                {
                    "name": "room",
                    "description": "The Room name.\n- When not provided, its value is the <code>options.defaultRoom</code> provided in the\n  <a href=\"#method_init\"><code>init()</code> method</a>.\n  <small>Note that if you are using credentials based authentication, you cannot switch the Room\n  that is not the same as the <code>options.defaultRoom</code> defined in the\n  <a href=\"#method_init\"><code>init()</code> method</a>.</small>",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "options",
                    "description": "The Room session configuration options.",
                    "type": "JSON",
                    "optional": true,
                    "props": [
                        {
                            "name": "userData",
                            "description": "The User custom data.\n  <small>This can be set after Room session has started using the\n  <a href=\"#method_setUserData\"><code>setUserData()</code> method</a>.</small>",
                            "type": "JSON|String",
                            "optional": true
                        },
                        {
                            "name": "audio",
                            "description": "The <a href=\"#method_getUserMedia\"><code>getUserMedia()</code>\n  method</a> <code>options.audio</code> parameter settings.\n  <small>When value is defined as <code>true</code> or an object, <a href=\"#method_getUserMedia\">\n  <code>getUserMedia()</code> method</a> to be invoked to retrieve new Stream. If\n  <code>options.video</code> is not defined, it will be defined as <code>false</code>.</small>\n  <small>Object signature matches the <code>options.audio</code> parameter in the\n  <a href=\"#method_getUserMedia\"><code>getUserMedia()</code> method</a>.</small>",
                            "type": "Boolean|JSON",
                            "optional": true
                        },
                        {
                            "name": "video",
                            "description": "The <a href=\"#method_getUserMedia\"><code>getUserMedia()</code>\n  method</a> <code>options.video</code> parameter settings.\n  <small>When value is defined as <code>true</code> or an object, <a href=\"#method_getUserMedia\">\n  <code>getUserMedia()</code> method</a> to be invoked to retrieve new Stream. If\n  <code>options.audio</code> is not defined, it will be defined as <code>false</code>.</small>\n  <small>Object signature matches the <code>options.video</code> parameter in the\n  <a href=\"#method_getUserMedia\"><code>getUserMedia()</code> method</a>.</small>",
                            "type": "Boolean|JSON",
                            "optional": true
                        },
                        {
                            "name": "bandwidth",
                            "description": "<blockquote class=\"info\">Note that this currently does not work\n  with Firefox browsers.</blockquote> The configuration to set the maximum streaming bandwidth sent to Peers.",
                            "type": "JSON",
                            "optional": true,
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "The maximum audio streaming bandwidth sent to Peers.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video",
                                    "description": "The maximum video streaming bandwidth sent to Peers.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "data",
                                    "description": "The maximum data streaming bandwidth sent to Peers.\n  <small>This affects the P2P messaging in <a href=\"#method_sendP2PMessage\"><code>sendP2PMessage()</code> method</a>,\n  and data transfers in <a href=\"#method_sendBlobData\"><code>sendBlobData()</code> method</a> and\n  <a href=\"#method_sendURLData\"><code>sendURLData()</code> method</a>.</small>",
                                    "type": "Number",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "manualGetUserMedia",
                            "description": "The flag if <code>joinRoom()</code> should trigger\n  <a href=\"#event_mediaAccessRequired\"><code>mediaAccessRequired</code> event</a> in which the\n  <a href=\"#method_getUserMedia\"><code>getUserMedia()</code> Stream</a> or\n  <a href=\"#method_shareScreen\"><code>shareScreen()</code> Stream</a>\n  must be retrieved as a requirement before Room session may begin.\n  <small>This ignores the <code>options.audio</code> and <code>options.video</code> configuration.</small>",
                            "type": "Boolean",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "The callback function fired when request has completed.\n  <small>Function parameters signature is <code>function (error, success)</code></small>\n  <small>Function request completion is determined by the <a href=\"#event_peerJoined\">\n  <code>peerJoined</code> event</a> triggering <code>isSelf</code> parameter payload value as <code>true</code>\n  for request success.</small>",
                    "type": "Function",
                    "optional": true,
                    "props": [
                        {
                            "name": "error",
                            "description": "The error result in request.\n  <small>Defined as <code>null</code> when there are no errors in request</small>",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "error",
                                    "description": "The error received when starting Room session has failed.",
                                    "type": "Error|String"
                                },
                                {
                                    "name": "errorCode",
                                    "description": "The current <a href=\"#method_init\"><code>init()</code> method</a> ready state.\n  [Rel: Skylink.READY_STATE_CHANGE]",
                                    "type": "Number"
                                },
                                {
                                    "name": "room",
                                    "description": "The Room name.",
                                    "type": "String"
                                }
                            ]
                        },
                        {
                            "name": "success",
                            "description": "The success result in request.\n  <small>Defined as <code>null</code> when there are errors in request</small>",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "room",
                                    "description": "The Room name.",
                                    "type": "String"
                                },
                                {
                                    "name": "peerId",
                                    "description": "The User's Room session Peer ID.",
                                    "type": "String"
                                },
                                {
                                    "name": "peerInfo",
                                    "description": "The User's current Room session information.\n  <small>Object signature matches the <code>peerInfo</code> parameter payload received in the\n  <a href=\"#event_peerJoined\"><code>peerJoined</code> event</a>.</small>",
                                    "type": "JSON"
                                }
                            ]
                        }
                    ]
                }
            ],
            "example": [
                "\n  // Example 1: Connecting to the default Room without Stream\n  skylinkDemo.joinRoom(function (error, success) {\n    if (error) return;\n    console.log(\"User connected.\");\n  });\n\n  // Example 2: Connecting to Room \"testxx\" with Stream\n  skylinkDemo.joinRoom(\"testxx\", {\n    audio: true,\n    video: true\n  }, function (error, success) {\n    if (error) return;\n    console.log(\"User connected with getUserMedia() Stream.\")\n  });\n\n  // Example 3: Connecting to default Room with Stream retrieved earlier\n  skylinkDemo.getUserMedia(function (gUMError, gUMSuccess) {\n    if (gUMError) return;\n    skylinkDemo.joinRoom(function (error, success) {\n      if (error) return;\n      console.log(\"User connected with getUserMedia() Stream.\");\n    });\n  });\n\n  // Example 4: Connecting to \"testxx\" Room with shareScreen() Stream retrieved manually\n  skylinkDemo.on(\"mediaAccessRequired\", function () {\n    skylinkDemo.shareScreen(function (sSError, sSSuccess) {\n      if (sSError) return;\n    });\n  });\n\n  skylinkDemo.joinRoom(\"testxx\", {\n    manualGetUserMedia: true\n  }, function (error, success) {\n    if (error) return;\n    console.log(\"User connected with shareScreen() Stream.\");\n  });\n\n  // Example 5: Connecting to \"testxx\" Room with User custom data\n  var data = { username: \"myusername\" };\n  skylinkDemo.joinRoom(\"testxx\", {\n    userData: data\n  }, function (error, success) {\n    if (error) return;\n    console.log(\"User connected with correct user data?\", success.peerInfo.userData.username === data.username);\n  });"
            ],
            "trigger": "<ol class=\"desc-seq\">\n  <li>Invokes <a href=\"#method_init\"><code>init()</code> method</a> to retrieve Room session token.</li>\n  <li>Starts a socket connection with the Signaling server.<ol>\n  <li>When socket connection to Signaling server is successfully established,\n  <a href=\"#event_channelOpen\"><code>channelOpen</code> event</a> triggers.</li>\n  <li>When socket connection to Signaling server is fails to establish,\n  <a href=\"#event_socketError\"><code>socketError</code> event</a> triggers.<small>\n  Triggers <a href=\"#event_channelRetry\"><code>channelRetry</code> event</a> if there are\n  still existing fallback ports and transport to attempt to establish a successful\n  socket connection with the Signaling server.</small></li></ol></li>\n  <li><a href=\"#event_channelMessage\"><code>channelMessage</code> event</a> triggers.</li>\n  <li><a href=\"#event_peerJoined\"><code>peerJoined</code> event</a> triggers parameter payload\n  <code>isSelf</code> value as <code>true</code>. <small>If MCU is enabled for the App Key,\n  the <a href=\"#event_serverPeerJoined\"><code>serverPeerJoined</code> event</a> will be triggered\n  when MCU is present in the Room, and then Peer connections can commence.</small><small>If\n  <a href=\"#method_shareScreen\"><code>shareScreen()</code> Stream</a> is available despite having\n  <a href=\"#method_getUserMedia\"><code>getUserMedia()</code> Stream</a> available, the\n  <a href=\"#method_shareScreen\"><code>shareScreen()</code> Stream</a> is sent instead of the\n  <a href=\"#method_getUserMedia\"><code>getUserMedia()</code> Stream</a> to Peers.</small></li></ol>",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/room-connection.js",
            "line": 457,
            "description": "Function that stops Room session.",
            "itemtype": "method",
            "name": "leaveRoom",
            "params": [
                {
                    "name": "stopMediaOptions",
                    "description": "The flag if <code>leaveRoom()</code>\n  should stop both <a href=\"#method_shareScreen\"><code>shareScreen()</code> Stream</a>\n  and <a href=\"#method_getUserMedia\"><code>getUserMedia()</code> Stream</a>.\n- When provided as a boolean, this sets both <code>stopMediaOptions.userMedia</code>\n  and <code>stopMediaOptions.screenshare</code> to its boolean value.",
                    "type": "Boolean|JSON",
                    "optional": true,
                    "optdefault": "true",
                    "props": [
                        {
                            "name": "userMedia",
                            "description": "The flag if <code>leaveRoom()</code>\n  should stop <a href=\"#method_getUserMedia\"><code>getUserMedia()</code> Stream</a>.\n  <small>This invokes <a href=\"#method_stopStream\"><code>stopStream()</code> method</a>.</small>",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "screenshare",
                            "description": "The flag if <code>leaveRoom()</code>\n  should stop <a href=\"#method_shareScreen\"><code>shareScreen()</code> Stream</a>.\n  <small>This invokes <a href=\"#method_stopScreen\"><code>stopScreen()</code> method</a>.</small>",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "The callback function fired when request has completed.\n  <small>Function parameters signature is <code>function (error, success)</code></small>\n  <small>Function request completion is determined by the <a href=\"#event_peerLeft\">\n  <code>peerLeft</code> event</a> triggering <code>isSelf</code> parameter payload value as <code>true</code>\n  for request success.</small>",
                    "type": "Function",
                    "optional": true,
                    "props": [
                        {
                            "name": "error",
                            "description": "The error result in request.\n  <small>Defined as <code>null</code> when there are no errors in request</small>\n  <small>Object signature is the <code>leaveRoom()</code> error when stopping Room session.</small>",
                            "type": "Error|String"
                        },
                        {
                            "name": "success",
                            "description": "The success result in request.\n  <small>Defined as <code>null</code> when there are errors in request</small>",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "peerId",
                                    "description": "The User's Room session Peer ID.",
                                    "type": "String"
                                },
                                {
                                    "name": "previousRoom",
                                    "description": "The Room name.",
                                    "type": "String"
                                }
                            ]
                        }
                    ]
                }
            ],
            "trigger": "<ol class=\"desc-seq\">\n  <li>When <code>stopMediaOptions.userMedia</code> is <code>true</code>, the\n  <a href=\"#method_stopStream\"><code>stopStream()</code> method</a> is invoked.</li>\n  <li>When <code>stopMediaOptions.screenshare</code> is <code>true</code>, the\n  <a href=\"#method_stopScreen\"><code>stopScreen()</code> method</a> is invoked.</li>\n  <li>Stops the socket connection with the Signaling server. <ol>\n  <li>When socket connection to Signaling server is closed,\n  <a href=\"#event_channelClose\"><code>channelClose</code> event</a> triggers.</li></ol></li>\n  <li><a href=\"#event_peerLeft\"><code>peerLeft</code> event</a> triggers for Peers in the Room and User.\n  <small>If MCU is enabled for the App Key, the <a href=\"#event_serverPeerLeft\">\n  <code>serverPeerLeft</code> event</a> will be triggered when Room session has ended.</small></li></ol>",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/room-connection.js",
            "line": 583,
            "description": "Function that locks the current Room when in session to prevent other Peers from joining the Room.",
            "itemtype": "method",
            "name": "lockRoom",
            "trigger": "<ol class=\"desc-seq\">\n  <li><a href=\"#event_roomLock\"><code>roomLock</code> event</a> triggers parameter payload\n  <code>isLocked</code> value as <code>true</code>.</li></ol>",
            "since": "0.5.0",
            "class": "Skylink"
        },
        {
            "file": "source/room-connection.js",
            "line": 605,
            "description": "Function that unlocks the current Room when in session to allow other Peers to join the Room.",
            "itemtype": "method",
            "name": "unlockRoom",
            "trigger": "<ol class=\"desc-seq\">\n  <li><a href=\"#event_roomLock\"><code>roomLock</code> event</a> triggers parameter payload\n  <code>isLocked</code> value as <code>false</code>.</li></ol>",
            "since": "0.5.0",
            "class": "Skylink"
        },
        {
            "file": "source/room-connection.js",
            "line": 627,
            "description": "Function that waits for Socket connection to Signaling to be opened.",
            "itemtype": "method",
            "name": "_waitForOpenChannel",
            "access": "private",
            "tagname": "",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 1,
            "description": "The list of <a href=\"#method_init\"><code>init()</code> method</a> ready states.",
            "itemtype": "attribute",
            "name": "READY_STATE_CHANGE",
            "params": [
                {
                    "name": "INIT",
                    "description": "<small>Value <code>0</code></small>\n  The value of the state when <code>init()</code> has just started.",
                    "type": "Number"
                },
                {
                    "name": "LOADING",
                    "description": "<small>Value <code>1</code></small>\n  The value of the state when <code>init()</code> is authenticating App Key provided\n  (and with credentials if provided as well) with the Auth server.",
                    "type": "Number"
                },
                {
                    "name": "COMPLETED",
                    "description": "<small>Value <code>2</code></small>\n  The value of the state when <code>init()</code> has successfully authenticated with the Auth server.\n  Room session token is generated for joining the <code>defaultRoom</code> provided in <code>init()</code>.\n  <small>Room session token has to be generated each time User switches to a different Room\n  in <a href=\"#method_joinRoom\"><code>joinRoom()</code> method</a>.</small>",
                    "type": "Number"
                },
                {
                    "name": "ERROR",
                    "description": "<small>Value <code>-1</code></small>\n  The value of the state when <code>init()</code> has failed authenticating with the Auth server.\n  [Rel: Skylink.READY_STATE_CHANGE_ERROR]",
                    "type": "Number"
                }
            ],
            "type": "JSON",
            "readonly": "",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 29,
            "description": "The list of <a href=\"#method_init\"><code>init()</code> method</a> ready state failure codes.",
            "itemtype": "attribute",
            "name": "READY_STATE_CHANGE_ERROR",
            "params": [
                {
                    "name": "API_INVALID",
                    "description": "<small>Value <code>4001</code></small>\n  The value of the failure code when provided App Key in <code>init()</code> does not exists.\n  <small>To resolve this, check that the provided App Key exists in\n  <a href=\"https://console.temasys.io\">the Developer Console</a>.</small>",
                    "type": "Number"
                },
                {
                    "name": "API_DOMAIN_NOT_MATCH",
                    "description": "<small>Value <code>4002</code></small>\n  The value of the failure code when <code>\"domainName\"</code> property in the App Key does not\n  match the accessing server IP address.\n  <small>To resolve this, contact our <a href=\"http://support.temasys.com.sg\">support portal</a>.</small>",
                    "type": "Number"
                },
                {
                    "name": "API_CORS_DOMAIN_NOT_MATCH",
                    "description": "<small>Value <code>4003</code></small>\n  The value of the failure code when <code>\"corsurl\"</code> property in the App Key does not match accessing CORS.\n  <small>To resolve this, configure the App Key CORS in\n  <a href=\"https://console.temasys.io\">the Developer Console</a>.</small>",
                    "type": "Number"
                },
                {
                    "name": "API_CREDENTIALS_INVALID",
                    "description": "<small>Value <code>4004</code></small>\n  The value of the failure code when there is no [CORS](https://en.wikipedia.org/wiki/Cross-origin_resource_sharing)\n  present in the HTTP headers during the request to the Auth server present nor\n  <code>options.credentials.credentials</code> configuration provided in the <code>init()</code>.\n  <small>To resolve this, ensure that CORS are present in the HTTP headers during the request to the Auth server.</small>",
                    "type": "Number"
                },
                {
                    "name": "API_CREDENTIALS_NOT_MATCH",
                    "description": "<small>Value <code>4005</code></small>\n  The value of the failure code when the <code>options.credentials.credentials</code> configuration provided in the\n  <code>init()</code> does not match up with the <code>options.credentials.startDateTime</code>,\n  <code>options.credentials.duration</code> or that the <code>\"secret\"</code> used to generate\n  <code>options.credentials.credentials</code> does not match the App Key's <code>\"secret</code> property provided.\n  <small>To resolve this, check that the <code>options.credentials.credentials</code> is generated correctly and\n  that the <code>\"secret\"</code> used to generate it is from the App Key provided in the <code>init()</code>.</small>",
                    "type": "Number"
                },
                {
                    "name": "API_INVALID_PARENT_KEY",
                    "description": "<small>Value <code>4006</code></small>\n  The value of the failure code when the App Key provided does not belong to any existing App.\n  <small>To resolve this, check that the provided App Key exists in\n  <a href=\"https://console.temasys.io\">the Developer Console</a>.</small>",
                    "type": "Number"
                },
                {
                    "name": "API_NO_MEETING_RECORD_FOUND",
                    "description": "<small>Value <code>4010</code></small>\n  The value of the failure code when provided <code>options.credentials</code>\n  does not match any scheduled meetings available for the \"Persistent Room\" enabled App Key provided.\n  <small>See the <a href=\"http://support.temasys.com.sg/support/solutions/articles/\n12000002811-using-the-persistent-room-feature-to-configure-meetings\">Persistent Room article</a> to learn more.</small>",
                    "type": "Number"
                },
                {
                    "name": "API_OVER_SEAT_LIMIT",
                    "description": "<small>Value <code>4020</code></small>\n  The value of the failure code when App Key has reached its current concurrent users limit.\n  <small>To resolve this, use another App Key. To create App Keys dynamically, see the\n  <a href=\"https://temasys.atlassian.net/wiki/display/TPD/SkylinkAPI+-+Application+Resources\">Application REST API\n  docs</a> for more information.</small>",
                    "type": "Number"
                },
                {
                    "name": "API_RETRIEVAL_FAILED",
                    "description": "<small>Value <code>4021</code></small>\n  The value of the failure code when App Key retrieval of authentication token fails.\n  <small>If this happens frequently, contact our <a href=\"http://support.temasys.com.sg\">support portal</a>.</small>",
                    "type": "Number"
                },
                {
                    "name": "API_WRONG_ACCESS_DOMAIN",
                    "description": "<small>Value <code>5005</code></small>\n  The value of the failure code when App Key makes request to the incorrect Auth server.\n  <small>To resolve this, ensure that the <code>roomServer</code> is not configured. If this persists even without\n  <code>roomServer</code> configuration, contact our <a href=\"http://support.temasys.com.sg\">support portal</a>.</small>",
                    "type": "Number"
                },
                {
                    "name": "XML_HTTP_REQUEST_ERROR",
                    "description": "<small>Value <code>-1</code></small>\n  The value of the failure code when requesting to Auth server has timed out.",
                    "type": "Number"
                },
                {
                    "name": "NO_SOCKET_IO",
                    "description": "<small>Value <code>1</code></small>\n  The value of the failure code when dependency <a href=\"http://socket.io/download/\">Socket.IO client</a> is not loaded.\n  <small>To resolve this, ensure that the Socket.IO client dependency is loaded before the Skylink SDK.\n  You may use the provided Socket.IO client <a href=\"http://socket.io/download/\">CDN here</a>.</small>",
                    "type": "Number"
                },
                {
                    "name": "NO_XMLHTTPREQUEST_SUPPORT",
                    "description": "<small>Value <code>2</code></small>\n  The value of the failure code when <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\">\n  XMLHttpRequest API</a> required to make request to Auth server is not supported.\n  <small>To resolve this, display in the Web UI to ask clients to switch to the list of supported browser\n  as <a href=\"https://github.com/Temasys/SkylinkJS/tree/0.6.14#supported-browsers\">listed in here</a>.</small>",
                    "type": "Number"
                },
                {
                    "name": "NO_WEBRTC_SUPPORT",
                    "description": "<small>Value <code>3</code></small>\n  The value of the failure code when <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/\">\n  RTCPeerConnection API</a> required for Peer connections is not supported.\n  <small>To resolve this, display in the Web UI to ask clients to switch to the list of supported browser\n  as <a href=\"https://github.com/Temasys/SkylinkJS/tree/0.6.14#supported-browsers\">listed in here</a>.\n  For <a href=\"http://confluence.temasys.com.sg/display/TWPP\">plugin supported browsers</a>, if the clients\n  does not have the plugin installed, there will be an installation toolbar that will prompt for installation\n  to support the RTCPeerConnection API.</small>",
                    "type": "Number"
                },
                {
                    "name": "NO_PATH",
                    "description": "<small>Value <code>4</code></small>\n  The value of the failure code when provided <code>init()</code> configuration has errors.",
                    "type": "Number"
                },
                {
                    "name": "ADAPTER_NO_LOADED",
                    "description": "<small>Value <code>7</code></small>\n  The value of the failure code when dependency <a href=\"https://github.com/Temasys/AdapterJS/\">AdapterJS</a>\n  is not loaded.\n  <small>To resolve this, ensure that the AdapterJS dependency is loaded before the Skylink dependency.\n  You may use the provided AdapterJS <a href=\"https://github.com/Temasys/AdapterJS/\">CDN here</a>.</small>",
                    "type": "Number"
                }
            ],
            "type": "JSON",
            "readonly": "",
            "since": "0.4.0",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 127,
            "description": "<blockquote class=\"info\"><b>Deprecation Warning!</b>\n  This constant has been deprecated.<br>Automatic nearest regional server has been implemented\n  on the platform.\n</blockquote>\nThe list of available Auth servers in these regions configured in the\n<a href=\"#method_init\"><code>init()</code> method</a>.",
            "itemtype": "attribute",
            "name": "REGIONAL_SERVER",
            "params": [
                {
                    "name": "APAC1",
                    "description": "<small>Value <code>\"sg\"</code></small>\n  The value of the option to use the Auth server in Asia Pacific (APAC).",
                    "type": "String"
                },
                {
                    "name": "US1",
                    "description": "<small>Value <code>\"us2\"</code></small>\n  The value of the option to use the Auth server in United States (US).",
                    "type": "String"
                }
            ],
            "deprecated": true,
            "type": "JSON",
            "readonly": "",
            "since": "0.5.0",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 150,
            "description": "Stores the flag if HTTPS connections should be enforced when connecting to\n  the API or Signaling server if App is accessing from HTTP domain.\nHTTPS connections are enforced if App is accessing from HTTPS domains.",
            "itemtype": "attribute",
            "name": "_forceSSL",
            "type": "Boolean",
            "default": "false",
            "access": "private",
            "tagname": "",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 163,
            "description": "Stores the flag if TURNS connections should be enforced when connecting to\n  the TURN server if App is accessing from HTTP domain.\nTURNS connections are enforced if App is accessing from HTTPS domains.",
            "itemtype": "attribute",
            "name": "_forceTURNSSL",
            "type": "Boolean",
            "default": "false",
            "access": "private",
            "tagname": "",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 176,
            "description": "Stores the flag if TURN connections should be enforced when connecting to Peers.\nThis filters all non \"relay\" ICE candidates to enforce connections via the TURN server.",
            "itemtype": "attribute",
            "name": "_forceTURN",
            "type": "Boolean",
            "default": "false",
            "access": "private",
            "tagname": "",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 188,
            "description": "Stores the construct API REST path to obtain Room credentials.",
            "itemtype": "attribute",
            "name": "_path",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 198,
            "description": "Stores the server region for the Signaling server to use.\nThis is already deprecated an no longer useful. To discuss and remove.",
            "itemtype": "attribute",
            "name": "_serverRegion",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.5.0",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 209,
            "description": "Stores the API server url.",
            "itemtype": "attribute",
            "name": "_roomServer",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 219,
            "description": "Stores the App Key configured in <code>init()</code>.",
            "itemtype": "attribute",
            "name": "_appKey",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.3.0",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 229,
            "description": "Stores the default Room name to connect to when <code>joinRoom()</code> does not provide a Room name.",
            "itemtype": "attribute",
            "name": "_defaultRoom",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.3.0",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 239,
            "description": "Stores the <code>init()</code> credentials starting DateTime stamp in ISO 8601.",
            "itemtype": "attribute",
            "name": "_roomStart",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.3.0",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 249,
            "description": "Stores the <code>init()</code> credentials duration counted in hours.",
            "itemtype": "attribute",
            "name": "_roomDuration",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "since": "0.3.0",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 259,
            "description": "Stores the <code>init()</code> generated credentials string.",
            "itemtype": "attribute",
            "name": "_roomCredentials",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.3.0",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 269,
            "description": "Stores the current <code>init()</code> readyState.",
            "itemtype": "attribute",
            "name": "_readyState",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 279,
            "description": "Stores the \"cid\" used for <code>joinRoom()</code>.",
            "itemtype": "attribute",
            "name": "_key",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 289,
            "description": "Stores the \"apiOwner\" used for <code>joinRoom()</code>.",
            "itemtype": "attribute",
            "name": "_appKeyOwner",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 299,
            "description": "Stores the Room credentials information for <code>joinRoom()</code>.",
            "itemtype": "attribute",
            "name": "_room",
            "params": [
                {
                    "name": "id",
                    "description": "The \"rid\" for <code>joinRoom()</code>.",
                    "type": "String"
                },
                {
                    "name": "token",
                    "description": "The \"roomCred\" for <code>joinRoom()</code>.",
                    "type": "String"
                },
                {
                    "name": "startDateTime",
                    "description": "The \"start\" for <code>joinRoom()</code>.",
                    "type": "String"
                },
                {
                    "name": "duration",
                    "description": "The \"len\" for <code>joinRoom()</code>.",
                    "type": "String"
                },
                {
                    "name": "connection",
                    "description": "The RTCPeerConnection constraints and configuration. This is not used in the SDK\n  except for the \"mediaConstraints\" property that sets the default <code>getUserMedia()</code> settings.",
                    "type": "String"
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 315,
            "description": "Function that authenticates and initialises App Key used for Room connections.",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "options",
                    "description": "The configuration options.\n- When provided as a string, it's configured as <code>options.appKey</code>.",
                    "type": "JSON|String",
                    "props": [
                        {
                            "name": "appKey",
                            "description": "The App Key.\n  <small>By default, <code>init()</code> uses [HTTP CORS](https://en.wikipedia.org/wiki/Cross-origin_resource_sharing)\n  authentication. For credentials based authentication, see the <code>options.credentials</code> configuration\n  below. You can know more about the <a href=\"http://support.temasys.com.sg/support/solutions/articles/\n12000002712-authenticating-your-application-key-to-start-a-connection\">in the authentication methods article here</a>\n  for more details on the various authentication methods.</small>\n  <small>If you are using the Persistent Room feature for scheduled meetings, you will require to\n  use the credential based authentication. See the <a href=\"http://support.temasys.com.sg/support\n/solutions/articles/12000002811-using-the-persistent-room-feature-to-configure-meetings\">Persistent Room article here\n  </a> for more information.</small>",
                            "type": "String"
                        },
                        {
                            "name": "defaultRoom",
                            "description": "The default Room to connect to when no <code>room</code> parameter\n   is provided in  <a href=\"#method_joinRoom\"><code>joinRoom()</code> method</a>.\n- When not provided, its value is <code>options.appKey</code>.\n  <small>Note that switching Rooms is not available when using <code>options.credentials</code> based authentication.\n  The Room that User will be connected to is the <code>defaultRoom</code> provided.</small>",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "roomServer",
                            "description": "The Auth server.\n<small>Note that this is a debugging feature and is only used when instructed for debugging purposes.</small>",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "region",
                            "description": "<blockquote class=\"info\"><b>Deprecation Warning!</b>\n  This option has been deprecated.<br>Automatic nearest regional server has been implemented\n  on the platform.</blockquote>\n  The Auth server in the various regions to connect to for better connectivity.\n  [Rel: Skylink.REGIONAL_SERVER]",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "enableIceTrickle",
                            "description": "The flag if Peer connections should\n  trickle ICE for faster connectivity.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "enableDataChannel",
                            "description": "The flag if Datachannel connections should be enabled.\n  <small>This is required to be enabled for <a href=\"#method_sendBlobData\"><code>sendBlobData()</code> method</a>,\n  <a href=\"#method_sendURLData\"><code>sendURLData()</code> method</a> and\n  <a href=\"#method_sendP2PMessage\"><code>sendP2PMessage()</code> method</a>.</small>",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "enableTURNServer",
                            "description": "The flag if TURN ICE servers should\n  be used when constructing Peer connections to allow TURN connections when required and enabled for the App Key.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "enableSTUNServer",
                            "description": "The flag if STUN ICE servers should\n  be used when constructing Peer connections to allow TURN connections when required.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "forceTURN",
                            "description": "The flag if Peer connections should enforce\n  connections over the TURN server.\n  <small>This sets <code>options.enableTURNServer</code> value to <code>true</code> and\n  <code>options.enableSTUNServer</code> value to <code>false</code>.</small>\n  <small>During Peer connections, it filters out non <code>\"relay\"</code> ICE candidates to\n  ensure that TURN connections is enforced.</small>",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "usePublicSTUN",
                            "description": "The flag if publicly available STUN ICE servers should\n  be used if <code>options.enableSTUNServer</code> is enabled.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "TURNServerTransport",
                            "description": "<blockquote class=\"info\">\n  Note that configuring the protocol may not necessarily result in the desired network transports protocol\n  used in the actual TURN network traffic as it depends which protocol the browser selects and connects with.\n  This simply configures the TURN ICE server urls <code?transport=(protocol)</code> query option when constructing\n  the Peer connection. When all protocols are selected, the ICE servers urls are duplicated with all protocols.\n  </blockquote> The option to configure the <code>?transport=</code>\n  query parameter in TURN ICE servers when constructing a Peer connections.\n- When not provided, its value is <code>ANY</code>.\n  [Rel: Skylink.TURN_TRANSPORT]",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "credentials",
                            "description": "The credentials used for authenticating App Key with\n  credentials to retrieve the Room session token used for connection in <a href=\"#method_joinRoom\">\n  <code>joinRoom()</code> method</a>.\n  <small>Note that switching of Rooms is not allowed when using credentials based authentication, unless\n  <code>init()</code> is invoked again with a different set of credentials followed by invoking\n  the <a href=\"#method_joinRoom\"><code>joinRoom()</code> method</a>.</small>",
                            "type": "JSON",
                            "optional": true,
                            "props": [
                                {
                                    "name": "startDateTime",
                                    "description": "The credentials User session in Room starting DateTime\n  in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601 format</a>.",
                                    "type": "String"
                                },
                                {
                                    "name": "duration",
                                    "description": "The credentials User session in Room duration in hours.",
                                    "type": "Number"
                                },
                                {
                                    "name": "credentials",
                                    "description": "The generated credentials used to authenticate\n  the provided App Key with its <code>\"secret\"</code> property.\n  <blockquote class=\"details\"><h5>To generate the credentials:</h5><ol>\n  <li>Concatenate a string that consists of the Room name you provide in the <code>options.defaultRoom</code>,\n  the <code>options.credentials.duration</code> and the <code>options.credentials.startDateTime</code>.\n  <small>Example: <code>var concatStr = defaultRoom + \"_\" + duration + \"_\" + startDateTime;</code></small></li>\n  <li>Hash the concatenated string with the App Key <code>\"secret\"</code> property using\n  <a href=\"https://en.wikipedia.org/wiki/SHA-1\">SHA-1</a>.\n  <small>Example: <code>var hash = CryptoJS.HmacSHA1(concatStr, appKeySecret);</code></small>\n  <small>See the <a href=\"https://code.google.com/p/crypto-js/#HMAC\"><code>CryptoJS.HmacSHA1</code> library</a>.</small></li>\n  <li>Encode the hashed string using <a href=\"https://en.wikipedia.org/wiki/Base64\">base64</a>\n  <small>Example: <code>var b64Str = hash.toString(CryptoJS.enc.Base64);</code></small>\n  <small>See the <a href=\"https://code.google.com/p/crypto-js/#The_Cipher_Output\">CryptoJS.enc.Base64</a> library</a>.</small></li>\n  <li>Encode the base64 encoded string to replace special characters using UTF-8 encoding.\n  <small>Example: <code>var credentials = encodeURIComponent(base64String);</code></small>\n  <small>See <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/\nGlobal_Objects/encodeURIComponent\">encodeURIComponent() API</a>.</small></li></ol></blockquote>",
                                    "type": "String"
                                }
                            ]
                        },
                        {
                            "name": "audioFallback",
                            "description": "The flag if <a href=\"#method_getUserMedia\">\n  <code>getUserMedia()</code> method</a> should fallback to retrieve only audio Stream when\n  retrieving audio and video Stream fails.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "forceSSL",
                            "description": "The flag if HTTPS connections should be enforced\n  during request to Auth server and socket connections to Signaling server\n  when accessing <code>window.location.protocol</code> value is <code>\"http:\"</code>.\n  <small>By default, <code>\"https:\"</code> protocol connections uses HTTPS connections.</small>",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "audioCodec",
                            "description": "<blockquote class=\"info\">\n  Note that if the audio codec is not supported, the SDK will not configure the local <code>\"offer\"</code> or\n  <code>\"answer\"</code> session description to prefer the codec.</blockquote>\n  The option to configure the preferred audio codec\n  to use to encode sending audio data when available for Peer connection.\n- When not provided, its value is <code>AUTO</code>.\n  [Rel: Skylink.AUDIO_CODEC]",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "videoCodec",
                            "description": "<blockquote class=\"info\">\n   Note that if the video codec is not supported, the SDK will not configure the local <code>\"offer\"</code> or\n  <code>\"answer\"</code> session description to prefer the codec.</blockquote>\n  The option to configure the preferred video codec\n  to use to encode sending video data when available for Peer connection.\n- When not provided, its value is <code>AUTO</code>.\n  [Rel: Skylink.VIDEO_CODEC]",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "socketTimeout",
                            "description": "The timeout for each attempts for socket connection\n  with the Signaling server to indicate that connection has timed out and has failed to establish.\n  <small>Note that the mininum timeout value is <code>5000</code>. If less, this value will be <code>5000</code>.</small>",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "20000"
                        },
                        {
                            "name": "forceTURNSSL",
                            "description": "<blockquote class=\"info\">\n  Note that currently Firefox does not support the TURNS protocol, and that if TURNS is required,\n  TURN ICE servers using port <code>443</code> will be used instead.</blockquote>\n  The flag if TURNS protocol should be used when <code>options.enableTURNServer</code> is enabled.\n  <small>By default, <code>\"https:\"</code> protocol connections uses TURNS protocol.</small>",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "The callback function fired when request has completed.\n  <small>Function parameters signature is <code>function (error, success)</code></small>\n  <small>Function request completion is determined by the <a href=\"#event_readyStateChange\">\n  <code>readyStateChange</code> event</a> <code>state</code> parameter payload value\n  as <code>COMPLETED</code> for request success.</small>\n  [Rel: Skylink.READY_STATE_CHANGE]",
                    "type": "Function",
                    "optional": true,
                    "props": [
                        {
                            "name": "error",
                            "description": "The error result in request.\n- When defined as string, it's the error when required App Key is not provided.\n  <small>Defined as <code>null</code> when there are no errors in request</small>",
                            "type": "JSON|String",
                            "props": [
                                {
                                    "name": "errorCode",
                                    "description": "The <a href=\"#event_readyStateChange\"><code>readyStateChange</code>\n  event</a> <code>error.errorCode</code> parameter payload value.\n  [Rel: Skylink.READY_STATE_CHANGE_ERROR]",
                                    "type": "Number"
                                },
                                {
                                    "name": "error",
                                    "description": "The <a href=\"#event_readyStateChange\"><code>readyStateChange</code>\n  event</a> <code>error.content</code> parameter payload value.",
                                    "type": "Object"
                                },
                                {
                                    "name": "status",
                                    "description": "The <a href=\"#event_readyStateChange\"><code>readyStateChange</code>\n  event</a> <code>error.status</code> parameter payload value.",
                                    "type": "Number"
                                }
                            ]
                        },
                        {
                            "name": "success",
                            "description": "The success result in request.\n  <small>Defined as <code>null</code> when there are errors in request</small>",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "serverUrl",
                                    "description": "The constructed REST URL requested to Auth server.",
                                    "type": "String"
                                },
                                {
                                    "name": "readyState",
                                    "description": "The current ready state.\n  [Rel: Skylink.READY_STATE_CHANGE]",
                                    "type": "String"
                                },
                                {
                                    "name": "selectedRoom",
                                    "description": "The Room based on the current Room session token retrieved for.",
                                    "type": "String"
                                },
                                {
                                    "name": "appKey",
                                    "description": "The configured value of the <code>options.appKey</code>.",
                                    "type": "String"
                                },
                                {
                                    "name": "defaultRoom",
                                    "description": "The configured value of the <code>options.defaultRoom</code>.",
                                    "type": "String"
                                },
                                {
                                    "name": "roomServer",
                                    "description": "The configured value of the <code>options.roomServer</code>.",
                                    "type": "String"
                                },
                                {
                                    "name": "enableIceTrickle",
                                    "description": "The configured value of the <code>options.enableIceTrickle</code>.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "enableDataChannel",
                                    "description": "The configured value of the <code>options.enableDataChannel</code>.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "enableTURNServer",
                                    "description": "The configured value of the <code>options.enableTURNServer</code>.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "enableSTUNServer",
                                    "description": "The configured value of the <code>options.enableSTUNServer</code>.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "TURNTransport",
                                    "description": "The configured value of the <code>options.TURNServerTransport</code>.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "serverRegion",
                                    "description": "The configured value of the <code>options.region</code>.",
                                    "type": "String"
                                },
                                {
                                    "name": "audioFallback",
                                    "description": "The configured value of the <code>options.audioFallback</code>.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "forceSSL",
                                    "description": "The configured value of the <code>options.forceSSL</code>.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "audioCodec",
                                    "description": "The configured value of the <code>options.audioCodec</code>.",
                                    "type": "String"
                                },
                                {
                                    "name": "videoCodec",
                                    "description": "The configured value of the <code>options.videoCodec</code>.",
                                    "type": "String"
                                },
                                {
                                    "name": "socketTimeout",
                                    "description": "The configured value of the <code>options.socketTimeout</code>.",
                                    "type": "Number"
                                },
                                {
                                    "name": "forceTURNSSL",
                                    "description": "The configured value of the <code>options.forceTURNSSL</code>.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "forceTURN",
                                    "description": "The configured value of the <code>options.forceTURN</code>.",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "usePublicSTUN",
                                    "description": "The configured value of the <code>options.usePublicSTUN</code>.",
                                    "type": "Boolean"
                                }
                            ]
                        }
                    ]
                }
            ],
            "example": [
                "\n  // Example 1: Using CORS authentication and connection to default Room\n  skylinkDemo(appKey, function (error, success) {\n    if (error) return;\n    skylinkDemo.joinRoom(); // Goes to default Room\n  });\n\n  // Example 2: Using CORS authentication and connection to a different Room\n  skylinkDemo(appKey, function (error, success) {\n    skylinkDemo.joinRoom(\"testxx\"); // Goes to \"testxx\" Room\n  });\n\n  // Example 3: Using credentials authentication and connection to only default Room\n  var defaultRoom   = \"test\",\n      startDateTime = (new Date()).toISOString(),\n      duration      = 1, // Allows only User session to stay for 1 hour\n      appKeySecret  = \"xxxxxxx\",\n      hash          = CryptoJS.HmacSHA1(defaultRoom + \"_\" + duration + \"_\" + startDateTime, appKeySecret);\n      credentials   = encodeURIComponent(hash.toString(CryptoJS.enc.Base64));\n\n  skylinkDemo({\n    defaultRoom: defaultRoom,\n    appKey: appKey,\n    credentials: {\n      duration: duration,\n      startDateTime: startDateTime,\n      credentials: credentials\n    }\n  }, function (error, success) {\n    if (error) return;\n    skylinkDemo.joinRoom(); // Goes to default Room (switching to different Room is not allowed for credentials authentication)\n  });"
            ],
            "trigger": "<ol class=\"desc-seq\">\n  <li><a href=\"#event_readyStateChange\"><code>readyStateChange</code> event</a> triggers parameter\n  payload <code>state</code> value as <code>LOADING</code>.</li><li><ol>\n  <li>When authentication is successful,\n  <a href=\"#event_readyStateChange\"><code>readyStateChange</code> event</a> triggers parameter\n  payload <code>state</code> value as <code>COMPLETED</code>.\n  <small>Room session token will be retrieved and will be required by <a href=\"#method_joinRoom\">\n  <code>joinRoom()</code> method</a> to start Room connection.</small></li>\n  <li>When authentication fails, <a href=\"#event_readyStateChange\"><code>readyStateChange</code>\n  event</a> triggers parameter payload <code>state</code> value as <code>ERROR</code>.</li></ol></ol>",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 756,
            "description": "Starts retrieving Room credentials information from API server.",
            "itemtype": "method",
            "name": "_requestServerInfo",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 830,
            "description": "Parses the Room credentials information retrieved from API server.",
            "itemtype": "method",
            "name": "_parseInfo",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 903,
            "description": "Loads and checks the dependencies if they are loaded correctly.",
            "itemtype": "method",
            "name": "_loadInfo",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/room-init.js",
            "line": 994,
            "description": "Starts initialising for Room credentials for room name provided in <code>joinRoom()</code> method.",
            "itemtype": "method",
            "name": "_initSelectedRoom",
            "access": "private",
            "tagname": "",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 1,
            "description": "The list of the SDK <code>console</code> API log levels.",
            "itemtype": "attribute",
            "name": "LOG_LEVEL",
            "params": [
                {
                    "name": "DEBUG",
                    "description": "<small>Value <code>4</code></small>\n  The value of the log level that displays <code>console</code> <code>debug</code>,\n  <code>log</code>, <code>info</code>, <code>warn</code> and <code>error</code> logs.",
                    "type": "Number"
                },
                {
                    "name": "LOG",
                    "description": "<small>Value <code>3</code></small>\n  The value of the log level that displays only <code>console</code> <code>log</code>,\n  <code>info</code>, <code>warn</code> and <code>error</code> logs.",
                    "type": "Number"
                },
                {
                    "name": "INFO",
                    "description": "<small>Value <code>2</code></small>\n  The value of the log level that displays only <code>console</code> <code>info</code>,\n  <code>warn</code> and <code>error</code> logs.",
                    "type": "Number"
                },
                {
                    "name": "WARN",
                    "description": "<small>Value <code>1</code></small>\n  The value of the log level that displays only <code>console</code> <code>warn</code>\n  and <code>error</code> logs.",
                    "type": "Number"
                },
                {
                    "name": "ERROR",
                    "description": "<small>Value <code>0</code></small>\n  The value of the log level that displays only <code>console</code> <code>error</code> logs.",
                    "type": "Number"
                }
            ],
            "type": "JSON",
            "readonly": "",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 31,
            "description": "Stores the log message starting header string.\nE.g. \"<header> - <the log message>\".",
            "itemtype": "attribute",
            "name": "_LOG_KEY",
            "type": "String",
            "access": "private",
            "tagname": "",
            "scoped": "true",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 44,
            "description": "Stores the list of available SDK log levels.",
            "itemtype": "attribute",
            "name": "_LOG_LEVELS",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "scoped": "true",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 55,
            "description": "Stores the current SDK log level.\nDefault is ERROR (<code>0</code>).",
            "itemtype": "attribute",
            "name": "_logLevel",
            "type": "String",
            "default": "0",
            "access": "private",
            "tagname": "",
            "scoped": "true",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 68,
            "description": "Stores the flag if debugging mode is enabled.\nThis manipulates the SkylinkLogs interface.",
            "itemtype": "attribute",
            "name": "_enableDebugMode",
            "type": "Boolean",
            "default": "false",
            "access": "private",
            "tagname": "",
            "scoped": "true",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 81,
            "description": "Stores the flag if logs should be stored in SkylinkLogs interface.",
            "itemtype": "attribute",
            "name": "_enableDebugStack",
            "type": "Boolean",
            "default": "false",
            "access": "private",
            "tagname": "",
            "scoped": "true",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 93,
            "description": "Stores the flag if logs should trace if available.\nThis uses the <code>console.trace</code> API.",
            "itemtype": "attribute",
            "name": "_enableDebugTrace",
            "type": "Boolean",
            "default": "false",
            "access": "private",
            "tagname": "",
            "scoped": "true",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 106,
            "description": "Stores the logs used for SkylinkLogs object.",
            "itemtype": "attribute",
            "name": "_storedLogs",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "scoped": "true",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 117,
            "description": "Function that gets the stored logs.",
            "itemtype": "method",
            "name": "_getStoredLogsFn",
            "access": "private",
            "tagname": "",
            "scoped": "true",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 138,
            "description": "Function that clears the stored logs.",
            "itemtype": "method",
            "name": "_clearAllStoredLogsFn",
            "access": "private",
            "tagname": "",
            "scoped": "true",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 150,
            "description": "Function that prints in the Web Console interface the stored logs.",
            "itemtype": "method",
            "name": "_printAllStoredLogsFn",
            "access": "private",
            "tagname": "",
            "scoped": "true",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 174,
            "description": "<blockquote class=\"info\">\n  To utilise and enable the <code>SkylinkLogs</code> API functionalities, the\n  <a href=\"#method_setDebugMode\"><code>setDebugMode()</code> method</a>\n  <code>options.storeLogs</code> parameter has to be enabled.\n</blockquote>\nThe object interface to manage the SDK <a href=\"https://developer.mozilla.org/en/docs/Web/API/console\">\nJavascript Web Console</a> logs.",
            "itemtype": "property",
            "name": "SkylinkLogs",
            "type": "JSON",
            "global": "true",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 189,
            "description": "Function that gets the current stored SDK <code>console</code> logs.",
            "itemtype": "property",
            "name": "SkylinkLogs.getLogs",
            "return": {
                "description": "The array of stored logs.<ul>\n  <li><code><#index></code><var><b>{</b>Array<b>}</b></var><p>The stored log item.</p><ul>\n  <li><code>0</code><var><b>{</b>Date<b>}</b></var><p>The DateTime of when the log was stored.</p></li>\n  <li><code>1</code><var><b>{</b>String<b>}</b></var><p>The log level. [Rel: Skylink.LOG_LEVEL]</p></li>\n  <li><code>2</code><var><b>{</b>String<b>}</b></var><p>The log message.</p></li>\n  <li><code>3</code><var><b>{</b>Any<b>}</b></var><span class=\"label\">Optional</span><p>The log message object.\n  </p></li></ul></li></ul>",
                "type": "Array"
            },
            "example": [
                "\n // Example 1: Get logs of specific level\n var debugLogs = SkylinkLogs.getLogs(skylinkDemo.LOG_LEVEL.DEBUG);\n\n // Example 2: Get all the logs\n var allLogs = SkylinkLogs.getLogs();"
            ],
            "type": "Function",
            "global": "true",
            "triggerforprophacknone": "true",
            "since": "0.5.5",
            "class": "Skylink",
            "subprops": [
                {
                    "name": "logLevel",
                    "description": "The specific log level of logs to return.\n- When not provided or that the level does not exists, it will return all logs of all levels.\n [Rel: Skylink.LOG_LEVEL]",
                    "type": "Number",
                    "optional": true
                }
            ]
        },
        {
            "file": "source/skylink-debug.js",
            "line": 216,
            "description": "Function that clears all the current stored SDK <code>console</code> logs.",
            "itemtype": "property",
            "name": "SkylinkLogs.clearAllLogs",
            "type": "Function",
            "example": [
                "\n  // Example 1: Clear all the logs\n  SkylinkLogs.clearAllLogs();"
            ],
            "global": "true",
            "triggerforprophacknone": "true",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 230,
            "description": "Function that prints all the current stored SDK <code>console</code> logs into the\n<a href=\"https://developer.mozilla.org/en/docs/Web/API/console\">Javascript Web Console</a>.",
            "itemtype": "property",
            "name": "SkylinkLogs.printAllLogs",
            "type": "Function",
            "example": [
                "\n  // Example 1: Print all the logs\n  SkylinkLogs.printAllLogs();"
            ],
            "global": "true",
            "triggerforprophacknone": "true",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 246,
            "description": "Function that handles the logs received and prints in the Web Console interface according to the log level set.",
            "itemtype": "method",
            "name": "_logFn",
            "access": "private",
            "tagname": "",
            "required": 1,
            "scoped": "true",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 315,
            "description": "Stores the logging functions.",
            "itemtype": "attribute",
            "name": "log",
            "params": [
                {
                    "name": "debug",
                    "description": "The function that handles the DEBUG level logs.",
                    "type": "Function"
                },
                {
                    "name": "log",
                    "description": "The function that handles the LOG level logs.",
                    "type": "Function"
                },
                {
                    "name": "info",
                    "description": "The function that handles the INFO level logs.",
                    "type": "Function"
                },
                {
                    "name": "warn",
                    "description": "The function that handles the WARN level logs.",
                    "type": "Function"
                },
                {
                    "name": "error",
                    "description": "The function that handles the ERROR level logs.",
                    "type": "Function"
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "scoped": "true",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 351,
            "description": "Function that configures the level of <code>console</code> API logs to be printed in the\n<a href=\"https://developer.mozilla.org/en/docs/Web/API/console\">Javascript Web Console</a>.",
            "itemtype": "method",
            "name": "setLogLevel",
            "params": [
                {
                    "name": "logLevel",
                    "description": "The specific log level of logs to return.\n- When not provided or that the level does not exists, it will not overwrite the current log level.\n  <small>By default, the initial log level is <code>ERROR</code>.</small>\n  [Rel: Skylink.LOG_LEVEL]",
                    "type": "Number",
                    "optional": true
                }
            ],
            "example": [
                "\n  // Example 1: Print all of the console.debug, console.log, console.info, console.warn and console.error logs.\n  skylinkDemo.setLogLevel(skylinkDemo.LOG_LEVEL.DEBUG);\n\n  // Example 2: Print only the console.log, console.info, console.warn and console.error logs.\n  skylinkDemo.setLogLevel(skylinkDemo.LOG_LEVEL.LOG);\n\n  // Example 3: Print only the console.info, console.warn and console.error logs.\n  skylinkDemo.setLogLevel(skylinkDemo.LOG_LEVEL.INFO);\n\n  // Example 4: Print only the console.warn and console.error logs.\n  skylinkDemo.setLogLevel(skylinkDemo.LOG_LEVEL.WARN);\n\n  // Example 5: Print only the console.error logs. This is done by default.\n  skylinkDemo.setLogLevel(skylinkDemo.LOG_LEVEL.ERROR);"
            ],
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-debug.js",
            "line": 391,
            "description": "Function that configures the debugging mode of the SDK.",
            "itemtype": "method",
            "name": "setDebugMode",
            "params": [
                {
                    "name": "options",
                    "description": "The debugging options.\n- When provided as a boolean, this sets both <code>options.trace</code>\n  and <code>options.storeLogs</code> to its boolean value.",
                    "type": "Boolean|JSON",
                    "optional": true,
                    "optdefault": "false",
                    "props": [
                        {
                            "name": "trace",
                            "description": "The flag if SDK <code>console</code> logs\n  should output as <code>console.trace()</code> logs for tracing the <code>Function</code> call stack.\n  <small>Note that the <code>console.trace()</code> output logs is determined by the log level set\n  <a href=\"#method_setLogLevel\"><code>setLogLevel()</code> method</a>.</small>\n  <small>If <code>console.trace()</code> API is not supported, <code>setDebugMode()</code>\n  will fallback to use <code>console.log()</code> API.</small>",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "storeLogs",
                            "description": "The flag if SDK should store the <code>console</code> logs.\n  <small>This is required to be enabled for <a href=\"#prop_SkylinkLogs\"><code>SkylinkLogs</code> API</a>.</small>",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "example": [
                "\n  // Example 1: Enable both options.storeLogs and options.trace\n  skylinkDemo.setDebugMode(true);\n\n  // Example 2: Enable only options.storeLogs\n  skylinkDemo.setDebugMode({ storeLogs: true });\n\n  // Example 3: Disable debugging mode\n  skylinkDemo.setDebugMode();"
            ],
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 1,
            "description": "Stores the list of <code>on()</code> event handlers.",
            "itemtype": "attribute",
            "name": "_EVENTS",
            "params": [
                {
                    "name": "<#event>",
                    "description": "The list of event handlers associated with the event.",
                    "type": "Array",
                    "props": [
                        {
                            "name": "<#index>",
                            "description": "The event handler function.",
                            "type": "Function"
                        }
                    ]
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 12,
            "description": "Event triggered when socket connection to Signaling server has opened.",
            "itemtype": "event",
            "name": "channelOpen",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 20,
            "description": "Event triggered when socket connection to Signaling server has closed.",
            "itemtype": "event",
            "name": "channelClose",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 28,
            "description": "<blockquote class=\"info\">\n  Note that this is used only for SDK developer purposes.\n</blockquote>\nEvent triggered when receiving socket message from the Signaling server.",
            "itemtype": "event",
            "name": "channelMessage",
            "params": [
                {
                    "name": "message",
                    "description": "The socket message object.",
                    "type": "JSON"
                }
            ],
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 40,
            "description": "<blockquote class=\"info\">\n  This may be caused by Javascript errors in the event listener when subscribing to events.<br>\n  It may be resolved by checking for code errors in your Web App in the event subscribing listener.<br>\n  <code>skylinkDemo.on(\"eventName\", function () { // Errors here });</code>\n</blockquote>\nEvent triggered when socket connection encountered exception.",
            "itemtype": "event",
            "name": "channelError",
            "params": [
                {
                    "name": "error",
                    "description": "The error object.",
                    "type": "Error|String"
                }
            ],
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 54,
            "description": "Event triggered when attempting to establish socket connection to Signaling server when failed.",
            "itemtype": "event",
            "name": "channelRetry",
            "params": [
                {
                    "name": "fallbackType",
                    "description": "The current fallback state.\n  [Rel: Skylink.SOCKET_FALLBACK]",
                    "type": "String"
                },
                {
                    "name": "currentAttempt",
                    "description": "The current reconnection attempt.",
                    "type": "Number"
                }
            ],
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 65,
            "description": "Event triggered when attempt to establish socket connection to Signaling server has failed.",
            "itemtype": "event",
            "name": "socketError",
            "params": [
                {
                    "name": "errorCode",
                    "description": "The socket connection error code.\n  [Rel: Skylink.SOCKET_ERROR]",
                    "type": "String"
                },
                {
                    "name": "error",
                    "description": "The error object.",
                    "type": "Error|String|Number"
                },
                {
                    "name": "type",
                    "description": "The fallback state of the socket connection attempt.\n  [Rel: Skylink.SOCKET_FALLBACK]",
                    "type": "String"
                }
            ],
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 78,
            "description": "Event triggered when <a href=\"#method_init\"><code>init()</code> method</a> ready state changes.",
            "itemtype": "event",
            "name": "readyStateChange",
            "params": [
                {
                    "name": "readyState",
                    "description": "The current <code>init()</code> ready state.\n  [Rel: Skylink.READY_STATE_CHANGE]",
                    "type": "String"
                },
                {
                    "name": "error",
                    "description": "The error result.\n  <small>Defined only when <code>state</code> is <code>ERROR</code>.</small>",
                    "type": "JSON",
                    "optional": true,
                    "props": [
                        {
                            "name": "status",
                            "description": "The HTTP status code when failed.",
                            "type": "Number"
                        },
                        {
                            "name": "errorCode",
                            "description": "The ready state change failure code.\n  [Rel: Skylink.READY_STATE_CHANGE_ERROR]",
                            "type": "Number"
                        },
                        {
                            "name": "content",
                            "description": "The error object.",
                            "type": "Error"
                        }
                    ]
                },
                {
                    "name": "room",
                    "description": "The Room to The Room to retrieve session token for.",
                    "type": "String"
                }
            ],
            "since": "0.4.0",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 95,
            "description": "Event triggered when a Peer connection establishment state has changed.",
            "itemtype": "event",
            "name": "handshakeProgress",
            "params": [
                {
                    "name": "state",
                    "description": "The current Peer connection establishment state.\n  [Rel: Skylink.HANDSHAKE_PROGRESS]",
                    "type": "String"
                },
                {
                    "name": "peerId",
                    "description": "The Peer ID.",
                    "type": "String"
                },
                {
                    "name": "error",
                    "description": "The error object.\n  <small>Defined only when <code>state</code> is <code>ERROR</code>.</small>",
                    "type": "Error|String",
                    "optional": true
                }
            ],
            "since": "0.3.0",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 108,
            "description": "Event triggered when a Peer connection ICE gathering state has changed.",
            "itemtype": "event",
            "name": "candidateGenerationState",
            "params": [
                {
                    "name": "state",
                    "description": "The current Peer connection ICE gathering state.\n  [Rel: Skylink.CANDIDATE_GENERATION_STATE]",
                    "type": "String"
                },
                {
                    "name": "peerId",
                    "description": "The Peer ID.",
                    "type": "String"
                }
            ],
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 119,
            "description": "Event triggered when a Peer connection session description exchanging state has changed.",
            "itemtype": "event",
            "name": "peerConnectionState",
            "params": [
                {
                    "name": "state",
                    "description": "The current Peer connection session description exchanging state.\n  [Rel: Skylink.PEER_CONNECTION_STATE]",
                    "type": "String"
                },
                {
                    "name": "peerId",
                    "description": "The Peer ID.",
                    "type": "String"
                }
            ],
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 130,
            "description": "Event triggered when a Peer connection ICE connection state has changed.",
            "itemtype": "event",
            "name": "iceConnectionState",
            "params": [
                {
                    "name": "state",
                    "description": "The current Peer connection ICE connection state.\n  [Rel: Skylink.ICE_CONNECTION_STATE]",
                    "type": "String"
                },
                {
                    "name": "peerId",
                    "description": "The Peer ID.",
                    "type": "String"
                }
            ],
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 141,
            "description": "Event triggered when retrieval of Stream failed.",
            "itemtype": "event",
            "name": "mediaAccessError",
            "params": [
                {
                    "name": "error",
                    "description": "The error object.",
                    "type": "Error|String"
                },
                {
                    "name": "isScreensharing",
                    "description": "The flag if event occurred during\n  <a href=\"#method_shareScreen\"><code>shareScreen()</code> method</a> and not\n  <a href=\"#method_getUserMedia\"><code>getUserMedia()</code> method</a>.",
                    "type": "Boolean"
                },
                {
                    "name": "isAudioFallbackError",
                    "description": "The flag if event occurred during\n  retrieval of audio tracks only when <a href=\"#method_getUserMedia\"><code>getUserMedia()</code> method</a>\n  had failed to retrieve both audio and video tracks.",
                    "type": "Boolean"
                }
            ],
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 156,
            "description": "Event triggered when Stream retrieval fallback state has changed.",
            "itemtype": "event",
            "name": "mediaAccessFallback",
            "params": [
                {
                    "name": "error",
                    "description": "The error result.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "error",
                            "description": "The error object.",
                            "type": "Error|String"
                        },
                        {
                            "name": "diff",
                            "description": "The list of excepted but received audio and video tracks in Stream.\n  <small>Defined only when <code>state</code> payload is <code>FALLBACKED</code>.</small>",
                            "type": "JSON",
                            "optional": true,
                            "optdefault": "null",
                            "props": [
                                {
                                    "name": "video",
                                    "description": "The expected and received video tracks.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "video.expected",
                                    "description": "The expected video tracks.",
                                    "type": "Number"
                                },
                                {
                                    "name": "video.received",
                                    "description": "The received video tracks.",
                                    "type": "Number"
                                },
                                {
                                    "name": "audio",
                                    "description": "The expected and received audio tracks.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "audio.expected",
                                    "description": "The expected audio tracks.",
                                    "type": "Number"
                                },
                                {
                                    "name": "audio.received",
                                    "description": "The received audio tracks.",
                                    "type": "Number"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "state",
                    "description": "The fallback state.\n  [Rel: Skylink.MEDIA_ACCESS_FALLBACK_STATE]",
                    "type": "Number"
                },
                {
                    "name": "isScreensharing",
                    "description": "The flag if event occurred during\n  <a href=\"#method_shareScreen\"><code>shareScreen()</code> method</a> and not\n  <a href=\"#method_getUserMedia\"><code>getUserMedia()</code> method</a>.",
                    "type": "Boolean"
                },
                {
                    "name": "isAudioFallback",
                    "description": "The flag if event occurred during\n  retrieval of audio tracks only when <a href=\"#method_getUserMedia\"><code>getUserMedia()</code> method</a>\n  had failed to retrieve both audio and video tracks.",
                    "type": "Boolean"
                }
            ],
            "since": "0.6.3",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 182,
            "description": "Event triggered when retrieval of Stream is successful.",
            "itemtype": "event",
            "name": "mediaAccessSuccess",
            "params": [
                {
                    "name": "stream",
                    "description": "The Stream object.\n  <small>To attach it to an element: <code>attachMediaStream(videoElement, stream);</code>.</small>",
                    "type": "MediaStream"
                },
                {
                    "name": "isScreensharing",
                    "description": "The flag if event occurred during\n  <a href=\"#method_shareScreen\"><code>shareScreen()</code> method</a> and not\n  <a href=\"#method_getUserMedia\"><code>getUserMedia()</code> method</a>.",
                    "type": "Boolean"
                }
            ],
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 195,
            "description": "Event triggered when retrieval of Stream is required to complete <a href=\"#method_joinRoom\">\n<code>joinRoom()</code> method</a> request.",
            "itemtype": "event",
            "name": "mediaAccessRequired",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 204,
            "description": "Event triggered when Stream has stopped streaming.",
            "itemtype": "event",
            "name": "mediaAccessStopped",
            "params": [
                {
                    "name": "isScreensharing",
                    "description": "The flag if event occurred during\n  <a href=\"#method_shareScreen\"><code>shareScreen()</code> method</a> and not\n  <a href=\"#method_getUserMedia\"><code>getUserMedia()</code> method</a>.",
                    "type": "Boolean"
                }
            ],
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 215,
            "description": "Event triggered when a Peer joins the room.",
            "itemtype": "event",
            "name": "peerJoined",
            "params": [
                {
                    "name": "peerId",
                    "description": "The Peer ID.",
                    "type": "String"
                },
                {
                    "name": "peerInfo",
                    "description": "The Peer session information.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "userData",
                            "description": "The Peer current custom data.",
                            "type": "JSON|String"
                        },
                        {
                            "name": "settings",
                            "description": "The Peer sending Stream settings.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audio",
                                    "description": "The Peer Stream audio settings.\n  <small>When defined as <code>false</code>, it means there is no audio being sent from Peer.</small>",
                                    "type": "Boolean|JSON"
                                },
                                {
                                    "name": "audio.stereo",
                                    "description": "The flag if stereo band is configured\n  when encoding audio codec is <a href=\"#attr_AUDIO_CODEC\"><code>OPUS</code></a> for receiving audio data.",
                                    "type": "Boolean",
                                    "optional": true
                                },
                                {
                                    "name": "video",
                                    "description": "The Peer Stream video settings.\n  <small>When defined as <code>false</code>, it means there is no video being sent from Peer.</small>",
                                    "type": "Boolean|JSON"
                                },
                                {
                                    "name": "video.resolution",
                                    "description": "The Peer Stream video resolution.\n  [Rel: Skylink.VIDEO_RESOLUTION]",
                                    "type": "JSON"
                                },
                                {
                                    "name": "video.resolution.width",
                                    "description": "The Peer Stream video resolution width.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.resolution.height",
                                    "description": "The Peer Stream video resolution height.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.frameRate",
                                    "description": "The Peer Stream video\n  <a href=\"https://en.wikipedia.org/wiki/Frame_rate\">frameRate</a> per second (fps).",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "video.screenshare",
                                    "description": "The flag if Peer Stream is a screensharing Stream.",
                                    "type": "Boolean",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth",
                                    "description": "The maximum streaming bandwidth sent from Peer.",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.audio",
                                    "description": "The maximum audio streaming bandwidth sent from Peer.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.video",
                                    "description": "The maximum video streaming bandwidth sent from Peer.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "bandwidth.data",
                                    "description": "The maximum data streaming bandwidth sent from Peer.",
                                    "type": "Number",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "mediaStatus",
                            "description": "The Peer Stream muted settings.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "audioMuted",
                                    "description": "The flag if Peer Stream audio tracks is muted or not.\n  <small>If Peer <code>peerInfo.settings.audio</code> is false, this will be defined as <code>true</code>.</small>",
                                    "type": "Boolean"
                                },
                                {
                                    "name": "videoMuted",
                                    "description": "The flag if Peer Stream audio tracks is muted or not.\n  <small>If Peer <code>peerInfo.settings.video</code> is false, this will be defined as <code>true</code>.</small>",
                                    "type": "Boolean"
                                }
                            ]
                        },
                        {
                            "name": "agent",
                            "description": "The Peer agent information.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "name",
                                    "description": "The Peer agent name.\n  <small>Data may be accessing browser or non-Web SDK name.</small>",
                                    "type": "String"
                                },
                                {
                                    "name": "version",
                                    "description": "The Peer agent version.\n  <small>Data may be accessing browser or non-Web SDK version.</small>",
                                    "type": "Number"
                                },
                                {
                                    "name": "os",
                                    "description": "The Peer platform name.\n <small>Data may be accessing OS platform version from Web SDK.</small>",
                                    "type": "String",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "room",
                            "description": "The Room Peer is from.",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "isSelf",
                    "description": "The flag if Peer is User.",
                    "type": "Boolean"
                }
            ],
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 258,
            "description": "Event triggered when a Peer connection has been refreshed.",
            "itemtype": "event",
            "name": "peerRestart",
            "params": [
                {
                    "name": "peerId",
                    "description": "The Peer ID.",
                    "type": "String"
                },
                {
                    "name": "peerInfo",
                    "description": "The Peer session information.\n  <small>Object signature matches the <code>peerInfo</code> parameter payload received in the\n  <a href=\"#event_peerJoined\"><code>peerJoined</code> event</a>.</small>",
                    "type": "JSON"
                },
                {
                    "name": "isSelfInitiateRestart",
                    "description": "The flag if User is initiating the Peer connection refresh.",
                    "type": "Boolean"
                }
            ],
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 271,
            "description": "Event triggered when a Peer session information has been updated.",
            "itemtype": "event",
            "name": "peerUpdated",
            "params": [
                {
                    "name": "peerId",
                    "description": "The Peer ID.",
                    "type": "String"
                },
                {
                    "name": "peerInfo",
                    "description": "The Peer session information.\n  <small>Object signature matches the <code>peerInfo</code> parameter payload received in the\n  <a href=\"#event_peerJoined\"><code>peerJoined</code> event</a>.</small>",
                    "type": "JSON"
                },
                {
                    "name": "isSelf",
                    "description": "The flag if Peer is User.",
                    "type": "Boolean"
                }
            ],
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 284,
            "description": "Event triggered when a Peer leaves the room.",
            "itemtype": "event",
            "name": "peerLeft",
            "params": [
                {
                    "name": "peerId",
                    "description": "The Peer ID.",
                    "type": "String"
                },
                {
                    "name": "peerInfo",
                    "description": "The Peer session information.\n  <small>Object signature matches the <code>peerInfo</code> parameter payload received in the\n  <a href=\"#event_peerJoined\"><code>peerJoined</code> event</a>.</small>",
                    "type": "JSON"
                },
                {
                    "name": "isSelf",
                    "description": "The flag if Peer is User.",
                    "type": "Boolean"
                }
            ],
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 297,
            "description": "Event triggered when Room session has ended abruptly due to network disconnections.",
            "itemtype": "event",
            "name": "sessionDisconnect",
            "params": [
                {
                    "name": "peerId",
                    "description": "The User's Room session Peer ID.",
                    "type": "String"
                },
                {
                    "name": "peerInfo",
                    "description": "The User's Room session information.\n  <small>Object signature matches the <code>peerInfo</code> parameter payload received in the\n  <a href=\"#event_peerJoined\"><code>peerJoined</code> event</a>.</small>",
                    "type": "JSON"
                }
            ],
            "since": "0.6.10",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 309,
            "description": "Event triggered when receiving Peer Stream.",
            "itemtype": "event",
            "name": "incomingStream",
            "params": [
                {
                    "name": "peerId",
                    "description": "The Peer ID.",
                    "type": "String"
                },
                {
                    "name": "stream",
                    "description": "The Stream object.\n  <small>To attach it to an element: <code>attachMediaStream(videoElement, stream);</code>.</small>",
                    "type": "MediaStream"
                },
                {
                    "name": "isSelf",
                    "description": "The flag if Peer is User.",
                    "type": "Boolean"
                },
                {
                    "name": "peerInfo",
                    "description": "The Peer session information.\n  <small>Object signature matches the <code>peerInfo</code> parameter payload received in the\n  <a href=\"#event_peerJoined\"><code>peerJoined</code> event</a>.</small>",
                    "type": "JSON"
                }
            ],
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 324,
            "description": "Event triggered when receiving message from Peer.",
            "itemtype": "event",
            "name": "incomingMessage",
            "params": [
                {
                    "name": "message",
                    "description": "The message result.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "content",
                            "description": "The message object.",
                            "type": "JSON|String"
                        },
                        {
                            "name": "senderPeerId",
                            "description": "The sender Peer ID.",
                            "type": "String"
                        },
                        {
                            "name": "targetPeerId",
                            "description": "The value of the <code>targetPeerId</code>\n  defined in <a href=\"#method_sendP2PMessage\"><code>sendP2PMessage()</code> method</a> or\n  <a href=\"#method_sendMessage\"><code>sendMessage()</code> method</a>.",
                            "type": "String|Array",
                            "optional": true,
                            "optdefault": "null"
                        },
                        {
                            "name": "isPrivate",
                            "description": "The flag if message is targeted or not, basing\n  off the <code>targetPeerId</code> parameter being defined in\n  <a href=\"#method_sendP2PMessage\"><code>sendP2PMessage()</code> method</a> or\n  <a href=\"#method_sendMessage\"><code>sendMessage()</code> method</a>.",
                            "type": "Boolean"
                        },
                        {
                            "name": "isDataChannel",
                            "description": "The flag if message is sent from\n  <a href=\"#method_sendP2PMessage\"><code>sendP2PMessage()</code> method</a>.",
                            "type": "Boolean"
                        }
                    ]
                },
                {
                    "name": "peerInfo",
                    "description": "The Peer session information.\n  <small>Object signature matches the <code>peerInfo</code> parameter payload received in the\n  <a href=\"#event_peerJoined\"><code>peerJoined</code> event</a>.</small>",
                    "type": "JSON"
                },
                {
                    "name": "isSelf",
                    "description": "The flag if Peer is User.",
                    "type": "Boolean"
                }
            ],
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 348,
            "description": "Event triggered when receiving completed data transfer from Peer.",
            "itemtype": "event",
            "name": "incomingData",
            "params": [
                {
                    "name": "data",
                    "description": "The data.",
                    "type": "Blob|String"
                },
                {
                    "name": "transferId",
                    "description": "The data transfer ID.",
                    "type": "String"
                },
                {
                    "name": "peerId",
                    "description": "The Peer ID.",
                    "type": "String"
                },
                {
                    "name": "transferInfo",
                    "description": "The data transfer information.\n  <small>Object signature matches the <code>transferInfo</code> parameter payload received in the\n  <a href=\"#event_dataTransferState\"><code>dataTransferState</code> event</a>.</small>",
                    "type": "JSON"
                },
                {
                    "name": "isSelf",
                    "description": "The flag if Peer is User.",
                    "type": "Boolean"
                }
            ],
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 364,
            "description": "Event triggered when receiving upload data transfer from Peer.",
            "itemtype": "event",
            "name": "incomingDataRequest",
            "params": [
                {
                    "name": "transferId",
                    "description": "The transfer ID.",
                    "type": "String"
                },
                {
                    "name": "peerId",
                    "description": "The Peer ID.",
                    "type": "String"
                },
                {
                    "name": "transferInfo",
                    "description": "The data transfer information.\n  <small>Object signature matches the <code>transferInfo</code> parameter payload received in the\n  <a href=\"#event_dataTransferState\"><code>dataTransferState</code> event</a>.</small>",
                    "type": "String"
                },
                {
                    "name": "isSelf",
                    "description": "The flag if Peer is User.",
                    "type": "Boolean"
                }
            ],
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 378,
            "description": "Event triggered when Room locked status has changed.",
            "itemtype": "event",
            "name": "roomLock",
            "params": [
                {
                    "name": "isLocked",
                    "description": "The flag if Room is locked.",
                    "type": "Boolean"
                },
                {
                    "name": "peerInfo",
                    "description": "The Peer session information.\n  <small>Object signature matches the <code>peerInfo</code> parameter payload received in the\n  <a href=\"#event_peerJoined\"><code>peerJoined</code> event</a>.</small>",
                    "type": "JSON"
                },
                {
                    "name": "isSelf",
                    "description": "The flag if User changed the Room locked status.",
                    "type": "Boolean"
                }
            ],
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 391,
            "description": "Event triggered when a Datachannel connection state has changed.",
            "itemtype": "event",
            "name": "dataChannelState",
            "params": [
                {
                    "name": "state",
                    "description": "The current Datachannel connection state.\n  [Rel: Skylink.DATA_CHANNEL_STATE]",
                    "type": "String"
                },
                {
                    "name": "peerId",
                    "description": "The Peer ID.",
                    "type": "String"
                },
                {
                    "name": "error",
                    "description": "The error object.\n  <small>Defined only when <code>state</code> payload is <code>ERROR</code>.</small>",
                    "type": "Error",
                    "optional": true
                },
                {
                    "name": "channelName",
                    "description": "The DataChannel ID.",
                    "type": "String"
                },
                {
                    "name": "channelType",
                    "description": "The DataChannel type.\n  [Rel: Skylink.DATA_CHANNEL_TYPE]",
                    "type": "String"
                }
            ],
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 407,
            "description": "Event triggered when a data transfer state has changed.",
            "itemtype": "event",
            "name": "dataTransferState",
            "params": [
                {
                    "name": "state",
                    "description": "The current data transfer state.\n  [Rel: Skylink.DATA_TRANSFER_STATE]",
                    "type": "String"
                },
                {
                    "name": "transferId",
                    "description": "The data transfer ID.",
                    "type": "String"
                },
                {
                    "name": "peerId",
                    "description": "The Peer ID.",
                    "type": "String"
                },
                {
                    "name": "transferInfo",
                    "description": "The data transfer information.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "data",
                            "description": "The data object.\n  <small>Defined only when <code>state</code> payload is <code>UPLOAD_STARTED</code> or\n  <code>DOWNLOAD_COMPLETED</code>.</small>",
                            "type": "Blob|String",
                            "optional": true
                        },
                        {
                            "name": "name",
                            "description": "The data transfer name.",
                            "type": "String"
                        },
                        {
                            "name": "size",
                            "description": "The data transfer data object original size.",
                            "type": "Number"
                        },
                        {
                            "name": "dataType",
                            "description": "The data transfer session type.\n  [Rel: Skylink.DATA_TRANSFER_SESSION_TYPE]",
                            "type": "String"
                        },
                        {
                            "name": "timeout",
                            "description": "The flag if message is targeted or not, basing\n  off the <code>targetPeerId</code> parameter being defined in\n  <a href=\"#method_sendURLData\"><code>sendURLData()</code> method</a> or\n  <a href=\"#method_sendBlobData\"><code>sendBlobData()</code> method</a>.",
                            "type": "Number"
                        },
                        {
                            "name": "isPrivate",
                            "description": "The flag if data transfer",
                            "type": "Boolean"
                        }
                    ]
                },
                {
                    "name": "error",
                    "description": "The error result.\n  <small>Defined only when <code>state</code> payload is <code>ERROR</code> or <code>CANCEL</code>.</small>",
                    "type": "JSON",
                    "optional": true,
                    "props": [
                        {
                            "name": "message",
                            "description": "The error object.",
                            "type": "Error|String"
                        },
                        {
                            "name": "transferType",
                            "description": "The data transfer direction from where the error occurred.\n  [Rel: Skylink.DATA_TRANSFER_TYPE]",
                            "type": "String"
                        }
                    ]
                }
            ],
            "since": "0.4.1",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 437,
            "description": "Event triggered when Signaling server reaction state has changed.",
            "itemtype": "event",
            "name": "systemAction",
            "params": [
                {
                    "name": "action",
                    "description": "The current Signaling server reaction state.\n  [Rel: Skylink.SYSTEM_ACTION]",
                    "type": "String"
                },
                {
                    "name": "message",
                    "description": "The message.",
                    "type": "String"
                },
                {
                    "name": "reason",
                    "description": "The Signaling server reaction state reason of action code.\n  [Rel: Skylink.SYSTEM_ACTION_REASON]",
                    "type": "String"
                }
            ],
            "since": "0.5.1",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 450,
            "description": "Event triggered when a server Peer joins the room.",
            "itemtype": "event",
            "name": "serverPeerJoined",
            "params": [
                {
                    "name": "peerId",
                    "description": "The Peer ID.",
                    "type": "String"
                },
                {
                    "name": "serverPeerType",
                    "description": "The server Peer type\n  [Rel: Skylink.SERVER_PEER_TYPE]",
                    "type": "String"
                }
            ],
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 461,
            "description": "Event triggered when a server Peer leaves the room.",
            "itemtype": "event",
            "name": "serverPeerLeft",
            "params": [
                {
                    "name": "peerId",
                    "description": "The Peer ID.",
                    "type": "String"
                },
                {
                    "name": "serverPeerType",
                    "description": "The server Peer type\n  [Rel: Skylink.SERVER_PEER_TYPE]",
                    "type": "String"
                }
            ],
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 472,
            "description": "Event triggered when a server Peer connection has been refreshed.",
            "itemtype": "event",
            "name": "serverPeerRestart",
            "params": [
                {
                    "name": "peerId",
                    "description": "The Peer ID.",
                    "type": "String"
                },
                {
                    "name": "serverPeerType",
                    "description": "The server Peer type\n  [Rel: Skylink.SERVER_PEER_TYPE]",
                    "type": "String"
                }
            ],
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 483,
            "description": "Event triggered when Peer Stream streaming has stopped.",
            "itemtype": "event",
            "name": "streamEnded",
            "params": [
                {
                    "name": "peerId",
                    "description": "The Peer ID.",
                    "type": "String"
                },
                {
                    "name": "peerInfo",
                    "description": "The Peer session information.\n  <small>Object signature matches the <code>peerInfo</code> parameter payload received in the\n  <a href=\"#event_peerJoined\"><code>peerJoined</code> event</a>.</small>",
                    "type": "JSON"
                },
                {
                    "name": "isSelf",
                    "description": "The flag if Peer is User.",
                    "type": "Boolean"
                },
                {
                    "name": "isScreensharing",
                    "description": "The flag if Peer Stream is a screensharing Stream.",
                    "type": "Boolean"
                }
            ],
            "since": "0.5.10",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 497,
            "description": "Event triggered when Peer Stream audio or video tracks has been muted.",
            "itemtype": "event",
            "name": "streamMuted",
            "params": [
                {
                    "name": "peerId",
                    "description": "The Peer ID.",
                    "type": "String"
                },
                {
                    "name": "peerInfo",
                    "description": "The Peer session information.\n  <small>Object signature matches the <code>peerInfo</code> parameter payload received in the\n  <a href=\"#event_peerJoined\"><code>peerJoined</code> event</a>.</small>",
                    "type": "JSON"
                },
                {
                    "name": "isSelf",
                    "description": "The flag if Peer is User.",
                    "type": "Boolean"
                },
                {
                    "name": "isScreensharing",
                    "description": "The flag if Peer Stream is a screensharing Stream.",
                    "type": "Boolean"
                }
            ],
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 511,
            "description": "Event triggered when <a href=\"#method_getPeers\"><code>getPeers()</code> method</a> retrieval state changes.",
            "itemtype": "event",
            "name": "getPeersStateChange",
            "params": [
                {
                    "name": "state",
                    "description": "The current <code>getPeers()</code> retrieval state.\n  [Rel: Skylink.GET_PEERS_STATE]",
                    "type": "String"
                },
                {
                    "name": "privilegedPeerId",
                    "description": "The User's privileged Peer ID.",
                    "type": "String"
                },
                {
                    "name": "peerList",
                    "description": "The list of Peer IDs Rooms within the same App space.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "#room",
                            "description": "The list of Peer IDs associated with the Room defined in <code>#room</code> property.",
                            "type": "Array"
                        }
                    ]
                }
            ],
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 524,
            "description": "Event triggered when <a href=\"#method_introducePeer\"><code>introducePeer()</code> method</a>\nintroduction request state changes.",
            "itemtype": "event",
            "name": "introduceStateChange",
            "params": [
                {
                    "name": "state",
                    "description": "The current <code>introducePeer()</code> introduction request state.\n  [Rel: Skylink.INTRODUCE_STATE]",
                    "type": "String"
                },
                {
                    "name": "privilegedPeerId",
                    "description": "The User's privileged Peer ID.",
                    "type": "String"
                },
                {
                    "name": "sendingPeerId",
                    "description": "The Peer ID to be connected with <code>receivingPeerId</code>.",
                    "type": "String"
                },
                {
                    "name": "receivingPeerId",
                    "description": "The Peer ID to be connected with <code>sendingPeerId</code>.",
                    "type": "String"
                },
                {
                    "name": "reason",
                    "description": "The error object.\n  <small>Defined only when <code>state</code> payload is <code>ERROR</code>.</small>",
                    "type": "String",
                    "optional": true
                }
            ],
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 540,
            "description": "Event triggered when <a href=\"#method_getConnectionStatus\"><code>getConnectionStatus()</code> method</a>\nretrieval state changes.",
            "itemtype": "event",
            "name": "getConnectionStatusStateChange",
            "params": [
                {
                    "name": "state",
                    "description": "The current <code>getConnectionStatus()</code> retrieval state.\n  [Rel: Skylink.GET_CONNECTION_STATUS_STATE]",
                    "type": "Number"
                },
                {
                    "name": "peerId",
                    "description": "The Peer ID.",
                    "type": "String"
                },
                {
                    "name": "stats",
                    "description": "The Peer connection current stats.\n  <small>Defined only when <code>state</code> payload is <code>RETRIEVE_SUCCESS</code>.</small>",
                    "type": "JSON",
                    "optional": true,
                    "props": [
                        {
                            "name": "raw",
                            "description": "The Peer connection raw stats before parsing.",
                            "type": "JSON"
                        },
                        {
                            "name": "audio",
                            "description": "The Peer connection audio streaming stats.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "sending",
                                    "description": "The Peer connection sending audio streaming stats.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "sending.bytes",
                                    "description": "The Peer connection sending audio streaming bytes.",
                                    "type": "Number"
                                },
                                {
                                    "name": "sending.packets",
                                    "description": "The Peer connection sending audio streaming packets.",
                                    "type": "Number"
                                },
                                {
                                    "name": "sending.packetsLost",
                                    "description": "The Peer connection sending audio streaming packets lost.",
                                    "type": "Number"
                                },
                                {
                                    "name": "sending.ssrc",
                                    "description": "The Peer connection sending audio streaming RTP packets SSRC.",
                                    "type": "Number"
                                },
                                {
                                    "name": "sending.rtt",
                                    "description": "The Peer connection sending audio streaming RTT (Round-trip delay time).\n  <small>Defined as <code>0</code> if it's not present in original raw stats before parsing.</small>",
                                    "type": "Number"
                                },
                                {
                                    "name": "receiving",
                                    "description": "The Peer connection receiving audio streaming stats.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "receiving.bytes",
                                    "description": "The Peer connection sending audio streaming bytes.",
                                    "type": "Number"
                                },
                                {
                                    "name": "receiving.packets",
                                    "description": "The Peer connection receiving audio streaming packets.",
                                    "type": "Number"
                                },
                                {
                                    "name": "receiving.packetsLost",
                                    "description": "The Peer connection receiving audio streaming packets lost.",
                                    "type": "Number"
                                },
                                {
                                    "name": "receiving.ssrc",
                                    "description": "The Peer connection receiving audio streaming RTP packets SSRC.",
                                    "type": "Number"
                                }
                            ]
                        },
                        {
                            "name": "video",
                            "description": "The Peer connection video streaming stats.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "sending",
                                    "description": "The Peer connection sending video streaming stats.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "sending.bytes",
                                    "description": "The Peer connection sending video streaming bytes.",
                                    "type": "Number"
                                },
                                {
                                    "name": "sending.packets",
                                    "description": "The Peer connection sending video streaming packets.",
                                    "type": "Number"
                                },
                                {
                                    "name": "sending.packetsLost",
                                    "description": "The Peer connection sending video streaming packets lost.",
                                    "type": "Number"
                                },
                                {
                                    "name": "sending.ssrc",
                                    "description": "The Peer connection sending video streaming RTP packets SSRC.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "sending.rtt",
                                    "description": "The Peer connection sending video streaming RTT (Round-trip delay time).\n  <small>Defined as <code>0</code> if it's not present in original raw stats before parsing.</small>",
                                    "type": "Number"
                                },
                                {
                                    "name": "receiving",
                                    "description": "The Peer connection receiving video streaming stats.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "receiving.bytes",
                                    "description": "The Peer connection receiving video streaming bytes.",
                                    "type": "Number"
                                },
                                {
                                    "name": "receiving.packets",
                                    "description": "The Peer connection receiving video streaming packets.",
                                    "type": "Number"
                                },
                                {
                                    "name": "receiving.packetsLost",
                                    "description": "The Peer connection receiving video streaming packets lost.",
                                    "type": "Number"
                                },
                                {
                                    "name": "receiving.ssrc",
                                    "description": "The Peer connection receiving video streaming RTP packets SSRC.",
                                    "type": "Number"
                                }
                            ]
                        },
                        {
                            "name": "selectedCandidate",
                            "description": "The Peer connection selected ICE candidate pair stats.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "local",
                                    "description": "The Peer connection selected local ICE candidate.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "local.ipAddress",
                                    "description": "The Peer connection selected\n  local ICE candidate IP address.",
                                    "type": "String"
                                },
                                {
                                    "name": "local.portNumber",
                                    "description": "The Peer connection selected\n  local ICE candidate port number.",
                                    "type": "Number"
                                },
                                {
                                    "name": "local.transport",
                                    "description": "The Peer connection selected\n  local ICE candidate IP transport type.",
                                    "type": "String"
                                },
                                {
                                    "name": "local.candidateType",
                                    "description": "The Peer connection selected\n  local ICE candidate type.",
                                    "type": "String"
                                },
                                {
                                    "name": "remote",
                                    "description": "The Peer connection selected remote ICE candidate.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "remote.ipAddress",
                                    "description": "The Peer connection selected\n  remote ICE candidate IP address.",
                                    "type": "String"
                                },
                                {
                                    "name": "remote.portNumber",
                                    "description": "The Peer connection selected\n  remote ICE candidate port number.",
                                    "type": "Number"
                                },
                                {
                                    "name": "remote.transport",
                                    "description": "The Peer connection selected\n  remote ICE candidate IP transport type.",
                                    "type": "String"
                                },
                                {
                                    "name": "remote.candidateType",
                                    "description": "The Peer connection selected\n  remote ICE candidate type.",
                                    "type": "String"
                                }
                            ]
                        },
                        {
                            "name": "connection",
                            "description": "The Peer connection object stats.",
                            "type": "JSON",
                            "props": [
                                {
                                    "name": "iceConnectionState",
                                    "description": "The Peer connection ICE connection state.",
                                    "type": "String"
                                },
                                {
                                    "name": "iceGatheringState",
                                    "description": "The Peer connection ICE gathering state.",
                                    "type": "String"
                                },
                                {
                                    "name": "signalingState",
                                    "description": "The Peer connection signaling state.",
                                    "type": "String"
                                },
                                {
                                    "name": "localDescription",
                                    "description": "The Peer connection local session description.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "localDescription.type",
                                    "description": "The Peer connection local session description type.",
                                    "type": "String"
                                },
                                {
                                    "name": "localDescription.sdp",
                                    "description": "The Peer connection local session description SDP.",
                                    "type": "String"
                                },
                                {
                                    "name": "remoteDescription",
                                    "description": "The Peer connection remote session description.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "remoteDescription.type",
                                    "description": "The Peer connection remote session description type.",
                                    "type": "String"
                                },
                                {
                                    "name": "remoteDescription.sdp",
                                    "description": "The Peer connection remote session description sdp.",
                                    "type": "String"
                                },
                                {
                                    "name": "candidates",
                                    "description": "The Peer connection list of ICE candidates sent or received.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "candidates.sending",
                                    "description": "The Peer connection list of local ICE candidates sent.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "candidates.sending.host",
                                    "description": "The Peer connection list of local\n  <code>\"host\"</code> ICE candidates sent.",
                                    "type": "Array"
                                },
                                {
                                    "name": "candidates.sending.srflx",
                                    "description": "The Peer connection list of local\n  <code>\"srflx\"</code> ICE candidates sent.",
                                    "type": "Array"
                                },
                                {
                                    "name": "candidates.sending.relay",
                                    "description": "The Peer connection list of local\n  <code>\"relay\"</code> candidates sent.",
                                    "type": "Array"
                                },
                                {
                                    "name": "candidates.receiving",
                                    "description": "The Peer connection list of remote ICE candidates received.",
                                    "type": "JSON"
                                },
                                {
                                    "name": "candidates.receiving.host",
                                    "description": "The Peer connection list of remote\n  <code>\"host\"</code> ICE candidates received.",
                                    "type": "Array"
                                },
                                {
                                    "name": "candidates.receiving.srflx",
                                    "description": "The Peer connection list of remote\n  <code>\"srflx\"</code> ICE candidates received.",
                                    "type": "Array"
                                },
                                {
                                    "name": "candidates.receiving.relay",
                                    "description": "The Peer connection list of remote\n  <code>\"relay\"</code> ICE candidates received.",
                                    "type": "Array"
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "error",
                    "description": "The error object received.\n  <small>Defined only when <code>state</code> payload is <code>RETRIEVE_ERROR</code>.</small>",
                    "type": "Error"
                }
            ],
            "since": "0.6.14",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 628,
            "description": "Stores the list of <code>once()</code> event handlers.\nThese events are only triggered once.",
            "itemtype": "attribute",
            "name": "_onceEvents",
            "params": [
                {
                    "name": "<#event>",
                    "description": "The list of event handlers associated with the event.",
                    "type": "Array",
                    "props": [
                        {
                            "name": "<#index>",
                            "description": "The array of event handler function and its condition function.",
                            "type": "Array"
                        }
                    ]
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 641,
            "description": "Stores the timestamps data used for throttling.",
            "itemtype": "attribute",
            "name": "_timestamp",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.5.8",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 654,
            "description": "Function that subscribes a listener to an event.",
            "itemtype": "method",
            "name": "on",
            "params": [
                {
                    "name": "eventName",
                    "description": "The event.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "The listener.\n  <small>This will be invoked when event is triggered.</small>",
                    "type": "Function"
                }
            ],
            "example": [
                "\n  // Example 1: Subscribing to \"peerJoined\" event\n  skylinkDemo.on(\"peerJoined\", function (peerId, peerInfo, isSelf) {\n    console.info(\"peerJoined event has been triggered with:\", peerId, peerInfo, isSelf);\n  });"
            ],
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 678,
            "description": "Function that subscribes a listener to an event once.",
            "itemtype": "method",
            "name": "once",
            "params": [
                {
                    "name": "eventName",
                    "description": "The event.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "The listener.\n  <small>This will be invoked once when event is triggered and conditional function is satisfied.</small>",
                    "type": "Function"
                },
                {
                    "name": "condition",
                    "description": "The conditional function that will be invoked when event is triggered.\n  <small>Return <code>true</code> when invoked to satisfy condition.</small>\n  <small>When not provided, the conditional function will always return <code>true</code>.</small>",
                    "type": "Function",
                    "optional": true
                },
                {
                    "name": "fireAlways",
                    "description": "The flag that indicates if <code>once()</code> should act like\n  <code>on()</code> but only invoke listener only when conditional function is satisfied.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "example": [
                "\n  // Example 1: Subscribing to \"peerJoined\" event that triggers without condition\n  skylinkDemo.once(\"peerJoined\", function (peerId, peerInfo, isSelf) {\n    console.info(\"peerJoined event has been triggered once with:\", peerId, peerInfo, isSelf);\n  });\n\n  // Example 2: Subscribing to \"incomingStream\" event that triggers with condition\n  skylinkDemo.once(\"incomingStream\", function (peerId, stream, isSelf, peerInfo) {\n    console.info(\"incomingStream event has been triggered with User stream:\", stream);\n  }, function (peerId, peerInfo, isSelf) {\n    return isSelf;\n  });\n\n  // Example 3: Subscribing to \"dataTransferState\" event that triggers always only when condition is satisfied\n  skylinkDemo.once(\"dataTransferState\", function (state, transferId, peerId, transferInfo) {\n    console.info(\"Received data transfer from Peer:\", transferInfo.data);\n  }, function (state, transferId, peerId) {\n    if (state === skylinkDemo.DATA_TRANSFER_STATE.UPLOAD_REQUEST) {\n      skylinkDemo.acceptDataTransfer(peerId, transferId);\n    }\n    return state === skylinkDemo.DATA_TRANSFER_STATE.DOWNLOAD_COMPLETED;\n  }, true);"
            ],
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 736,
            "description": "Function that unsubscribes listeners from an event.",
            "itemtype": "method",
            "name": "off",
            "params": [
                {
                    "name": "eventName",
                    "description": "The event.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "The listener to unsubscribe.\n- When not provided, all listeners associated to the event will be unsubscribed.",
                    "type": "Function",
                    "optional": true
                }
            ],
            "example": [
                "\n  // Example 1: Unsubscribe all \"peerJoined\" event\n  skylinkDemo.off(\"peerJoined\");\n\n  // Example 2: Unsubscribe only one listener from \"peerJoined event\"\n  var pJListener = function (peerId, peerInfo, isSelf) {\n    console.info(\"peerJoined event has been triggered with:\", peerId, peerInfo, isSelf);\n  };\n\n  skylinkDemo.off(\"peerJoined\", pJListener);"
            ],
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 785,
            "description": "Function that triggers an event.\nThe rest of the parameters after the <code>eventName</code> parameter is considered as the event parameter payloads.",
            "itemtype": "method",
            "name": "_trigger",
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 839,
            "description": "Function that checks if the current state condition is met before subscribing\n  event handler to wait for condition to be fulfilled.",
            "itemtype": "method",
            "name": "_condition",
            "access": "private",
            "tagname": "",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 865,
            "description": "Function that starts an interval check to wait for a condition to be resolved.",
            "itemtype": "method",
            "name": "_wait",
            "access": "private",
            "tagname": "",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/skylink-events.js",
            "line": 903,
            "description": "Function that throttles a method function to prevent multiple invokes over a specified amount of time.\nReturns a function to be invoked <code>._throttle(fn, 1000)()</code> to make throttling functionality work.",
            "itemtype": "method",
            "name": "_throttle",
            "access": "private",
            "tagname": "",
            "since": "0.5.8",
            "class": "Skylink"
        },
        {
            "file": "source/socket-channel.js",
            "line": 1,
            "description": "The list of <a href=\"#method_joinRoom\"><code>joinRoom()</code> method</a> socket connection failure states.",
            "itemtype": "attribute",
            "name": "SOCKET_ERROR",
            "params": [
                {
                    "name": "CONNECTION_FAILED",
                    "description": "<small>Value <code>0</code></small>\n  The value of the failure state when <code>joinRoom()</code> socket connection failed to establish with\n  the Signaling server at the first attempt.",
                    "type": "Number"
                },
                {
                    "name": "RECONNECTION_FAILED",
                    "description": "<small>Value <code>-1</code></small>\n  The value of the failure state when <code>joinRoom()</code> socket connection failed to establish\n  the Signaling server after the first attempt.",
                    "type": "Number"
                },
                {
                    "name": "CONNECTION_ABORTED",
                    "description": "<small>Value <code>-2</code></small>\n  The value of the failure state when <code>joinRoom()</code> socket connection will not attempt\n  to reconnect after the failure of the first attempt in <code>CONNECTION_FAILED</code> as there\n  are no more ports or transports to attempt for reconnection.",
                    "type": "Number"
                },
                {
                    "name": "RECONNECTION_ABORTED",
                    "description": "<small>Value <code>-3</code></small>\n  The value of the failure state when <code>joinRoom()</code> socket connection will not attempt\n  to reconnect after the failure of several attempts in <code>RECONNECTION_FAILED</code> as there\n  are no more ports or transports to attempt for reconnection.",
                    "type": "Number"
                },
                {
                    "name": "RECONNECTION_ATTEMPT",
                    "description": "<small>Value <code>-4</code></small>\n  The value of the failure state when <code>joinRoom()</code> socket connection is attempting\n  to reconnect with a new port or transport after the failure of attempts in\n  <code>CONNECTION_FAILED</code> or <code>RECONNECTED_FAILED</code>.",
                    "type": "Number"
                }
            ],
            "type": "JSON",
            "readonly": "",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/socket-channel.js",
            "line": 35,
            "description": "The list of <a href=\"#method_joinRoom\"><code>joinRoom()</code> method</a> socket connection reconnection states.",
            "itemtype": "attribute",
            "name": "SOCKET_FALLBACK",
            "params": [
                {
                    "name": "NON_FALLBACK",
                    "description": "<small>Value <code>\"nonfallback\"</code></small>\n  The value of the reconnection state when <code>joinRoom()</code> socket connection is at its initial state\n  without transitioning to any new socket port or transports yet.",
                    "type": "String"
                },
                {
                    "name": "FALLBACK_PORT",
                    "description": "<small>Value <code>\"fallbackPortNonSSL\"</code></small>\n  The value of the reconnection state when <code>joinRoom()</code> socket connection is reconnecting with\n  another new HTTP port using WebSocket transports to attempt to establish connection with Signaling server.",
                    "type": "String"
                },
                {
                    "name": "FALLBACK_PORT_SSL",
                    "description": "<small>Value <code>\"fallbackPortSSL\"</code></small>\n  The value of the reconnection state when <code>joinRoom()</code> socket connection is reconnecting with\n  another new HTTPS port using WebSocket transports to attempt to establish connection with Signaling server.",
                    "type": "String"
                },
                {
                    "name": "LONG_POLLING",
                    "description": "<small>Value <code>\"fallbackLongPollingNonSSL\"</code></small>\n  The value of the reconnection state when <code>joinRoom()</code> socket connection is reconnecting with\n  another new HTTP port using Polling transports to attempt to establish connection with Signaling server.",
                    "type": "String"
                },
                {
                    "name": "LONG_POLLING",
                    "description": "<small>Value <code>\"fallbackLongPollingSSL\"</code></small>\n  The value of the reconnection state when <code>joinRoom()</code> socket connection is reconnecting with\n  another new HTTPS port using Polling transports to attempt to establish connection with Signaling server.",
                    "type": "String"
                }
            ],
            "type": "JSON",
            "readonly": "",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/socket-channel.js",
            "line": 66,
            "description": "Stores the current socket connection information.",
            "itemtype": "attribute",
            "name": "_socketSession",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.13",
            "class": "Skylink"
        },
        {
            "file": "source/socket-channel.js",
            "line": 76,
            "description": "Stores the queued socket messages.\nThis is to prevent too many sent over less than a second interval that might cause dropped messages\n  or jams to the Signaling connection.",
            "itemtype": "attribute",
            "name": "_socketMessageQueue",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "since": "0.5.8",
            "class": "Skylink"
        },
        {
            "file": "source/socket-channel.js",
            "line": 88,
            "description": "Stores the <code>setTimeout</code> to sent queued socket messages.",
            "itemtype": "attribute",
            "name": "_socketMessageTimeout",
            "type": "Object",
            "access": "private",
            "tagname": "",
            "since": "0.5.8",
            "class": "Skylink"
        },
        {
            "file": "source/socket-channel.js",
            "line": 98,
            "description": "Stores the list of socket ports to use to connect to the Signaling.\nThese ports are defined by default which is commonly used currently by the Signaling.\nShould re-evaluate this sometime.",
            "itemtype": "attribute",
            "name": "_socketPorts",
            "params": [
                {
                    "name": "http:",
                    "description": "The list of HTTP socket ports.",
                    "type": "Array"
                },
                {
                    "name": "https:",
                    "description": "The list of HTTPS socket ports.",
                    "type": "Array"
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.5.8",
            "class": "Skylink"
        },
        {
            "file": "source/socket-channel.js",
            "line": 115,
            "description": "Stores the flag that indicates if socket connection to the Signaling has opened.",
            "itemtype": "attribute",
            "name": "_channelOpen",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/socket-channel.js",
            "line": 125,
            "description": "Stores the Signaling server url.",
            "itemtype": "attribute",
            "name": "_signalingServer",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/socket-channel.js",
            "line": 135,
            "description": "Stores the Signaling server protocol.",
            "itemtype": "attribute",
            "name": "_signalingServerProtocol",
            "type": "String",
            "access": "private",
            "tagname": "",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/socket-channel.js",
            "line": 145,
            "description": "Stores the Signaling server port.",
            "itemtype": "attribute",
            "name": "_signalingServerPort",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/socket-channel.js",
            "line": 155,
            "description": "Stores the Signaling socket connection object.",
            "itemtype": "attribute",
            "name": "_socket",
            "type": "io",
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/socket-channel.js",
            "line": 165,
            "description": "Stores the socket connection timeout when establishing connection to the Signaling.",
            "itemtype": "attribute",
            "name": "_socketTimeout",
            "type": "Number",
            "access": "private",
            "tagname": "",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/socket-channel.js",
            "line": 175,
            "description": "Stores the flag that indicates if XDomainRequest is used for IE 8/9.",
            "itemtype": "attribute",
            "name": "_socketUseXDR",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/socket-channel.js",
            "line": 185,
            "description": "Function that sends a socket message over the socket connection to the Signaling.",
            "itemtype": "method",
            "name": "_sendChannelMessage",
            "access": "private",
            "tagname": "",
            "since": "0.5.8",
            "class": "Skylink"
        },
        {
            "file": "source/socket-channel.js",
            "line": 306,
            "description": "Function that creates and opens a socket connection to the Signaling.",
            "itemtype": "method",
            "name": "_createSocket",
            "access": "private",
            "tagname": "",
            "since": "0.5.10",
            "class": "Skylink"
        },
        {
            "file": "source/socket-channel.js",
            "line": 470,
            "description": "Function that starts the socket connection to the Signaling.\nThis starts creating the socket connection and called at first not when requiring to fallback.",
            "itemtype": "method",
            "name": "_openChannel",
            "access": "private",
            "tagname": "",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/socket-channel.js",
            "line": 512,
            "description": "Function that stops the socket connection to the Signaling.",
            "itemtype": "method",
            "name": "_closeChannel",
            "access": "private",
            "tagname": "",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 1,
            "description": "<blockquote class=\"info\">\n  Note that this is used only for SDK developer purposes.<br>\n  Current version: <code>0.1.1</code>\n</blockquote>\nThe value of the current version of the Signaling socket message protocol.",
            "itemtype": "attribute",
            "name": "SM_PROTOCOL_VERSION",
            "type": "String",
            "since": "0.6.0",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 14,
            "description": "Stores the list of socket messaging protocol types.\nSee confluence docs for the list based on the current <code>SM_PROTOCOL_VERSION</code>.",
            "itemtype": "attribute",
            "name": "_SIG_MESSAGE_TYPE",
            "type": "JSON",
            "readonly": "",
            "access": "private",
            "tagname": "",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 50,
            "description": "Stores the flag if MCU environment is enabled.",
            "itemtype": "attribute",
            "name": "_hasMCU",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 60,
            "description": "Stores the list of socket messaging protocol types to queue when sent less than a second interval.",
            "itemtype": "attribute",
            "name": "_groupMessageList",
            "type": "Array",
            "access": "private",
            "tagname": "",
            "since": "0.5.10",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 77,
            "description": "Stores the flag that indicates if MCU is available in the Room.\nIf App Key enables MCU but this is false, this means likely there are problems connecting to the MCU server.",
            "itemtype": "attribute",
            "name": "_hasMCU",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 89,
            "description": "Stores the flag that indicates if User should only receive Stream from Peer connections but\n  do not send User's Stream to Peer connections.",
            "itemtype": "attribute",
            "name": "_receiveOnly",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "since": "0.5.10",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 100,
            "description": "Function that sends a message to Peers via the Signaling socket connection.",
            "itemtype": "method",
            "name": "sendMessage",
            "params": [
                {
                    "name": "message",
                    "description": "The message.",
                    "type": "String|JSON"
                },
                {
                    "name": "targetPeerId",
                    "description": "The target Peer ID to send message to.\n- When provided as an Array, it will send the message to only Peers which IDs are in the list.\n- When not provided, it will broadcast the message to all connected Peers in the Room.",
                    "type": "String|Array",
                    "optional": true
                }
            ],
            "example": [
                "\n  // Example 1: Broadcasting to all Peers\n  skylinkDemo.sendMessage(\"Hi all!\");\n\n  // Example 2: Sending to specific Peers\n  var peersInExclusiveParty = [];\n\n  skylinkDemo.on(\"peerJoined\", function (peerId, peerInfo, isSelf) {\n    if (isSelf) return;\n    if (peerInfo.userData.exclusive) {\n      peersInExclusiveParty.push(peerId);\n    }\n  });\n\n  function updateExclusivePartyStatus (message) {\n    skylinkDemo.sendMessage(message, peersInExclusiveParty);\n  }"
            ],
            "trigger": "<ol class=\"desc-seq\">\n  <li><a href=\"#event_incomingMessage\"><code>incomingMessage</code> event</a> triggers parameter payload\n  <code>message.isDataChannel</code> value as <code>false</code>.</li></ol>",
            "since": "0.4.0",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 195,
            "description": "Function that process and parses the socket message string received from the Signaling.",
            "itemtype": "method",
            "name": "_processSigMessage",
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 214,
            "description": "Function that handles and processes the socket message received.",
            "itemtype": "method",
            "name": "_processingSingleMessage",
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 300,
            "description": "Function that handles the \"peerList\" socket message received.\nSee confluence docs for the \"peerList\" expected properties to be received\n  based on the current <code>SM_PROTOCOL_VERSION</code>.",
            "itemtype": "method",
            "name": "_peerListEventHandler",
            "access": "private",
            "tagname": "",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 316,
            "description": "Function that handles the \"introduceError\" socket message received.\nSee confluence docs for the \"introduceError\" expected properties to be received\n  based on the current <code>SM_PROTOCOL_VERSION</code>.",
            "itemtype": "method",
            "name": "_introduceErrorEventHandler",
            "access": "private",
            "tagname": "",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 332,
            "description": "Function that handles the \"approach\" socket message received.\nSee confluence docs for the \"approach\" expected properties to be received\n  based on the current <code>SM_PROTOCOL_VERSION</code>.",
            "itemtype": "method",
            "name": "_approachEventHandler",
            "access": "private",
            "tagname": "",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 362,
            "description": "Function that handles the \"redirect\" socket message received.\nSee confluence docs for the \"redirect\" expected properties to be received\n  based on the current <code>SM_PROTOCOL_VERSION</code>.",
            "itemtype": "method",
            "name": "_redirectHandler",
            "access": "private",
            "tagname": "",
            "since": "0.5.1",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 394,
            "description": "Function that handles the \"updateUserEvent\" socket message received.\nSee confluence docs for the \"updateUserEvent\" expected properties to be received\n  based on the current <code>SM_PROTOCOL_VERSION</code>.",
            "itemtype": "method",
            "name": "_updateUserEventHandler",
            "access": "private",
            "tagname": "",
            "since": "0.2.0",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 415,
            "description": "Function that handles the \"roomLockEvent\" socket message received.\nSee confluence docs for the \"roomLockEvent\" expected properties to be received\n  based on the current <code>SM_PROTOCOL_VERSION</code>.",
            "itemtype": "method",
            "name": "_roomLockEventHandler",
            "access": "private",
            "tagname": "",
            "since": "0.2.0",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 431,
            "description": "Function that handles the \"muteAudioEvent\" socket message received.\nSee confluence docs for the \"muteAudioEvent\" expected properties to be received\n  based on the current <code>SM_PROTOCOL_VERSION</code>.",
            "itemtype": "method",
            "name": "_muteAudioEventHandler",
            "access": "private",
            "tagname": "",
            "since": "0.2.0",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 452,
            "description": "Function that handles the \"muteVideoEvent\" socket message received.\nSee confluence docs for the \"muteVideoEvent\" expected properties to be received\n  based on the current <code>SM_PROTOCOL_VERSION</code>.",
            "itemtype": "method",
            "name": "_muteVideoEventHandler",
            "access": "private",
            "tagname": "",
            "since": "0.2.0",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 473,
            "description": "Function that handles the \"stream\" socket message received.\nSee confluence docs for the \"stream\" expected properties to be received\n  based on the current <code>SM_PROTOCOL_VERSION</code>.",
            "itemtype": "method",
            "name": "_streamEventHandler",
            "access": "private",
            "tagname": "",
            "since": "0.2.0",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 507,
            "description": "Function that handles the \"bye\" socket message received.\nSee confluence docs for the \"bye\" expected properties to be received\n  based on the current <code>SM_PROTOCOL_VERSION</code>.",
            "itemtype": "method",
            "name": "_byeHandler",
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 528,
            "description": "Function that handles the \"private\" socket message received.\nSee confluence docs for the \"private\" expected properties to be received\n  based on the current <code>SM_PROTOCOL_VERSION</code>.",
            "itemtype": "method",
            "name": "_privateMessageHandler",
            "access": "private",
            "tagname": "",
            "since": "0.4.0",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 550,
            "description": "Function that handles the \"public\" socket message received.\nSee confluence docs for the \"public\" expected properties to be received\n  based on the current <code>SM_PROTOCOL_VERSION</code>.",
            "itemtype": "method",
            "name": "_publicMessageHandler",
            "access": "private",
            "tagname": "",
            "since": "0.4.0",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 572,
            "description": "Function that handles the \"inRoom\" socket message received.\nSee confluence docs for the \"inRoom\" expected properties to be received\n  based on the current <code>SM_PROTOCOL_VERSION</code>.",
            "itemtype": "method",
            "name": "_inRoomHandler",
            "access": "private",
            "tagname": "",
            "since": "0.1.0",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 628,
            "description": "Function that handles the \"enter\" socket message received.\nSee confluence docs for the \"enter\" expected properties to be received\n  based on the current <code>SM_PROTOCOL_VERSION</code>.",
            "itemtype": "method",
            "name": "_enterHandler",
            "access": "private",
            "tagname": "",
            "since": "0.5.1",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 694,
            "description": "Function that handles the \"restart\" socket message received.\nSee confluence docs for the \"restart\" expected properties to be received\n  based on the current <code>SM_PROTOCOL_VERSION</code>.",
            "itemtype": "method",
            "name": "_restartHandler",
            "access": "private",
            "tagname": "",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 802,
            "description": "Function that handles the \"welcome\" socket message received.\nSee confluence docs for the \"welcome\" expected properties to be received\n  based on the current <code>SM_PROTOCOL_VERSION</code>.",
            "itemtype": "method",
            "name": "_welcomeHandler",
            "access": "private",
            "tagname": "",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 895,
            "description": "Function that handles the \"offer\" socket message received.\nSee confluence docs for the \"offer\" expected properties to be received\n  based on the current <code>SM_PROTOCOL_VERSION</code>.",
            "itemtype": "method",
            "name": "_offerHandler",
            "access": "private",
            "tagname": "",
            "since": "0.5.1",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 981,
            "description": "Function that handles the \"candidate\" socket message received.\nSee confluence docs for the \"candidate\" expected properties to be received\n  based on the current <code>SM_PROTOCOL_VERSION</code>.",
            "itemtype": "method",
            "name": "_candidateHandler",
            "access": "private",
            "tagname": "",
            "since": "0.5.1",
            "class": "Skylink"
        },
        {
            "file": "source/socket-message.js",
            "line": 1073,
            "description": "Function that handles the \"answer\" socket message received.\nSee confluence docs for the \"answer\" expected properties to be received\n  based on the current <code>SM_PROTOCOL_VERSION</code>.",
            "itemtype": "method",
            "name": "_answerHandler",
            "access": "private",
            "tagname": "",
            "since": "0.5.1",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 1,
            "description": "<blockquote class=\"info\">\n  Note that if the video codec is not supported, the SDK will not configure the local <code>\"offer\"</code> or\n  <code>\"answer\"</code> session description to prefer the codec.\n</blockquote>\nThe list of available video codecs to set as the preferred video codec to use to encode\nsending video data when available encoded video codec for Peer connections\nconfigured in the <a href=\"#method_init\"><code>init()</code> method</a>.",
            "itemtype": "attribute",
            "name": "VIDEO_CODEC",
            "params": [
                {
                    "name": "AUTO",
                    "description": "<small>Value <code>\"auto\"</code></small>\n  The value of the option to not prefer any video codec but rather use the created\n  local <code>\"offer\"</code> / <code>\"answer\"</code> session description video codec preference.",
                    "type": "String"
                },
                {
                    "name": "VP8",
                    "description": "<small>Value <code>\"VP8\"</code></small>\n  The value of the option to prefer the <a href=\"https://en.wikipedia.org/wiki/VP8\">VP8</a> video codec.",
                    "type": "String"
                },
                {
                    "name": "H264",
                    "description": "<small>Value <code>\"H264\"</code></small>\n  The value of the option to prefer the <a href=\"https://en.wikipedia.org/wiki/H.264/MPEG-4_AVC\">H264</a> video codec.",
                    "type": "String"
                }
            ],
            "type": "JSON",
            "readonly": "",
            "since": "0.5.10",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 29,
            "description": "<blockquote class=\"info\">\n  Note that if the audio codec is not supported, the SDK will not configure the local <code>\"offer\"</code> or\n  <code>\"answer\"</code> session description to prefer the codec.\n</blockquote>\nThe list of available audio codecs to set as the preferred audio codec to use to encode\nsending audio data when available encoded audio codec for Peer connections\nconfigured in the <a href=\"#method_init\"><code>init()</code> method</a>.",
            "itemtype": "attribute",
            "name": "AUDIO_CODEC",
            "params": [
                {
                    "name": "AUTO",
                    "description": "<small>Value <code>\"auto\"</code></small>\n  The value of the option to not prefer any audio codec but rather use the created\n  local <code>\"offer\"</code> / <code>\"answer\"</code> session description audio codec preference.",
                    "type": "String"
                },
                {
                    "name": "OPUS",
                    "description": "<small>Value <code>\"opus\"</code></small>\n  The value of the option to prefer the <a href=\"https://en.wikipedia.org/wiki/Opus_(audio_format)\">OPUS</a> audio codec.",
                    "type": "String"
                },
                {
                    "name": "ISAC",
                    "description": "<small>Value <code>\"ISAC\"</code></small>\n  The value of the option to prefer the <a href=\"https://en.wikipedia.org/wiki/Internet_Speech_Audio_Codec\">ISAC</a> audio codec.",
                    "type": "String"
                }
            ],
            "type": "JSON",
            "readonly": "",
            "since": "0.5.10",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 60,
            "description": "<blockquote class=\"info\">\n  Note that currently <a href=\"#method_getUserMedia\"><code>getUserMedia()</code> method</a> only configures\n  the maximum resolution of the Stream due to browser interopability and support.\n</blockquote>\nThe list of <a href=\"https://en.wikipedia.org/wiki/Graphics_display_resolution#Video_Graphics_Array\">\nvideo resolutions</a> sets configured in the <a href=\"#method_getUserMedia\"><code>getUserMedia()</code> method</a>.",
            "itemtype": "attribute",
            "name": "VIDEO_RESOLUTION",
            "params": [
                {
                    "name": "QQVGA",
                    "description": "<small>Value <code>{ width: 160, height: 120 }</code></small>\n  The value of the option to configure QQVGA resolution.\n  <small>Aspect ratio: <code>4:3</code></small>\n  <small>Note that configurating this resolution may not be supported.</small>",
                    "type": "JSON"
                },
                {
                    "name": "HQVGA",
                    "description": "<small>Value <code>{ width: 240, height: 160 }</code></small>\n  The value of the option to configure HQVGA resolution.\n  <small>Aspect ratio: <code>3:2</code></small>\n  <small>Note that configurating this resolution may not be supported.</small>",
                    "type": "JSON"
                },
                {
                    "name": "QVGA",
                    "description": "<small>Value <code>{ width: 320, height: 240 }</code></small>\n  The value of the option to configure QVGA resolution.\n  <small>Aspect ratio: <code>4:3</code></small>",
                    "type": "JSON"
                },
                {
                    "name": "WQVGA",
                    "description": "<small>Value <code>{ width: 384, height: 240 }</code></small>\n  The value of the option to configure WQVGA resolution.\n  <small>Aspect ratio: <code>16:10</code></small>\n  <small>Note that configurating this resolution may not be supported.</small>",
                    "type": "JSON"
                },
                {
                    "name": "HVGA",
                    "description": "<small>Value <code>{ width: 480, height: 320 }</code></small>\n  The value of the option to configure HVGA resolution.\n  <small>Aspect ratio: <code>3:2</code></small>\n  <small>Note that configurating this resolution may not be supported.</small>",
                    "type": "JSON"
                },
                {
                    "name": "VGA",
                    "description": "<small>Value <code>{ width: 640, height: 480 }</code></small>\n  The value of the option to configure VGA resolution.\n  <small>Aspect ratio: <code>4:3</code></small>",
                    "type": "JSON"
                },
                {
                    "name": "WVGA",
                    "description": "<small>Value <code>{ width: 768, height: 480 }</code></small>\n  The value of the option to configure WVGA resolution.\n  <small>Aspect ratio: <code>16:10</code></small>\n  <small>Note that configurating this resolution may not be supported.</small>",
                    "type": "JSON"
                },
                {
                    "name": "FWVGA",
                    "description": "<small>Value <code>{ width: 854, height: 480 }</code></small>\n  The value of the option to configure FWVGA resolution.\n  <small>Aspect ratio: <code>16:9</code></small>\n  <small>Note that configurating this resolution may not be supported.</small>",
                    "type": "JSON"
                },
                {
                    "name": "SVGA",
                    "description": "<small>Value <code>{ width: 800, height: 600 }</code></small>\n  The value of the option to configure SVGA resolution.\n  <small>Aspect ratio: <code>4:3</code></small>\n  <small>Note that configurating this resolution may not be supported.</small>",
                    "type": "JSON"
                },
                {
                    "name": "DVGA",
                    "description": "<small>Value <code>{ width: 960, height: 640 }</code></small>\n  The value of the option to configure DVGA resolution.\n  <small>Aspect ratio: <code>3:2</code></small>\n  <small>Note that configurating this resolution may not be supported.</small>",
                    "type": "JSON"
                },
                {
                    "name": "WSVGA",
                    "description": "<small>Value <code>{ width: 1024, height: 576 }</code></small>\n  The value of the option to configure WSVGA resolution.\n  <small>Aspect ratio: <code>16:9</code></small>",
                    "type": "JSON"
                },
                {
                    "name": "HD",
                    "description": "<small>Value <code>{ width: 1280, height: 720 }</code></small>\n  The value of the option to configure HD resolution.\n  <small>Aspect ratio: <code>16:9</code></small>",
                    "type": "JSON"
                },
                {
                    "name": "HDPLUS",
                    "description": "<small>Value <code>{ width: 1600, height: 900 }</code></small>\n  The value of the option to configure HDPLUS resolution.\n  <small>Aspect ratio: <code>16:9</code></small>\n  <small>Note that configurating this resolution may not be supported.</small>",
                    "type": "JSON"
                },
                {
                    "name": "FHD",
                    "description": "<small>Value <code>{ width: 1920, height: 1080 }</code></small>\n  The value of the option to configure FHD resolution.\n  <small>Aspect ratio: <code>16:9</code></small>\n  <small>Note that configurating this resolution may not be supported.</small>",
                    "type": "JSON"
                },
                {
                    "name": "QHD",
                    "description": "<small>Value <code>{ width: 2560, height: 1440 }</code></small>\n  The value of the option to configure QHD resolution.\n  <small>Aspect ratio: <code>16:9</code></small>\n  <small>Note that configurating this resolution may not be supported.</small>",
                    "type": "JSON"
                },
                {
                    "name": "WQXGAPLUS",
                    "description": "<small>Value <code>{ width: 3200, height: 1800 }</code></small>\n  The value of the option to configure WQXGAPLUS resolution.\n  <small>Aspect ratio: <code>16:9</code></small>\n  <small>Note that configurating this resolution may not be supported.</small>",
                    "type": "JSON"
                },
                {
                    "name": "UHD",
                    "description": "<small>Value <code>{ width: 3840, height: 2160 }</code></small>\n  The value of the option to configure UHD resolution.\n  <small>Aspect ratio: <code>16:9</code></small>\n  <small>Note that configurating this resolution may not be supported.</small>",
                    "type": "JSON"
                },
                {
                    "name": "UHDPLUS",
                    "description": "<small>Value <code>{ width: 5120, height: 2880 }</code></small>\n  The value of the option to configure UHDPLUS resolution.\n  <small>Aspect ratio: <code>16:9</code></small>\n  <small>Note that configurating this resolution may not be supported.</small>",
                    "type": "JSON"
                },
                {
                    "name": "FUHD",
                    "description": "<small>Value <code>{ width: 7680, height: 4320 }</code></small>\n  The value of the option to configure FUHD resolution.\n  <small>Aspect ratio: <code>16:9</code></small>\n  <small>Note that configurating this resolution may not be supported.</small>",
                    "type": "JSON"
                },
                {
                    "name": "QUHD",
                    "description": "<small>Value <code>{ width: 15360, height: 8640 }</code></small>\n  The value of the option to configure QUHD resolution.\n  <small>Aspect ratio: <code>16:9</code></small>\n  <small>Note that configurating this resolution may not be supported.</small>",
                    "type": "JSON"
                }
            ],
            "type": "JSON",
            "readonly": "",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 172,
            "description": "The list of <a href=\"#method_getUserMedia\"><code>getUserMedia()</code> method</a> Stream fallback states.",
            "itemtype": "attribute",
            "name": "MEDIA_ACCESS_FALLBACK_STATE",
            "params": [
                {
                    "name": "FALLBACKING",
                    "description": "<small>Value <code>0</code></small>\n  The value of the state when <code>getUserMedia()</code> will retrieve audio track only\n  when retrieving audio and video tracks failed.\n  <small>This can be configured by <a href=\"#method_init\"><code>init()</code> method</a>\n  <code>audioFallback</code> option.</small>",
                    "type": "JSON"
                },
                {
                    "name": "FALLBACKED",
                    "description": "<small>Value <code>1</code></small>\n  The value of the state when <code>getUserMedia()</code> retrieves camera Stream successfully but with\n  missing originally required audio or video tracks.",
                    "type": "JSON"
                },
                {
                    "name": "ERROR",
                    "description": "<small>-1</code></small>\n  The value of the state when <code>getUserMedia()</code> failed to retrieve audio track only\n  after retrieving audio and video tracks failed.",
                    "type": "JSON"
                }
            ],
            "readonly": "",
            "since": "0.6.14",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 196,
            "description": "Stores the preferred sending Peer connection streaming audio codec.",
            "itemtype": "attribute",
            "name": "_selectedAudioCodec",
            "type": "String",
            "default": "\"auto\"",
            "access": "private",
            "tagname": "",
            "since": "0.5.10",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 207,
            "description": "Stores the preferred sending Peer connection streaming video codec.",
            "itemtype": "attribute",
            "name": "_selectedVideoCodec",
            "type": "String",
            "default": "\"auto\"",
            "access": "private",
            "tagname": "",
            "since": "0.5.10",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 218,
            "description": "Stores the User's <code>getUserMedia()</code> Stream.",
            "itemtype": "attribute",
            "name": "_mediaStream",
            "type": "MediaStream",
            "access": "private",
            "tagname": "",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 228,
            "description": "Stores the User's <code>shareScreen()</code> Stream.",
            "itemtype": "attribute",
            "name": "_mediaScreen",
            "type": "MediaStream",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 238,
            "description": "Stores the User's <code>shareScreen()</code> Stream clone for storing the video track.\nCurrently Chrome doesn't give us the audio track in the stream we receive, so we have to\n  make another getUserMedia() call to retrieve the audio track only.",
            "itemtype": "attribute",
            "name": "_mediaScreenClone",
            "type": "MediaStream",
            "access": "private",
            "tagname": "",
            "since": "0.6.0",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 250,
            "description": "Stores the default Stream settings for <code>getUserMedia()</code> method.",
            "itemtype": "attribute",
            "name": "_defaultStreamSettings",
            "params": [
                {
                    "name": "audio",
                    "description": "The default Stream audio settings.",
                    "type": "JSON"
                },
                {
                    "name": "video",
                    "description": "The default Stream video settings.",
                    "type": "JSON"
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.5.7",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 278,
            "description": "Stores the <code>getUserMedia()</code> Stream settings.",
            "itemtype": "attribute",
            "name": "_streamSettings",
            "params": [
                {
                    "name": "audio",
                    "description": "The Stream audio settings.",
                    "type": "JSON"
                },
                {
                    "name": "video",
                    "description": "The Stream video settings.",
                    "type": "JSON"
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 290,
            "description": "Stores the <code>shareScreen()</code> Stream settings.",
            "itemtype": "attribute",
            "name": "_screenSharingStreamSettings",
            "params": [
                {
                    "name": "audio",
                    "description": "The Stream audio settings.",
                    "type": "JSON"
                },
                {
                    "name": "video",
                    "description": "The Stream video settings.",
                    "type": "JSON"
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.6.1",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 304,
            "description": "Stores the flag that indicates if screensharing is supported in the browser.",
            "itemtype": "attribute",
            "name": "_screenSharingAvailable",
            "type": "Boolean",
            "access": "private",
            "tagname": "",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 314,
            "description": "Stores the native <code>navigator.getUserMedia()</code> API constraints for\n  <code>getUserMedia()</code> retrieval of Stream.",
            "itemtype": "attribute",
            "name": "_getUserMediaSettings",
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 325,
            "description": "Stores the User's Stream (both <code>getUserMedia()</code> and <code>shareScreen()</code>) muted status.",
            "itemtype": "attribute",
            "name": "_mediaStreamsStatus",
            "params": [
                {
                    "name": "audioMuted",
                    "description": "The flag that indicates if audio is muted or not available.",
                    "type": "Boolean"
                },
                {
                    "name": "videoMuted",
                    "description": "The flag that indicates if video is muted or not available.",
                    "type": "Boolean"
                }
            ],
            "type": "JSON",
            "access": "private",
            "tagname": "",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 337,
            "description": "Stores the flag that indicates if <code>getUserMedia()</code> should fallback to retrieve\n  audio only Stream after retrieval of audio and video Stream had failed.",
            "itemtype": "attribute",
            "name": "_audioFallback",
            "type": "Boolean",
            "default": "false",
            "access": "private",
            "tagname": "",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 349,
            "description": "Function that retrieves camera Stream.",
            "itemtype": "method",
            "name": "getUserMedia",
            "params": [
                {
                    "name": "options",
                    "description": "The camera Stream configuration options.\n- When not provided, the value is set to <code>{ audio: true, video: true }</code>.\n  <small>To fallback to retrieve audio track only when retrieving of audio and video tracks failed,\n  enable the <code>audioFallback</code> flag in the <a href=\"#method_init\"><code>init()</code> method</a>.</small>",
                    "type": "JSON",
                    "optional": true,
                    "props": [
                        {
                            "name": "audio",
                            "description": "The audio configuration options.",
                            "type": "Boolean|JSON",
                            "optional": true,
                            "optdefault": "false",
                            "props": [
                                {
                                    "name": "stereo",
                                    "description": "The flag if stereo band should be configured\n  when encoding audio codec is <a href=\"#attr_AUDIO_CODEC\"><code>OPUS</code></a> for sending audio data.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "mute",
                                    "description": "The flag if audio tracks should be muted upon receiving them.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "optional",
                                    "description": "The <code>navigator.getUserMedia()</code> API\n  <code>audio: { optional [..] }</code> property.",
                                    "type": "Array",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "video",
                            "description": "The video configuration options.",
                            "type": "Boolean|JSON",
                            "optional": true,
                            "optdefault": "false",
                            "props": [
                                {
                                    "name": "mute",
                                    "description": "The flag if video tracks should be muted upon receiving them.",
                                    "type": "Boolean",
                                    "optional": true,
                                    "optdefault": "false"
                                },
                                {
                                    "name": "resolution",
                                    "description": "<blockquote class=\"info\">\n  Note that currently <a href=\"#method_getUserMedia\"><code>getUserMedia()</code> method</a> only configures\n  the maximum resolution of the camera Stream due to browser interopability and support. </blockquote>\n  The video resolution.\n  <small>By default, <a href=\"#attr_VIDEO_RESOLUTION\"><code>VGA</code></a> resolution option\n  is selected when not provided.</small>\n  [Rel: Skylink.VIDEO_RESOLUTION]",
                                    "type": "JSON",
                                    "optional": true
                                },
                                {
                                    "name": "resolution.width",
                                    "description": "The video resolution width.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "resolution.height",
                                    "description": "The video resolution height.",
                                    "type": "Number",
                                    "optional": true
                                },
                                {
                                    "name": "frameRate",
                                    "description": "<blockquote class=\"info\">\n  Note that currently <a href=\"#method_getUserMedia\"><code>getUserMedia()</code> method</a> only configures\n  the maximum frameRate of the camera Stream due to browser interopability and support. For Safari and IE browsers\n  (plugin-enabled), the maximum frameRate is not configured due to the lack of support.</blockquote>\n  The video <a href=\"https://en.wikipedia.org/wiki/Frame_rate\">frameRate</a> per second (fps).",
                                    "type": "Number",
                                    "optional": true,
                                    "optdefault": "50"
                                },
                                {
                                    "name": "optional",
                                    "description": "The <code>navigator.getUserMedia()</code> API\n  <code>video: { optional [..] }</code> property.",
                                    "type": "Array",
                                    "optional": true
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "The callback function fired when request has completed.\n  <small>Function parameters signature is <code>function (error, success)</code></small>\n  <small>Function request completion is determined by the <a href=\"#event_mediaAccessSuccess\">\n  <code>mediaAccessSuccess</code> event</a> triggering <code>isScreensharing</code> parameter\n  payload value as <code>false</code> for request success.</small>",
                    "type": "Function",
                    "optional": true,
                    "props": [
                        {
                            "name": "error",
                            "description": "The error result in request.\n  <small>Defined as <code>null</code> when there are no errors in request</small>\n  <small>Object signature is the <code>getUserMedia()</code> error when retrieving camera Stream.</small>",
                            "type": "Error|String"
                        },
                        {
                            "name": "success",
                            "description": "The success result in request.\n  <small>Defined as <code>null</code> when there are errors in request</small>\n  <small>Object signature is the camera Stream object.</small>",
                            "type": "MediaStream"
                        }
                    ]
                }
            ],
            "example": [
                "\n  // Example 1: Get both audio and video.\n  skylinkDemo.getUserMedia(function (error, success) {\n    if (error) return;\n    attachMediaStream(document.getElementById(\"my-video\"), success);\n  });\n\n  // Example 2: Get only audio.\n  skylinkDemo.getUserMedia({\n    audio: true\n  }, function (error, success) {\n    if (error) return;\n    attachMediaStream(document.getElementById(\"my-audio\"), success);\n  });\n\n  // Example 3: Configure resolution for video\n  skylinkDemo.getUserMedia({\n    audio: true,\n    video: {\n      resolution: skylinkDemo.VIDEO_RESOLUTION.HD\n    }\n  }, function (error, success) {\n    if (error) return;\n    attachMediaStream(document.getElementById(\"my-video\"), success);\n  });\n\n  // Example 4: Configure stereo flag for OPUS codec audio (OPUS is always used by default)\n  skylinkDemo.init({\n    appKey: \"xxxxxx\",\n    audioCodec: skylinkDemo.AUDIO_CODEC.OPUS\n  }, function (initErr, initSuccess) {\n    skylinkDemo.getUserMedia({\n      audio: {\n        stereo: true\n      },\n      video: true\n    }, function (error, success) {\n      if (error) return;\n      attachMediaStream(document.getElementById(\"my-video\"), success);\n    });\n  });\n\n  // Example 5: Configure frameRate for video\n  skylinkDemo.getUserMedia({\n    audio: true,\n    video: {\n      frameRate: 50\n    }\n  }, function (error, success) {\n    if (error) return;\n    attachMediaStream(document.getElementById(\"my-video\"), success);\n  });\n\n  // Example 6: Configure video and audio based on selected sources. Does not work for Firefox currently.\n  var sources = { audio: [], video: [] };\n\n  function selectStream (audioSourceId, videoSourceId) {\n    skylinkDemo.getUserMedia({\n      audio: {\n        optional: [{ sourceId: audioSourceId }]\n      },\n      video: {\n        optional: [{ sourceId: videoSourceId }]\n      }\n    }, function (error, success) {\n      if (error) return;\n      attachMediaStream(document.getElementById(\"my-video\"), success);\n    });\n  }\n\n  navigator.mediaDevices.enumerateDevices().then(function(devices) {\n    var selectedAudioSourceId = \"\";\n    var selectedVideoSourceId = \"\";\n    devices.forEach(function(device) {\n      console.log(device.kind + \": \" + device.label + \" source ID = \" + device.deviceId);\n      if (device.kind === \"audio\") {\n        selectedAudioSourceId = device.deviceId;\n      } else {\n        selectedVideoSourceId = device.deviceId;\n      }\n    });\n    selectStream(selectedAudioSourceId, selectedVideoSourceId);\n  }).catch(function (error) {\n     console.error(\"Failed\", error);\n  });"
            ],
            "trigger": "<ol class=\"desc-seq\">\n  <li>When retrieval of camera Stream is successful, <a href=\"#event_mediaAccessSuccess\">\n  <code>mediaAccessSuccess</code> event</a> triggers parameter payload <code>isScreensharing</code>\n  value as <code>false</code>.<ol>\n  <li>When there are missing required audio or video tracks, <a href=\"#event_mediaAccessFallback\">\n  <code>mediaAccessFallback</code> event</a> triggers parameter payload <code>state</code> as <code>FALLBACKED</code>\n  , <code>isScreensharing</code> value as <code>false</code>, <code>isAudioFallback</code> as\n  <code>false</code> and <code>error</code> is defined.</li></ol></li>\n  <li>When retrieval of camera Stream has failed<ol>\n  <li>If <code>audioFallback</code> is enabled in the <a href=\"#method_init\"><code>init()</code> method</a>\n  configuration, and <code>options.video</code> and <code>options.audio</code> is requested <ol>\n  <li><a href=\"#event_mediaAccessFallback\"><code>mediaAccessFallback</code> event</a> is triggers parameter payload\n  <code>state</code> value as <code>FALLBACKING</code>, <code>isScreensharing</code> value as <code>false</code>,\n  <code>isAudioFallback</code> as <code>true</code> and <code>error</code> is defined.</li>\n  <li>Invokes <code>getUserMedia()</code> with <code>options.audio</code> value as <code>true</code> and\n  <code>options.video</code> value as <code>false</code>.<ol>\n  <li>When retrieval of camera Stream (fallbacked audio only) is successful<ol>\n  <li><a href=\"#event_mediaAccessFallback\"><code>mediaAccessFallback</code> event</a> triggers parameter payload\n  <code>state</code> as <code>FALLBACKED</code>, <code>isScreensharing</code> value as <code>false</code> and\n  <code>isAudioFallback</code> as <code>true</code>.</li>\n  <li><a href=\"#event_mediaAccessSuccess\"><code>mediaAccessSuccess</code> event</a> triggers parameter\n  payload <code>isScreensharing</code> value as <code>false</code></li></ol></li>\n  <li>When retrieval of camera Stream (fallbacked audio only) has failed <ol>\n  <li><a href=\"#event_mediaAccessFallback\"><code>mediaAccessFallback</code> event</a> triggers parameter payload\n  <code>state</code> as <code>ERROR</code>, <code>isScreensharing</code> value as <code>false</code> and\n  <code>isAudioFallback</code> as <code>true</code>.</li>\n  <li><a href=\"#event_mediaAccessError\"><code>mediaAccessError</code> event</a> triggers parameter payload\n  <code>isScreensharing</code> value as <code>false</code> and <code>isAudioFallbackError</code>\n  as <code>true</code>.</li></ol></li></ol></li></ol></li>\n  <li>Else, <a href=\"#event_mediaAccessError\"><code>mediaAccessError</code> event</a>\n  triggers parameter payload <code>isScreensharing</code> value as <code>false</code> and\n  <code>isAudioFallbackError</code> as <code>false</code></li></ol></li></ol>",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 639,
            "description": "<blockquote class=\"info\">\n  Note that if <a href=\"#method_shareScreen\"><code>shareScreen()</code> Stream</a> is available despite having\n  <a href=\"#method_getUserMedia\"><code>getUserMedia()</code> Stream</a> available, the\n  <a href=\"#method_shareScreen\"><code>shareScreen()</code> Stream</a> is sent instead of the\n  <a href=\"#method_getUserMedia\"><code>getUserMedia()</code> Stream</a> to Peers.\n</blockquote>\nFunction that sends a new <a href=\"#method_getUserMedia\"><code>getUserMedia()</code> Stream</a>\nto all connected Peers in the Room.",
            "itemtype": "method",
            "name": "sendStream",
            "params": [
                {
                    "name": "options",
                    "description": "The <a href=\"#method_getUserMedia\"><code>getUserMedia()</code>\n  method</a> <code>options</code> parameter settings.\n- When provided as a <code>MediaStream</code> object, this configures the <code>options.audio</code> and\n  <code>options.video</code> based on the tracks available in the <code>MediaStream</code> object,\n  and configures the <code>options.audio.mute</code> and <code>options.video.mute</code> based on the tracks\n  <code>.enabled</code> flags in the tracks provided in the <code>MediaStream</code> object without\n  invoking <a href=\"#method_getUserMedia\"><code>getUserMedia()</code> method</a>.\n  <small>Object signature matches the <code>options</code> parameter in the\n  <a href=\"#method_getUserMedia\"><code>getUserMedia()</code> method</a>.</small>",
                    "type": "JSON|MediaStream"
                },
                {
                    "name": "callback",
                    "description": "The callback function fired when request has completed.\n  <small>Function parameters signature is <code>function (error, success)</code></small>\n  <small>Function request completion is determined by the <a href=\"#event_peerRestart\">\n  <code>peerRestart</code> event</a> triggering <code>isSelfInitiateRestart</code> parameter payload\n  value as <code>true</code> for all Peers currently in the Room targeted for request success.</small>",
                    "type": "Function",
                    "optional": true,
                    "props": [
                        {
                            "name": "error",
                            "description": "The error result in request.\n  <small>Defined as <code>null</code> when there are no errors in request</small>\n  <small>Object signature is the <a href=\"#method_getUserMedia\"><code>getUserMedia()</code> method</a> error or\n  when invalid <code>options</code> is provided.</small>",
                            "type": "Error|String"
                        },
                        {
                            "name": "success",
                            "description": "The success result in request.\n  <small>Defined as <code>null</code> when there are errors in request</small>\n  <small>Object signature is the <a href=\"#method_getUserMedia\"><code>getUserMedia()</code> method</a>\n  Stream object.</small>",
                            "type": "MediaStream"
                        }
                    ]
                }
            ],
            "example": [
                "\n  // Example 1: Send MediaStream object\n  function retrieveStreamBySourceForFirefox (sourceId) {\n    navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: {\n        sourceId: { exact: sourceId }\n      }\n    }).then(function (stream) {\n      skylinkDemo.sendStream(stream, function (error, success) {\n        if (err) return;\n        if (stream === success) {\n          console.info(\"Same MediaStream has been sent\");\n        }\n        console.log(\"Stream is now being sent to Peers\");\n        attachMediaStream(document.getElementById(\"my-video\"), success);\n      });\n    });\n  }\n\n  // Example 2: Send video later\n  var inRoom = false;\n\n  function sendVideo () {\n    if (!inRoom) return;\n    skylinkDemo.sendStream({\n      audio: true,\n      video: true\n    }, function (error, success) {\n      if (error) return;\n      console.log(\"getUserMedia() Stream with video is now being sent to Peers\");\n      attachMediaStream(document.getElementById(\"my-video\"), success);\n    });\n  }\n\n  skylinkDemo.joinRoom({\n    audio: true\n  }, function (jRError, jRSuccess) {\n    if (jRError) return;\n    inRoom = true;\n  });"
            ],
            "trigger": "<ol class=\"desc-seq\">\n  <li>Invokes <a href=\"#method_getUserMedia\"><code>getUserMedia()</code> method</a>.</li>\n  <li>Invokes <a href=\"#method_refreshConnection\"><code>refreshConnection()</code> method</a>.</li>\n  <li>If User is in the Room, <a href=\"#event_incomingStream\"><code>incomingStream</code> event</a> triggers with\n  parameter payload <code>isSelf</code> as <code>true</code>, and <a href=\"#event_peerUpdate\">\n  <code>peerUpdated</code> event</a> triggers with parameter payload <code>isSelf</code>\n  as <code>true</code>.</li></ol></li></ol>",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 854,
            "description": "Function that stops <a href=\"#method_getUserMedia\"><code>getUserMedia()</code> Stream</a>.",
            "itemtype": "method",
            "name": "stopStream",
            "example": [
                "\n  function stopStream () {\n    skylinkDemo.stopStream();\n  }\n\n  skylinkDemo.getUserMedia();"
            ],
            "trigger": "<ol class=\"desc-seq\">\n  <li><a href=\"#event_mediaAccessStopped\"><code>mediaAccessStopped</code> event</a> triggers parameter payload\n  <code>isScreensharing</code> value as <code>false</code>.</li>\n  <li>If User is in the Room, <a href=\"#event_streamEnded\"><code>streamEnded</code> event</a> triggers\n  parameter payload <code>isScreensharing</code> value as <code>false</code> and <code>isSelf</code> value\n  as <code>true</code>, and <a href=\"#event_peerUpdated\"><code>peerUpdated</code> event</a> triggers\n  parameter payload <code>isSelf</code> value as <code>true</code>.</li></ol>",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 880,
            "description": "Function that mutes both <a href=\"#method_getUserMedia\"><code>getUserMedia()</code> Stream</a> and\n<a href=\"#method_shareScreen\"><code>shareScreen()</code> Stream</a> audio or video tracks.",
            "itemtype": "method",
            "name": "muteStream",
            "params": [
                {
                    "name": "options",
                    "description": "The Streams muting options.",
                    "type": "JSON",
                    "props": [
                        {
                            "name": "audioMuted",
                            "description": "The flag if all Streams audio\n  tracks should be muted or not.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "videoMuted",
                            "description": "The flag if all Streams video\n  tracks should be muted or not.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        }
                    ]
                }
            ],
            "example": [
                "\n  // Example 1: Mute both audio and video tracks in all Streams\n  skylinkDemo.muteStream({\n    audioMuted: true,\n    videoMuted: true\n  });\n\n  // Example 2: Mute only audio tracks in all Streams\n  skylinkDemo.muteStream({\n    audioMuted: true,\n    videoMuted: false\n  });\n\n  // Example 3: Mute only video tracks in all Streams\n  skylinkDemo.muteStream({\n    audioMuted: false,\n    videoMuted: true\n  });"
            ],
            "trigger": "<ol class=\"desc-seq\">\n  <li>If User is in the Room, <a href=\"#event_streamMuted\"><code>streamMuted</code> event</a> triggers\n  parameter payload <code>isSelf</code> value as <code>true</code>, and <a href=\"#event_peerUpdated\">\n  <code>peerUpdated</code> event</a> triggers parameter payload <code>isSelf</code>\n  value as <code>true</code>.</li></ol>",
            "since": "0.5.7",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 995,
            "description": "<blockquote class=\"info\"><b>Deprecation Warning!</b>\n  This method has been deprecated. Use <a href=\"#method_muteStream\"><code>muteStream()</code> method</a> instead.\n</blockquote>\nFunction that unmutes both <a href=\"#method_getUserMedia\"><code>getUserMedia()</code> Stream</a> and\n<a href=\"#method_shareScreen\"><code>shareScreen()</code> Stream</a> audio tracks.",
            "itemtype": "method",
            "name": "enableAudio",
            "deprecated": true,
            "deprecationMessage": "true",
            "example": [
                "\n  function unmuteAudio () {\n    skylinkDemo.enableAudio();\n  }"
            ],
            "trigger": "<ol class=\"desc-seq\">\n  <li>Invokes <a href=\"#method_muteStream\"><code>muteStream()</code> method</a> with\n  <code>options.audioMuted</code> value as <code>false</code>.</li></ol>",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 1019,
            "description": "<blockquote class=\"info\"><b>Deprecation Warning!</b>\n  This method has been deprecated. Use <a href=\"#method_muteStream\"><code>muteStream()</code> method</a> instead.\n</blockquote>\nFunction that mutes both <a href=\"#method_getUserMedia\"><code>getUserMedia()</code> Stream</a> and\n<a href=\"#method_shareScreen\"><code>shareScreen()</code> Stream</a> audio tracks.",
            "itemtype": "method",
            "name": "disableAudio",
            "deprecated": true,
            "deprecationMessage": "true",
            "example": [
                "\n  function muteAudio () {\n    skylinkDemo.disableAudio();\n  }"
            ],
            "trigger": "<ol class=\"desc-seq\">\n  <li>Invokes <a href=\"#method_muteStream\"><code>muteStream()</code> method</a> with\n  <code>options.audioMuted</code> value as <code>true</code>.</li></ol>",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 1043,
            "description": "<blockquote class=\"info\"><b>Deprecation Warning!</b>\n  This method has been deprecated. Use <a href=\"#method_muteStream\"><code>muteStream()</code> method</a> instead.\n</blockquote>\nFunction that unmutes both <a href=\"#method_getUserMedia\"><code>getUserMedia()</code> Stream</a> and\n<a href=\"#method_shareScreen\"><code>shareScreen()</code> Stream</a> video tracks.",
            "itemtype": "method",
            "name": "enableVideo",
            "deprecated": true,
            "deprecationMessage": "true",
            "example": [
                "\n  function unmuteVideo () {\n    skylinkDemo.enableVideo();\n  }"
            ],
            "trigger": "<ol class=\"desc-seq\">\n  <li>Invokes <a href=\"#method_muteStream\"><code>muteStream()</code> method</a> with\n  <code>options.videoMuted</code> value as <code>false</code>.</li></ol>",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 1067,
            "description": "/**\n* <blockquote class=\"info\"><b>Deprecation Warning!</b>\n*   This method has been deprecated. Use <a href=\"#method_muteStream\"><code>muteStream()</code> method</a> instead.\n* </blockquote>\n* Function that mutes both <a href=\"#method_getUserMedia\"><code>getUserMedia()</code> Stream</a> and\n* <a href=\"#method_shareScreen\"><code>shareScreen()</code> Stream</a> video tracks.\n* @method disableVideo\n* @deprecated true\n* @example\n*   function muteVideo () {\n*     skylinkDemo.disableVideo();\n*   }\n* @trigger <ol class=\"desc-seq\">\n*   <li>Invokes <a href=\"#method_muteStream\"><code>muteStream()</code> method</a> with\n*   <code>options.videoMuted</code> value as <code>true</code>.</li></ol>\n* @for Skylink\n* @since 0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 1092,
            "description": "Function that retrieves screensharing Stream.",
            "itemtype": "method",
            "name": "shareScreen",
            "params": [
                {
                    "name": "enableAudio",
                    "description": "The flag if audio tracks should be retrieved.",
                    "type": "JSON",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "callback",
                    "description": "The callback function fired when request has completed.\n  <small>Function parameters signature is <code>function (error, success)</code></small>\n  <small>Function request completion is determined by the <a href=\"#event_mediaAccessSuccess\">\n  <code>mediaAccessSuccess</code> event</a> triggering <code>isScreensharing</code> parameter\n  payload value as <code>true</code> for request success.</small>",
                    "type": "Function",
                    "optional": true,
                    "props": [
                        {
                            "name": "error",
                            "description": "The error result in request.\n  <small>Defined as <code>null</code> when there are no errors in request</small>\n  <small>Object signature is the <code>shareScreen()</code> error when retrieving screensharing Stream.</small>",
                            "type": "Error|String"
                        },
                        {
                            "name": "success",
                            "description": "The success result in request.\n  <small>Defined as <code>null</code> when there are errors in request</small>\n  <small>Object signature is the screensharing Stream object.</small>",
                            "type": "MediaStream"
                        }
                    ]
                }
            ],
            "example": [
                "\n  // Example 1: Share screen with audio\n  skylinkDemo.shareScreen(function (error, success) {\n    if (error) return;\n    attachMediaStream(document.getElementById(\"my-screen\"), success);\n  });\n\n  // Example 2: Share screen without audio\n  skylinkDemo.shareScreen(false, function (error, success) {\n    if (error) return;\n    attachMediaStream(document.getElementById(\"my-screen\"), success);\n  });"
            ],
            "trigger": "<ol class=\"desc-seq\">\n  <li>When retrieval of screensharing Stream is successful, <a href=\"#event_mediaAccessSuccess\">\n  <code>mediaAccessSuccess</code> event</a> triggers parameter payload <code>isScreensharing</code>\n  value as <code>true</code>.<ol>\n  <li>When there are missing required audio tracks, <a href=\"#event_mediaAccessFallback\">\n  <code>mediaAccessFallback</code> event</a> triggers parameter payload <code>state</code> as <code>FALLBACKED</code>\n  , <code>isScreensharing</code> value as <code>true</code>, <code>isAudioFallback</code> as\n  <code>false</code> and <code>error</code> is defined.</li>\n  <li>If User is in Room, <a href=\"#event_incomingStream\"><code>incomingStream</code> event</a> triggers.</li>\n  <li>Invokes <a href=\"#method_refreshConnection\"><code>refreshConnection()</code> method</a>.</li></ol></li>\n  <li>When retrieval of screensharing Stream has failed, <a href=\"#event_mediaAccessError\">\n  <code>mediaAccessError</code> event</a> triggers parameter payload <code>isScreensharing</code>\n  value as <code>true</code> and <code>isAudioFallbackError</code> as <code>false</code></li></ol></li></ol>",
            "since": "0.6.0",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 1303,
            "description": "Function that stops <a href=\"#method_shareScreen\"><code>shareScreen()</code> Stream</a>.",
            "itemtype": "method",
            "name": "stopScreen",
            "example": [
                "\n  function stopScreen () {\n    skylinkDemo.stopScreen();\n  }\n\n  skylinkDemo.shareScreen();"
            ],
            "trigger": "<ol class=\"desc-seq\">\n  <li><a href=\"#event_mediaAccessStopped\"><code>mediaAccessStopped</code> event</a> triggers parameter payload\n  <code>isScreensharing</code> value as <code>true</code>.</li>\n  <li>If User is in the Room, <a href=\"#event_streamEnded\"><code>streamEnded</code> event</a> triggers\n  parameter payload <code>isScreensharing</code> value as <code>true</code> and <code>isSelf</code> value\n  as <code>true</code>, and <a href=\"#event_peerUpdated\"><code>peerUpdated</code> event</a> triggers\n  parameter payload <code>isSelf</code> value as <code>true</code>.</li>\n  <li>If User has <a href=\"#method_getUserMedia\"><code>getUserMedia()</code> Stream</a> and is in the Room,\n  the Stream will be sent to Peers and <a href=\"#event_incomingStream\"><code>incomingStream</code> event</a>\n  triggers with parameter payload <code>isSelf</code> value as <code>true</code> using the\n  <a href=\"#method_getUserMedia\"><code>getUserMedia()</code> Stream</a>.</li>\n  <li>Invokes <a href=\"#method_refreshConnection\"><code>refreshConnection()</code> method</a>.</li></ol>",
            "since": "0.6.0",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 1361,
            "description": "Function that handles the native <code>navigator.getUserMedia()</code> API success callback result.",
            "itemtype": "method",
            "name": "_onUserMediaSuccess",
            "access": "private",
            "tagname": "",
            "since": "0.3.0",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 1466,
            "description": "Function that handles the native <code>navigator.getUserMedia()</code> API failure callback result.",
            "itemtype": "method",
            "name": "_onUserMediaError",
            "access": "private",
            "tagname": "",
            "since": "0.5.4",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 1515,
            "description": "Function that handles the <code>RTCPeerConnection.onaddstream</code> remote MediaStream received.",
            "itemtype": "method",
            "name": "_onRemoteStreamAdded",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 1551,
            "description": "Function that parses the <code>getUserMedia()</code> audio settings provided.\nThis parses correctly for the native <code>navigator.getUserMedia()</code> API audio constraints and\n  sets any missing values to default.",
            "itemtype": "method",
            "name": "_parseAudioStreamSettings",
            "access": "private",
            "tagname": "",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 1596,
            "description": "Function that parses the <code>getUserMedia()</code> video settings provided.\nThis parses correctly for the native <code>navigator.getUserMedia()</code> API video constraints and\n  sets any missing values to default.",
            "itemtype": "method",
            "name": "_parseVideoStreamSettings",
            "access": "private",
            "tagname": "",
            "since": "0.5.8",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 1672,
            "description": "Function that parses the <code>joinRoom()</code> bandwidth settings provided.\nThis parses and sets any missing values to default.",
            "itemtype": "method",
            "name": "_parseBandwidthSettings",
            "access": "private",
            "tagname": "",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 1702,
            "description": "Function that parses the <code>getUserMedia()</code> audio/video mute settings provided.\nThis parses and sets any missing values to default.",
            "itemtype": "method",
            "name": "_parseMutedSettings",
            "access": "private",
            "tagname": "",
            "since": "0.5.5",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 1726,
            "description": "Function that parses the <code>getUserMedia()</code> default settings received from the API result.",
            "itemtype": "method",
            "name": "_parseDefaultMediaStreamSettings",
            "access": "private",
            "tagname": "",
            "since": "0.5.7",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 1753,
            "description": "Function that parses the <code>getUserMedia()</code> settings provided.",
            "itemtype": "method",
            "name": "_parseMediaStreamSettings",
            "access": "private",
            "tagname": "",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 1789,
            "description": "Function that sets User's Stream to send to Peer connection.\nPriority for <code>shareScreen()</code> Stream over <code>getUserMedia()</code> Stream.",
            "itemtype": "method",
            "name": "_addLocalMediaStreams",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 1862,
            "description": "Function that handles the muting of Stream audio and video tracks.",
            "itemtype": "method",
            "name": "_muteLocalMediaStreams",
            "access": "private",
            "tagname": "",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 1963,
            "description": "Function that handles stopping the Stream streaming.",
            "itemtype": "method",
            "name": "_stopLocalMediaStreams",
            "access": "private",
            "tagname": "",
            "since": "0.6.3",
            "class": "Skylink"
        },
        {
            "file": "source/stream-media.js",
            "line": 2058,
            "description": "Function that waits for Stream to be retrieved before firing callback.",
            "itemtype": "method",
            "name": "_waitForLocalMediaStream",
            "access": "private",
            "tagname": "",
            "since": "0.5.6",
            "class": "Skylink"
        },
        {
            "file": "source/stream-sdp.js",
            "line": 1,
            "description": "Function that modifies the SessionDescription string to enable OPUS stereo.",
            "itemtype": "method",
            "name": "_addSDPStereo",
            "access": "private",
            "tagname": "",
            "since": "0.5.10",
            "class": "Skylink"
        },
        {
            "file": "source/stream-sdp.js",
            "line": 56,
            "description": "Function that modifies the SessionDescription string to set the video resolution.\nThis is not even supported in the specs, and we should re-evalute it to be removed.",
            "itemtype": "method",
            "name": "_setSDPVideoResolution",
            "access": "private",
            "tagname": "",
            "since": "0.5.10",
            "class": "Skylink"
        },
        {
            "file": "source/stream-sdp.js",
            "line": 141,
            "description": "Function that modifies the SessionDescription string to set the sending bandwidth.\nSetting this may not necessarily work in Firefox.",
            "itemtype": "method",
            "name": "_setSDPBitrate",
            "access": "private",
            "tagname": "",
            "since": "0.5.10",
            "class": "Skylink"
        },
        {
            "file": "source/stream-sdp.js",
            "line": 225,
            "description": "Function that modifies the SessionDescription string to set the preferred sending video codec.",
            "itemtype": "method",
            "name": "_setSDPVideoCodec",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/stream-sdp.js",
            "line": 278,
            "description": "Function that modifies the SessionDescription string to set the preferred sending audio codec.",
            "itemtype": "method",
            "name": "_setSDPAudioCodec",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/stream-sdp.js",
            "line": 330,
            "description": "Function that modifies the SessionDescription string to remove the experimental H264 Firefox flag\n  that is breaking connections.\nTo evaluate removal of this change once we roll out H264 codec interop.",
            "itemtype": "method",
            "name": "_removeSDPFirefoxH264Pref",
            "access": "private",
            "tagname": "",
            "since": "0.5.2",
            "class": "Skylink"
        },
        {
            "file": "source/stream-sdp.js",
            "line": 349,
            "description": "Function that modifies the SessionDescription string to set with the correct MediaStream ID and\n  MediaStreamTrack IDs that is not provided from Firefox connection to Chromium connection.",
            "itemtype": "method",
            "name": "_addSDPSsrcFirefoxAnswer",
            "access": "private",
            "tagname": "",
            "since": "0.6.6",
            "class": "Skylink"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: trigger",
            "line": " source/data-transfer.js:201"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/data-transfer.js:528"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/data-transfer.js:558"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/data-transfer.js:660"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/data-transfer.js:660"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/data-transfer.js:697"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/data-transfer.js:804"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/data-transfer.js:930"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/peer-connection.js:108"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/peer-connection.js:317"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/peer-data.js:42"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/peer-privileged.js:90"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/peer-privileged.js:180"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/room-connection.js:124"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/room-connection.js:457"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/room-connection.js:583"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/room-connection.js:605"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/room-init.js:315"
        },
        {
            "message": "unknown tag: scoped",
            "line": " source/skylink-debug.js:31"
        },
        {
            "message": "unknown tag: scoped",
            "line": " source/skylink-debug.js:44"
        },
        {
            "message": "unknown tag: scoped",
            "line": " source/skylink-debug.js:55"
        },
        {
            "message": "unknown tag: scoped",
            "line": " source/skylink-debug.js:68"
        },
        {
            "message": "unknown tag: scoped",
            "line": " source/skylink-debug.js:81"
        },
        {
            "message": "unknown tag: scoped",
            "line": " source/skylink-debug.js:93"
        },
        {
            "message": "unknown tag: scoped",
            "line": " source/skylink-debug.js:106"
        },
        {
            "message": "unknown tag: scoped",
            "line": " source/skylink-debug.js:117"
        },
        {
            "message": "unknown tag: scoped",
            "line": " source/skylink-debug.js:138"
        },
        {
            "message": "unknown tag: scoped",
            "line": " source/skylink-debug.js:150"
        },
        {
            "message": "unknown tag: triggerforprophacknone",
            "line": " source/skylink-debug.js:189"
        },
        {
            "message": "unknown tag: triggerforprophacknone",
            "line": " source/skylink-debug.js:216"
        },
        {
            "message": "unknown tag: triggerforprophacknone",
            "line": " source/skylink-debug.js:230"
        },
        {
            "message": "unknown tag: scoped",
            "line": " source/skylink-debug.js:246"
        },
        {
            "message": "unknown tag: scoped",
            "line": " source/skylink-debug.js:315"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/socket-message.js:100"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/stream-media.js:349"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/stream-media.js:639"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/stream-media.js:854"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/stream-media.js:880"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/stream-media.js:995"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/stream-media.js:1019"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/stream-media.js:1043"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/stream-media.js:1092"
        },
        {
            "message": "unknown tag: trigger",
            "line": " source/stream-media.js:1303"
        },
        {
            "message": "Missing item type\nPolyfill for Object.keys() from Mozilla\nFrom https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys",
            "line": " source/template/header.js:5"
        },
        {
            "message": "Missing item type\nPolyfill for Date.getISOString() from Mozilla\nFrom https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString",
            "line": " source/template/header.js:45"
        },
        {
            "message": "Missing item type\nPolyfill for addEventListener() from Eirik Backer @eirikbacker (github.com).\nFrom https://gist.github.com/eirikbacker/2864711\nMIT Licensed",
            "line": " source/template/header.js:69"
        },
        {
            "message": "Missing item type\nGlobal function that clones an object.",
            "line": " source/template/header.js:103"
        },
        {
            "message": "Missing item type\n// resend if failed\nif (iceConnectionState === self.ICE_CONNECTION_STATE.FAILED) {\n  log.debug([targetMid, 'RTCIceConnectionState', null,\n    'Ice connection state failed. Re-negotiating connection']);\n  self._removePeer(targetMid);\n  self._sendChannelMessage({\n    type: self._SIG_MESSAGE_TYPE.WELCOME,\n    mid: self._user.sid,\n    rid: self._room.id,\n    agent: window.webrtcDetectedBrowser,\n    version: window.webrtcDetectedVersion,\n    userInfo: self.getPeerInfo(),\n    target: targetMid,\n    restartNego: true,\n    hsPriority: -1\n  });",
            "line": " source/peer-connection.js:1101"
        },
        {
            "message": "Missing item type\n/**\n* <blockquote class=\"info\"><b>Deprecation Warning!</b>\n*   This method has been deprecated. Use <a href=\"#method_muteStream\"><code>muteStream()</code> method</a> instead.\n* </blockquote>\n* Function that mutes both <a href=\"#method_getUserMedia\"><code>getUserMedia()</code> Stream</a> and\n* <a href=\"#method_shareScreen\"><code>shareScreen()</code> Stream</a> video tracks.\n* @method disableVideo\n* @deprecated true\n* @example\n*   function muteVideo () {\n*     skylinkDemo.disableVideo();\n*   }\n* @trigger <ol class=\"desc-seq\">\n*   <li>Invokes <a href=\"#method_muteStream\"><code>muteStream()</code> method</a> with\n*   <code>options.videoMuted</code> value as <code>true</code>.</li></ol>\n* @for Skylink\n* @since 0.5.5",
            "line": " source/stream-media.js:1067"
        }
    ]
}